<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Image Analysis</title>
    <url>/2020/03/17/2020-03-17-csci343-challenge3/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<ul>
<li><strong>Submission Window Opens</strong>: Thursday, March 19</li>
<li><strong>Objective</strong>:<ol>
<li>Perform basic image analysis</li>
<li>Use <code>NumPy</code> for data conversion</li>
</ol>
</li>
</ul>
<h2 id="Assignment"><a href="#Assignment" class="headerlink" title="Assignment"></a>Assignment</h2><p>당신은 대학교를 졸업한 이후 이탈리아 보안 감시 회사인 Surveilco에 데이터 과학자로 고용되어 일하고 있습니다. 회사는 기본적인 이미지 분석을 통해 보안 제품 개선을 꾀하고 있는 것 같습니다. 최근에 UM을 졸업한 당신에게 그들은 당신이 그 일에 가장 적합한 데이터 과학자 중 한 명이라는 것을 알고 있는 것 같군요.</p>
<p>회사의 비디오 시스템은 네트워크 연결을 통해 일련의 JPEG 이미지를 제공하고 있습니다. 회사는 당신에게 일을 시작하기 위한 샘플 데이터 세트를 제공하였습니다. 데이터 세트는 실제 소스에서 캡처한 200개의 JPEG 형식의 이미지로 구성되어 있습니다. 불행히도 카메라를 위해 코드를 작성한 네트워크 프로그래머들은 당신만큼 능숙하지 않은 것 같군요. 그 결과 약 5%의 이미지가 손상되어 사용할 수 없게 되었습니다…</p>
<p>코드 작성을 시작하기 전에 데이터 세트에서 이러한 손상된 이미지를 제거해야 할 것 같군요. (시작하기 전에 실제로 데이터를 살펴봐야 합니다.)이는 당신이 직접 찾아서 제거하거나 프로그램을 작성하여 제거 할 수 있습니다. 어쨌든, 이런 손상된 이미지들을 제거해야 하는 것은 명백합니다.</p>
<p>수업시간에 우리는 디지털 이미지는 사실 숫자 배열의 한 종류라는 것을 관찰했습니다. 이를 통해 우리는 이미지에 대해 수학적 연산을 수행할 수 있다고 추론할 수 있겠군요? 사실 우리는 할 수 있습니다! 수업시간에, 우리는 평균 영상과 차이가 나는 영상을 계산하는 예제를 살펴보았습니다.</p>
<p>이 과제에서, 당신은 평균 영상과 표준 편차 영상을 계산하게 될 것 입니다. 당신의 이미지는 정규적인 수학적 변수와 같이 취급될 수 있으므로, 당신은 당신이 작성한 평균 및 표준 편차 공식에서 그것들을 직접 사용할 수 있어야 함을 명심하십시오.</p>
<h3 id="What-exactly-should-I-do"><a href="#What-exactly-should-I-do" class="headerlink" title="What exactly should I do?"></a>What exactly should I do?</h3><p>당신의 과제는 일련의 영상을 분석하고, 평균 이미지를 계산하고, 표준 편차 이미지를 계산한 다음, 변화 영역이 빨간색으로 강조 표시된 평균 영상을 표시하는 것입니다 (*예시 이미지 아래 첨부)</p>
<!-- <a class="gallery-item"><img class="example ..&#x2F;..&#x2F;..&#x2F;..&#x2F;img&#x2F;csci343-ch3&#x2F;example.jpg 500 500"></a> -->
<p><a href="../../../../img/csci343-ch3/example.jpg" title="example" class="gallery-item"><img src="../../../../img/csci343-ch3/example.jpg" alt="example"></a></p>
<ul>
<li><p>프로그램은 사용자에게 0에서 255 사이의 임의의 값을 입력하도록 요청해야 합니다.(입력이 적절한지 확인하기 위해 프로그램이 확인하십시오).</p>
</li>
<li><p>이 값은 픽셀을 강조 표시하는 데 필요한 최소 표준 편차를 나타냅니다.</p>
</li>
<li><p>강조 표시를 하려면 평균 이미지의 픽셀을 순환하고 해당 픽셀의 색상을 하이라이트 색상으로 변경해야 하지만, <span class="label danger">픽셀의 표준 편차가 임계값보다 높은 경우에만</span> 해당 색상을 변경해야 합니다.</p>
</li>
<li><p>예를 들어, 영상에서 픽셀을 빨간색으로 설정하려면 다음과 같이 작성해야 합니다.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">avg_image[row][column]=[<span class="number">255.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>]</span><br></pre></td></tr></table></figure>
</li>
<li><p>당신은 당신의 소스 코드와 필터링된 이미지 데이터를 제출해야 합니다.</p>
</li>
<li><p>또한 출력 그림의 이미지(MatPlotLib 창에 이 작업을 수행할 버튼이 있음)를 저장하고 코드로 제출하십시오.</p>
</li>
</ul>
<hr>
<h2 id="Composition-of-an-image"><a href="#Composition-of-an-image" class="headerlink" title="Composition of an image"></a>Composition of an image</h2><p>이번 과제에서는 먼저 이미지를 본격적으로 다루기 이전 이미지가 어떻게 이루어져 있는지, 또한 어떻게 다룰 수 있는지를 살펴보자. 먼저 이미지의 구성을 보다 더 쉽게 파악하기 위해 7X7 이미지를 가져 왔다.</p>
<ul>
<li>실제 이미지는 매우 작아 확인하기 어렵기에 아래 그림은 확대시킨 캡쳐본이다.</li>
<li>내모 1칸이 1px이다.</li>
</ul>
<p><a href="../../../../img/img_analysis/green.JPG" title="example" class="gallery-item"><img src="../../../../img/img_analysis/green.JPG" alt="example"></a></p>
<p>이제 이 이미지를 2차원 배열 형태로 변환시켜보자.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">green = np.array(Image.open(<span class="string">'green.png'</span>))</span><br><span class="line">print(green)</span><br></pre></td></tr></table></figure>

<p>위에서 <code>PIL</code> 모듈 기능을 이용하여 이미지를 열고 <code>numpy</code>를 이용해 이미지를 2차원 배열로 변환시켰다. 2차원 배열의 내용은 아래와 같다.</p>
<figure class="highlight plain"><figcaption><span>results</span></figcaption><table><tr><td class="code"><pre><span class="line">[  [[  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]   --&gt; □□□□□□□</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]]</span><br><span class="line"></span><br><span class="line">   [[  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [ 17 255 119 255]   --&gt; □■■■■■□  </span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]]</span><br><span class="line"></span><br><span class="line">   [[  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]   --&gt; □■□■□■□</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]]</span><br><span class="line"></span><br><span class="line">   [[  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]   --&gt; □■□□□■□</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]]</span><br><span class="line"></span><br><span class="line">   [[  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]   --&gt; □■□■□■□</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]]</span><br><span class="line"></span><br><span class="line">   [[  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [ 17 255 119 255]   --&gt; □■■■■■□</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]]</span><br><span class="line"></span><br><span class="line">   [[  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]   --&gt; □□□□□□□</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]]]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>result</strong></p>
<pre style = "line-height: 1">
[1]: □ □ □ □ □ □ □
[2]: □ <font style="color:#11ff77;">■ ■ ■ ■ ■</font> □
[3]: □ <font style="color:#11ff77;">■</font> □ <font style="color:#11ff77;">■</font> □ <font style="color:#11ff77;">■</font> □
[4]: □ <font style="color:#11ff77;">■</font> □ □ □ <font style="color:#11ff77;">■</font> □
[5]: □ <font style="color:#11ff77;">■</font> □ <font style="color:#11ff77;">■</font> □ <font style="color:#11ff77;">■</font> □
[6]: □ <font style="color:#11ff77;">■ ■ ■ ■ ■</font> □
[7]: □ □ □ □ □ □ □

[□/<font style="color:#11ff77;">■</font> : {w: 1px, h: 1px}]
</pre>

<pre style = "line-height: 0.5">
□□□□□□□
□<font style="color:#11ff77;">■■■■■</font>□
□<font style="color:#11ff77;">■</font>□<font style="color:#11ff77;">■</font>□<font style="color:#11ff77;">■</font>□
□<font style="color:#11ff77;">■</font>□□□<font style="color:#11ff77;">■</font>□
□<font style="color:#11ff77;">■</font>□<font style="color:#11ff77;">■</font>□<font style="color:#11ff77;">■</font>□
□<font style="color:#11ff77;">■■■■■</font>□
□□□□□□□
</pre>

<ul>
<li>즉, 위의 결과와 같이 행 7, 열 7칸으로 이루어진 2차원 배열로 변환된다.</li>
<li>이때 각 행과 열은 이미지 7x7 크기에 따라 행과 열로 그대로 변환된 결과이다.</li>
<li>또한 이를 세부적으로 보자면,</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[  [[  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]   --&gt; □□□□□□□</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]]</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>

<ul>
<li>여기서 제일 안쪽의 리스트들은 □□□□□□□ 에서 □ 한칸, 즉 1개의 픽셀을 가리킨다.</li>
<li>또한 숫자 <code>[0 0 0 0]</code>과 같은 수치는 <strong>RGBA</strong> 를 가리킨다. 따라서 [0 0 0 0]은 <code>RGBA(0,0,0,0)</code> 이다.</li>
<li>RGB는 각각 RED, GREEN, BLUE로 삼원색을 가리키며, A는 <code>Alpha Channel</code>로 색상의 투명도를 나타낸다.</li>
<li>이 속성은 0에 가까워 질수록 점점 투명한 상태로 바뀐다. (min: 0, max: 255)</li>
<li>따라서 위의 경우 완전히 투명한 색이다.</li>
</ul>
<p>따라서 만약 각 픽셀 혹은 한 행, 한 열을 다른 색으로 변경하고 싶다면 이 <strong>RGBA</strong> 를 변경하면 된다. 주의할 점은 <code>.png</code>파일의 경우 RGBA로 나오는 경우도 있지만 jpg나 jpeg 등은 대부분 <strong>RGB</strong> 형식이다.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">green[<span class="number">0</span>][:len(green[<span class="number">0</span>])<span class="number">-1</span>] = [<span class="number">255.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">255.0</span>] <span class="comment"># Change the one column color's to RED. </span></span><br></pre></td></tr></table></figure>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Data Science</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Olemiss</tag>
        <tag>CSCI 343</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Codeblock Test</title>
    <url>/2020/03/02/2020-03-02-codeblock-test/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Tag-Plugins"><a href="#Tag-Plugins" class="headerlink" title="Tag Plugins"></a>Tag Plugins</h2><p>Tag plugins are different from post tags. They are ported from Octopress and provide a useful way for you to quickly add specific content to your posts.</p>
<h3 id="Block-Quote"><a href="#Block-Quote" class="headerlink" title="Block Quote"></a>Block Quote</h3><p>Perfect for adding quotes to your post, with optional author, source and title information.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><p>No arguments. Plain blockquote.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span><br><span class="line">Pellentesque hendrerit lacus ut purus iaculis feugiat.</span><br><span class="line">Sed nec tempor elit, quis aliquam neque.</span><br><span class="line">Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>

<blockquote><p><strong>NOTE</strong><br>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<br>Pellentesque hendrerit lacus ut purus iaculis feugiat.<br>Sed nec tempor elit, quis aliquam neque.<br>Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>
</blockquote>

<hr>
<p><strong>Quote from a book</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class="line">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>

<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>
<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>

<hr>
<p><strong>Quote from Twitter</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote @DevDocs https:&#x2F;&#x2F;twitter.com&#x2F;devdocs&#x2F;status&#x2F;356095192085962752 %&#125;</span><br><span class="line">NEW: DevDocs now comes with syntax highlighting. http:&#x2F;&#x2F;devdocs.io</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>

<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io" target="_blank" rel="noopener">http://devdocs.io</a></p>
<footer><strong>@DevDocs</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752" target="_blank" rel="noopener">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>

<hr>
<p><strong>Quote from an article on the web</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote Seth Godin http:&#x2F;&#x2F;sethgodin.typepad.com&#x2F;seths_blog&#x2F;2009&#x2F;07&#x2F;welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</span><br><span class="line">Every interaction is both precious and an opportunity to delight.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>

<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="noopener">Welcome to Island Marketing</a></cite></footer></blockquote>

<hr>
<h3 id="Code-Block"><a href="#Code-Block" class="headerlink" title="Code Block"></a>Code Block</h3><p>Useful feature for adding code snippets to your post.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock [title] [lang:language] [url] [link text] [additional options] %&#125;</span><br><span class="line">code snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>

<p>Specify additional options in <code>option:value</code> format, e.g. <code>line_number:false first_line:5</code>.</p>
<table>
<thead>
<tr>
<th align="left">Extra Options</th>
<th align="left">Description</th>
<th align="left">Default</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>line number</code></td>
<td align="left">Show line number</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>highlight</code></td>
<td align="left">Enable code highlighting</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>first_line</code></td>
<td align="left">Specify the first line number</td>
<td align="left"><code>1</code></td>
</tr>
<tr>
<td align="left"><code>mark</code></td>
<td align="left">Line highlight specific line(s), each value separated by a comma. Specify number range using a dash Example: mark:1 4-7,10 will mark line 1, 4 to 7 and 10.</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>wrap</code></td>
<td align="left">Wrap the code block in <code>&lt;table&gt;</code></td>
<td align="left"><code>true</code></td>
</tr>
</tbody></table>
<hr>
<h4 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h4><p><strong>A plain code block</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock %&#125;</span><br><span class="line">alert(&#39;Hello World!&#39;);</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><figcaption><span>Hello World!</span></figcaption><table><tr><td class="code"><pre><span class="line">alert(&#39;Hello World!&#39;);</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>Specifying the language</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock lang:objc %&#125;</span><br><span class="line">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight objc"><figcaption><span>Lang: objective C</span></figcaption><table><tr><td class="code"><pre><span class="line">[rectangle setX: <span class="number">10</span> y: <span class="number">10</span> width: <span class="number">20</span> height: <span class="number">20</span>];</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>Adding a caption and a URL</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock _.compact http:&#x2F;&#x2F;underscorejs.org&#x2F;#compact Underscore.js %&#125;</span><br><span class="line">_.compact([0, 1, false, 2, &#39;&#39;, 3]);</span><br><span class="line">&#x3D;&gt; [1, 2, 3]</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><figcaption><span>_.compact</span><a href="http://underscorejs.org/#compact" target="_blank" rel="noopener">Underscore.js</a></figcaption><table><tr><td class="code"><pre><span class="line">_.compact([0, 1, false, 2, &#39;&#39;, 3]);</span><br><span class="line">&#x3D;&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="Backtick-Code-Block"><a href="#Backtick-Code-Block" class="headerlink" title="Backtick Code Block"></a>Backtick Code Block</h3><p>This is identical to using a code block, but instead uses three backticks to delimit the block.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[language] [title] [url] [link text] code snippet</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>Pull Quote</strong><br>To add pull quotes to your posts:</p>
<figure class="highlight plain"><figcaption><span>Pull Quote</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% pullquote [class] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>jsFiddle</strong><br>To embed a jsFiddle snippet:</p>
<figure class="highlight plain"><figcaption><span>jsFiddle</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>Gist</strong><br>To embed a Gist snippet:</p>
<figure class="highlight plain"><figcaption><span>Gist</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>iframe</strong><br>To embed an iframe:</p>
<figure class="highlight plain"><figcaption><span>iframe</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>Image</strong><br>Inserts an image with specified size.</p>
<figure class="highlight plain"><figcaption><span>image</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% img [class names] &#x2F;path&#x2F;to&#x2F;image [width] [height] &#39;&quot;title text&quot; &quot;alt text&quot;&#39; %&#125;</span><br></pre></td></tr></table></figure>

<p>&nbsp;<br>For Example:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% img thumbnail https:&#x2F;&#x2F;images.pexels.com&#x2F;photos&#x2F;3375997&#x2F;pexels-photo-3375997.jpeg?auto&#x3D;compress</span><br><span class="line">&amp;cs&#x3D;tinysrgb&amp;dpr&#x3D;1&amp;w&#x3D;500 160 200 &#39;&quot;Tokyo, Japen&quot; &quot;Not Available&quot;&#39; %&#125;</span><br></pre></td></tr></table></figure>

<a href="https://images.pexels.com/photos/3375997/pexels-photo-3375997.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500" title="Not Available" class="gallery-item"><img src="https://images.pexels.com/photos/3375997/pexels-photo-3375997.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500" class="thumbnail" width="160" height="200" title="Tokyo, Japen" alt="Not Available"></a>

<hr>
<p><strong>LINK</strong><br>Inserts a link with <code>target = &quot;_blank&quot;</code> attribute</p>
<figure class="highlight plain"><figcaption><span>Link</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="Include-Code"><a href="#Include-Code" class="headerlink" title="Include Code"></a>Include Code</h3><p>Inserts code snippets in <code>source/downloads/code</code> folder. The folder location can be specified through the <code>code_dir</code> option in the config.</p>
<figure class="highlight plain"><figcaption><span>Include Code</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% include_code [title] [lang:language] [from:line] [to:line] path&#x2F;to&#x2F;file %&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Example-2"><a href="#Example-2" class="headerlink" title="Example"></a>Example</h4><p><strong>Embed the whole content of test.js</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include_code lang:javascript test.js %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Embed line 3 only</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include_code lang:javascript from:3 to:3 test.js %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Embed line 5 to 8</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include_code lang:javascript from:5 to:8 test.js %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Embed line 5 to the end of file</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include_code lang:javascript from:5 test.js %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Embed line 1 to 8</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include_code lang:javascript to:8 test.js %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p>Like so, Type the <strong><code>```</code></strong> below the code block</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;&#96;&#96;py Hello world https:&#x2F;&#x2F;github.com&#x2F;r4meau hello_world.py</span><br><span class="line">print &quot;Hello World!&quot;&#96;&#96;&#96; </span><br></pre></td></tr></table></figure>

<figure class="highlight py"><figcaption><span>Hello world</span><a href="https://github.com/r4meau" target="_blank" rel="noopener">hello_world.py</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="string">"Hello World!"</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a>YouTube</h3><p>Inserts a YouTube video.</p>
<figure class="highlight plain"><figcaption><span>YouTube</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% youtube video_id %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Vimeo"><a href="#Vimeo" class="headerlink" title="Vimeo"></a>Vimeo</h3><p>Inserts a responsive or specified size Vimeo video.</p>
<figure class="highlight plain"><figcaption><span>Vimeo</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% vimeo video_id [width] [height] %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Include-Posts"><a href="#Include-Posts" class="headerlink" title="Include Posts"></a>Include Posts</h3><p>Include links to other posts.</p>
<figure class="highlight plain"><figcaption><span>Include Posts</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% post_path filename %&#125;</span><br><span class="line">&#123;% post_link filename [title] [escape] %&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://hexo.io/docs/tag-plugins.html#Code-Block" title="" target="">Tag Plugins</a></li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Blog</category>
        <category>TAG-PLUGINS</category>
      </categories>
  </entry>
  <entry>
    <title>Sentiment Analysis</title>
    <url>/2020/02/28/2020-02-26-csci343-challenge2/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<ul>
<li><strong>Submission Window Opens</strong>: Friday, February 28</li>
<li><strong>Objective</strong>:<ol>
<li>Implement basic sentiment analysis</li>
<li>Familiarize yourself with <code>MatPlotLib</code> by visualizing your results</li>
</ol>
</li>
</ul>
<h2 id="Assignment"><a href="#Assignment" class="headerlink" title="Assignment"></a>Assignment</h2><p>당신은 텔레비전 방송국의 시범부와 계약하였습니다. 그들은 무엇이 TV 시리즈를 히트시키거나 빗나가게 하는지를 결정하기 위해 데이터 과학을 사용하는 텔레비전의 최첨단 기술에 관심이 있습니다.</p>
<p><a href="http://www.programmersought.com/images/262/05e075183140efc5c169148cd2abbe5e.png" title="Netflix recommendation system" class="gallery-item"><img src="http://www.programmersought.com/images/262/05e075183140efc5c169148cd2abbe5e.png" alt="Netflix recommendation system"></a></p>
<p>그들은 더 행복하고, 더 긍정적으로 쓰여진 대본이 더 많은 시청자들을 끌어들인다는 가설을 세웠습니다. 데이터 과학자인 당신은 회의적이어서 두 개의 TV 시리즈에 나오는 대본의 평균 감정 점수(average sentiment scores)를 비교함으로써 그들의 가설을 시험하기로 결정했습니다.</p>
<p>한 TV 시리즈는 어느 정도 인기가 있는 수준이었으며(A시리즈) 다른 한 편은 인기가 엄청난 수준이었습니다(B시리즈). 이 데이터를 이용해 그들의 가설을 뒷받침할 수 있는지의 여부를 결정해 봅시다!</p>
<p>당신은 자료의 말뭉치를 제공받았습니다. 구체적으로는 각 TV시리즈의 첫 시즌부터 각 에피소드의 대본을 방송국에서 제공하였습니다. 이 대본들은 시리즈 A의 경우 <code>a##script.txt</code>와 시리즈 B의 경우 <code>b##script.txt</code> 형식의 이름을 가진 텍스트 파일로 주어졌습니다. 당신은 제공된 감정 어휘(sentiment lexicon)를 사용하여 이 대본에 사용된 문구의 정서를 분석해야 합니다.</p>
<h3 id="DATA"><a href="#DATA" class="headerlink" title="DATA"></a>DATA</h3><ol>
<li>데이터는 강의 자료 웹사이트에서 스탠포드 대학의 자연어 처리 그룹에 있는 사람들의 노력에 근거한 감정 어휘(sentiment lexicon)가 제공됩니다.</li>
<li>이 데이터는 첫 번째 열에 단어와 두 번째 열에 그 단어들의 감정 점수( sentiment scores)가  있는 CSV 파일입니다.</li>
<li>감정 점수는 -1.0에서 +1.0 (부정적 감정에서 긍정적 감정까지)까지 입니다..</li>
</ol>
<p><strong>E.g.</strong></p>
<table>
<thead>
<tr>
<th align="left">word</th>
<th align="left">sentiment score (-1.0 ~ 1.0)</th>
</tr>
</thead>
<tbody><tr>
<td align="left">secondly</td>
<td align="left">-0.062</td>
</tr>
<tr>
<td align="left">downvoting</td>
<td align="left">-0.17</td>
</tr>
<tr>
<td align="left">infographics</td>
<td align="left">0.272</td>
</tr>
<tr>
<td align="left">limited</td>
<td align="left">0.068</td>
</tr>
<tr>
<td align="left">child</td>
<td align="left">-0.056</td>
</tr>
<tr>
<td align="left">…</td>
<td align="left">…</td>
</tr>
</tbody></table>
<h3 id="Summary-amp-Tip"><a href="#Summary-amp-Tip" class="headerlink" title="Summary &amp; Tip"></a>Summary &amp; Tip</h3><p>즉 이번 과제는 감정 분석을 이용하여 Challenge 2 데이터 파일을 분석하는 것입니다.</p>
<ol>
<li>당신은 먼저 각 대본에 있는 모든 각 단어들의 목록을 만들고 각각의 단어들이 개수를 세야 할 필요가 있습니다.</li>
<li>감성 어휘를 사용하여, 당신은 그 단어들 중 몇 개가 긍정적이거나 부정적인 감정을 가지고 있는지를 결정할 필요가 있습니다.</li>
<li>일반적으로 중립적인(Neutral) 단어는 극적으로 양극화된 단어보다 훨씬 더 자주 나타납니다.</li>
<li>이와 같이, 이 데이터를 $log_{10}Y$ 축 단위로 시각화하는 것이 최선일 것입니다.</li>
<li>그런 다음 아래와 같은 단어의 수를 나타내는 <code>MatPlotLib</code>를 사용하여 히스토그램을 표시해야 합니다.</li>
</ol>
<table>
<thead>
<tr>
<th>Sentiment</th>
<th>$log$ Word Count</th>
</tr>
</thead>
<tbody><tr>
<td>Negative</td>
<td>$[-1.0, -0.6)$</td>
</tr>
<tr>
<td>Weakly Negative</td>
<td>$[-0.6, -0.2)$</td>
</tr>
<tr>
<td>Neutral</td>
<td>$[-0.2, -0.2]$</td>
</tr>
<tr>
<td>Weakly Positive</td>
<td>$(-0.2, 0.6]$</td>
</tr>
<tr>
<td>Positive</td>
<td>$(0.6, 1.0]$</td>
</tr>
</tbody></table>
<h3 id="NOTE"><a href="#NOTE" class="headerlink" title="NOTE"></a>NOTE</h3><ol>
<li>플롯 형식이 포함된 샘플(시리즈 이름이 포함된 축 레이블(axis labels) 및 제목(d title) 포함)과 일치하는지 확인하십시오.</li>
<li>프로그램 실행 시 표시할 영상 시리즈의 이름을 입력하라는 메시지가 표시되어야 합니다.[^1]</li>
</ol>
<p>[^1]: 아래 그림 참조</p>
<div class="pdf" target="../../../../pdf/Csci343/ch2/Challenge_2.pdf" height=""></div>

<hr>
<h2 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h2><p>I solved the challenge mainly using the <code>pandas</code>, <code>numpy</code>, <code>re</code>.</p>
<div class="tabs" id="fourth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fourth-unique-name-1">Modules</a></li><li class="tab"><a href="#fourth-unique-name-2">How to solve Problem?</a></li><li class="tab"><a href="#fourth-unique-name-3">Source Code</a></li></ul><div class="tab-content"><div class="tab-pane active" id="fourth-unique-name-1"><p><strong>Module</strong></p>
<ul>
<li><p><code>collections.Counter</code>: use for make the dicts for word count.</p>
 <div class="note ">
          <p> <strong>class</strong> collections.<strong>Counter</strong>([iterable-or-mapping]) <a href="https://docs.python.org/3/library/collections.html#collections.Counter" target="_blank" rel="noopener">¶</a></p><p>A Counter is a dict subclass for counting hashable objects. It is a collection where elements are stored as dictionary keys and their counts are stored as dictionary values. Counts are allowed to be any integer value including zero or negative counts. The Counter class is similar to bags or multisets in other languages.</p><p>Elements are counted from an iterable or initialized from another mapping (or counter):</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c = Counter()                           <span class="comment"># a new, empty counter</span></span><br><span class="line">c = Counter(<span class="string">'gallahad'</span>)                 <span class="comment"># a new counter from an iterable</span></span><br><span class="line">c = Counter(&#123;<span class="string">'red'</span>: <span class="number">4</span>, <span class="string">'blue'</span>: <span class="number">2</span>&#125;)      <span class="comment"># a new counter from a mapping</span></span><br><span class="line">c = Counter(cats=<span class="number">4</span>, dogs=<span class="number">8</span>)             <span class="comment"># a new counter from keyword args</span></span><br></pre></td></tr></table></figure>
        </div></li>
<li><p><code>numpy</code>: To visualize the data on a $log_{10}Y$ axis scale.</p>
</li>
<li><p><code>os.listdir(path)</code><br>os.listdir() method in python is used to get the list of all files and directories in the specified directory. If we don’t specify any directory, then list of files and directories in the current working directory will be returned.</p>
<div class="note info no-icon">
          <p><a href="https://www.geeksforgeeks.org/python-os-listdir-method/" target="_blank" rel="noopener">Python | os.listdir() method</a></p>
        </div>
</li>
<li><p><code>re</code><br>This module provides regular expression matching operations similar to those found in Perl.</p>
<p>Both patterns and strings to be searched can be Unicode strings (str) as well as 8-bit strings (bytes). However, Unicode strings and 8-bit strings cannot be mixed: that is, you cannot match a Unicode string with a byte pattern or vice-versa; similarly, when asking for a substitution, the replacement string must be of the same type as both the pattern and the search string.</p>
<div class="note ">
          <p>re.<strong>findall</strong>(pattern, string, flags=0) <a href="https://docs.python.org/3/library/re.html#re.findall" target="_blank" rel="noopener">¶</a></p><p>Return all non-overlapping matches of pattern in string, as a list of strings. The string is scanned <code>left-to-right</code>, and matches are returned in the order found. If one or more groups are present in the pattern, return a list of groups;</p><p>this will be a list of tuples if the pattern has more than one group. Empty matches are included in the result.</p>
        </div>
</li>
<li><p><code>os.path</code><br><ins>os.path</ins> module is submodule of OS module in Python used for common pathname manipulation. to get the data’s path, I used the</p>
<ol>
<li><strong><code>os.path.dirname()</code></strong>: To get the python file’s parent file name.</li>
<li><strong><code>os.path.join()</code></strong>:  combine the file names to make the absolute path.</li>
<li><strong><code>os.path.splitext()</code></strong>: To split the path name into a pair <em>root</em> and <em>ext</em>(<code>.py</code>).</li>
</ol>
<hr>
<p><strong>Example</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> splitext</span><br><span class="line">path = <span class="string">b'https://docs.python.org/2/library/base64.html'</span></span><br><span class="line"></span><br><span class="line">dir_lst = list(splitext(path.decode()))</span><br><span class="line"><span class="comment"># note that splitext() returns tuple</span></span><br><span class="line"></span><br><span class="line">name, ext = dir_lst[<span class="number">0</span>].replace(<span class="string">'/'</span>, <span class="string">' '</span>).split()[<span class="number">-1</span>], dir_lst[<span class="number">-1</span>]</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">name = 'base64'</span></span><br><span class="line"><span class="string">ext = '.html'</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">file_name = name + ext</span><br><span class="line">print(file_name)</span><br><span class="line"><span class="comment"># 'base64.html'</span></span><br></pre></td></tr></table></figure>

<p><strong>All modules</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> log10</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> listdir</span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> dirname, join, splitext</span><br><span class="line"><span class="keyword">from</span> re <span class="keyword">import</span> findall</span><br><span class="line"></span><br><span class="line"><span class="comment"># For the test</span></span><br><span class="line"><span class="keyword">from</span> timeit <span class="keyword">import</span> Timer</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></table></figure>

</li>
</ul></div><div class="tab-pane" id="fourth-unique-name-2"><ol>
<li>Prompt input the series name from user (e.g. a###.script, bg###.script)</li>
<li>Get the file list from current file using <code>listdir</code>, then make a list about file names about user input<ul>
<li>If user input <code>a</code>, then need to make a list about <strong>a###.script</strong> files list.</li>
<li>Else, need to make series B’s list.</li>
</ul>
</li>
<li>Get Lexicon sentiment file to my codes</li>
<li>Make a word counter list using series file’s list (using regular expression)</li>
<li>Then, Inner join with lexicon sentiment</li>
<li>After join, calculate the sentiment score using the result No.5.</li>
<li>Display the plot using it.</li>
</ol></div><div class="tab-pane" id="fourth-unique-name-3"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> log10, sum</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> listdir</span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> dirname, join</span><br><span class="line"><span class="keyword">from</span> re <span class="keyword">import</span> findall</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># Prompt input from user</span></span><br><span class="line">series = input(<span class="string">"Enter the series name: "</span>).lower()</span><br><span class="line">series_name = series + chr(ord(<span class="string">'g'</span>) * (<span class="number">1</span> - (ord(series) &amp; <span class="number">1</span>))).rstrip(<span class="string">'\x00'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get file path</span></span><br><span class="line">dir = dirname(__file__)</span><br><span class="line">path = join(dir, <span class="string">"dataset"</span>, <span class="string">"data_ch2"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get lexicon sentiment</span></span><br><span class="line">lexicon_sentiment = pd.read_csv(join(dir, <span class="string">"dataset"</span>, <span class="string">"data_sent"</span>, <span class="string">"sentiment_lex.csv"</span>))</span><br><span class="line">lexicon_sentiment.columns = [<span class="string">"word"</span>, <span class="string">"score"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get filenames on list</span></span><br><span class="line">filenames = [f <span class="keyword">for</span> f <span class="keyword">in</span> listdir(path) <span class="keyword">if</span> series_name == f.split(<span class="string">"1"</span>)[<span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line">data = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> fname <span class="keyword">in</span> filenames:</span><br><span class="line">    <span class="keyword">with</span> open(join(path, fname), <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data += f.read()</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">pattern1: lexicon sentiment has '1+2', '1/2', 'r/sfsdf', etc --&gt; '\w+[-|+|/|.]\w+'</span></span><br><span class="line"><span class="string">pattern2: it also has '&lt;URL&gt;'-like format. --&gt; '&lt;\w+&gt;'</span></span><br><span class="line"><span class="string">pattern3: pure alphabet character --&gt; '\w+'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">combining those patterns --&gt; r'pattern1 | pattern2 | pattern3'</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">data = findall(<span class="string">r'\w+[-|+|/|.]\w+|&lt;\w+&gt;|\w+'</span>, data.lower())</span><br><span class="line">count = Counter(data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Convert counter(dicts) to DataFrame</span></span><br><span class="line">cnt_lst = pd.DataFrame.from_dict(count, orient=<span class="string">"index"</span>, ).reset_index()</span><br><span class="line">cnt_lst.columns = [<span class="string">"word"</span>, <span class="string">"count"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Inner join with lexicon sentiment</span></span><br><span class="line">cnt_lst = cnt_lst.join(lexicon_sentiment.set_index(<span class="string">"word"</span>), on=<span class="string">"word"</span>)</span><br><span class="line">cnt_lst = cnt_lst[cnt_lst[<span class="string">"score"</span>].notna()]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make new columns for sentiment.</span></span><br><span class="line">sentiment = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> cnt_lst[<span class="string">"score"</span>]:</span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">-1.0</span> <span class="keyword">and</span> x &lt; <span class="number">-0.6</span>:</span><br><span class="line">        sentiment.append(<span class="string">"Neg"</span>)</span><br><span class="line">    <span class="keyword">elif</span> x &gt;= <span class="number">-0.6</span> <span class="keyword">and</span> x &lt; <span class="number">-0.2</span>:</span><br><span class="line">        sentiment.append(<span class="string">"W.Neg"</span>)</span><br><span class="line">    <span class="keyword">elif</span> x &gt;= <span class="number">-0.2</span> <span class="keyword">and</span> x &lt;= <span class="number">0.2</span>:</span><br><span class="line">        sentiment.append(<span class="string">"Neu"</span>)</span><br><span class="line">    <span class="keyword">elif</span> x &gt; <span class="number">0.2</span> <span class="keyword">and</span> x &lt;= <span class="number">0.6</span>:</span><br><span class="line">        sentiment.append(<span class="string">"W.Pos"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        sentiment.append(<span class="string">"Pos"</span>)</span><br><span class="line"></span><br><span class="line">cnt_lst[<span class="string">"sentiment"</span>] = sentiment</span><br><span class="line">cnt_lst = cnt_lst.groupby(cnt_lst[<span class="string">"sentiment"</span>], as_index=<span class="literal">True</span>).agg(&#123;<span class="string">"count"</span>: <span class="string">"sum"</span>&#125;).agg(&#123;<span class="string">"count"</span>: <span class="string">"log10"</span>&#125;)</span><br><span class="line">cnt_lst = cnt_lst.reindex(index=[<span class="string">"Neg"</span>, <span class="string">"W.Neg"</span>, <span class="string">"Neu"</span>, <span class="string">"W.Pos"</span>, <span class="string">"Pos"</span>])</span><br><span class="line">print(cnt_lst)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Display the plot</span></span><br><span class="line">plt.title(<span class="string">"Sentiment Analysis for Series "</span> + series.upper())</span><br><span class="line">plt.xlabel(<span class="string">"Sentiment"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"log Word Count"</span>)</span><br><span class="line">plt.bar(cnt_lst.index, cnt_lst[<span class="string">"count"</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div></div></div>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Data Science</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Olemiss</tag>
        <tag>CSCI 343</tag>
      </tags>
  </entry>
  <entry>
    <title>NexT Theme Plugin</title>
    <url>/2020/02/24/2020-02-24-NexT-Theme-test/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<p>See this:</p>
<ul>
<li><a href="https://theme-next.org/docs/tag-plugins/button#" target="_blank" rel="noopener">https://theme-next.org/docs/tag-plugins/button#</a></li>
</ul>
<hr>
<h2 id="Centered-Quote"><a href="#Centered-Quote" class="headerlink" title="Centered Quote"></a>Centered Quote</h2><p>This tag will make a quote with two lines before and after it, and text quoted will be centered. When using centered quote, if we have multi-line text, and each line has a different length, the quote won’t be symmetrical, so it’s recommended to use when only have single line text. For example before article all after article to make a summary.</p>
<h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% centerquote %&#125;Something&#123;% endcenterquote %&#125;</span><br><span class="line">&lt;!-- Tag Alias --&gt;</span><br><span class="line">&#123;% cq %&#125;Something&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% cq %&#125;Elegant in code, simple in core&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>

<p>&nbsp;</p>
<blockquote class="blockquote-center"><p>Elegant in code, simple in core</p>
</blockquote>

<hr>
<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><h3 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">simple</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h3 id="Usage-1"><a href="#Usage-1" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">[class]   : default | primary | success | info | warning | danger.</span><br><span class="line">[no-icon] : Disable icon in note.</span><br><span class="line"></span><br><span class="line">All parameters are optional.</span><br></pre></td></tr></table></figure>

<div class="note danger">
            <h4 id="Known-Issues"><a href="#Known-Issues" class="headerlink" title="Known Issues"></a>Known Issues</h4><p>It’s wrong to write this tag with 1 line if you don’t want to see possible bugs.</p><p>For example, here is wrong syntax to write content like that:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note danger %&#125;note text, note text, note text&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>Or that,</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note danger %&#125;note text</span><br><span class="line">note text</span><br><span class="line">note text</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>Need to write content at new line, like this:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note danger %&#125;</span><br><span class="line">note text, note text, note text</span><br><span class="line">note text, note text, note text</span><br><span class="line">note text, note text, note text</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
          </div>

<hr>
<h3 id="Settings-1"><a href="#Settings-1" class="headerlink" title="Settings"></a>Settings</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note %&#125;</span><br><span class="line">#### Header</span><br><span class="line">(without define class style)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note ">
            <h4 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h4><p>(without define class style)</p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">#### Default Header</span><br><span class="line">Welcome to [Hexo!](https:&#x2F;&#x2F;hexo.io)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note default">
            <h4 id="Default-Header"><a href="#Default-Header" class="headerlink" title="Default Header"></a>Default Header</h4><p>Welcome to <a href="https://hexo.io" target="_blank" rel="noopener">Hexo!</a></p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note primary %&#125;</span><br><span class="line">#### Primary Header</span><br><span class="line">**Welcome** to [Hexo!](https:&#x2F;&#x2F;hexo.io)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note primary">
            <h4 id="Primary-Header"><a href="#Primary-Header" class="headerlink" title="Primary Header"></a>Primary Header</h4><p><strong>Welcome</strong> to <a href="https://hexo.io" target="_blank" rel="noopener">Hexo!</a></p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note info %&#125;</span><br><span class="line">### Info Header</span><br><span class="line">**Welcome** to [Hexo!](https:&#x2F;&#x2F;hexo.io)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note info">
            <h3 id="Info-Header"><a href="#Info-Header" class="headerlink" title="Info Header"></a>Info Header</h3><p><strong>Welcome</strong> to <a href="https://hexo.io" target="_blank" rel="noopener">Hexo!</a></p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note success %&#125;</span><br><span class="line">#### Success Header</span><br><span class="line">**Welcome** to [Hexo!](https:&#x2F;&#x2F;hexo.io)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note success">
            <h4 id="Success-Header"><a href="#Success-Header" class="headerlink" title="Success Header"></a>Success Header</h4><p><strong>Welcome</strong> to <a href="https://hexo.io" target="_blank" rel="noopener">Hexo!</a></p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note warning %&#125;</span><br><span class="line">#### Warning Header</span><br><span class="line">**Welcome** to [Hexo!](https:&#x2F;&#x2F;hexo.io)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note warning">
            <h4 id="Warning-Header"><a href="#Warning-Header" class="headerlink" title="Warning Header"></a>Warning Header</h4><p><strong>Welcome</strong> to <a href="https://hexo.io" target="_blank" rel="noopener">Hexo!</a></p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note danger %&#125;</span><br><span class="line">#### Danger Header</span><br><span class="line">**Welcome** to [Hexo!](https:&#x2F;&#x2F;hexo.io)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note danger">
            <h4 id="Danger-Header"><a href="#Danger-Header" class="headerlink" title="Danger Header"></a>Danger Header</h4><p><strong>Welcome</strong> to <a href="https://hexo.io" target="_blank" rel="noopener">Hexo!</a></p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note info no-icon %&#125;</span><br><span class="line">#### No icon note</span><br><span class="line">Note **without** icon: &#96;note info no-icon&#96;</span><br><span class="line"></span><br><span class="line">note info, note info, note info</span><br><span class="line">note info, note info, note info</span><br><span class="line">note info, note info, note info</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note info no-icon">
            <h4 id="No-icon-note"><a href="#No-icon-note" class="headerlink" title="No icon note"></a>No icon note</h4><p>Note <strong>without</strong> icon: <code>note info no-icon</code></p><p>note info, note info, note info<br>note info, note info, note info<br>note info, note info, note info</p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note success %&#125;</span><br><span class="line">#### Codeblock in note</span><br><span class="line">&#123;% code %&#125;</span><br><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br><span class="line">&#123;% endcode %&#125;</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note success">
            <h4 id="Codeblock-in-note"><a href="#Codeblock-in-note" class="headerlink" title="Codeblock in note"></a>Codeblock in note</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br></pre></td></tr></table></figure>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">#### Lists in note</span><br><span class="line">* ul</span><br><span class="line">* ul</span><br><span class="line">  * ul</span><br><span class="line">  * ul</span><br><span class="line">* ul</span><br><span class="line"></span><br><span class="line">1. ol</span><br><span class="line">2. ol</span><br><span class="line">  1. ol</span><br><span class="line">  2. ol</span><br><span class="line">3. ol</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note default">
            <h4 id="Lists-in-note"><a href="#Lists-in-note" class="headerlink" title="Lists in note"></a>Lists in note</h4><ul><li>ul</li><li>ul<ul><li>ul</li><li>ul</li></ul></li><li>ul</li></ul><ol><li>ol</li><li>ol</li><li>ol</li><li>ol</li><li>ol</li></ol>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">#### Table in Note</span><br><span class="line">| 1   | 2   |</span><br><span class="line">| --- | --- |</span><br><span class="line">| 3   | 4   |</span><br><span class="line">| 5   | 6   |</span><br><span class="line">| 7   | 8   |</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note default">
            <h4 id="Table-in-Note"><a href="#Table-in-Note" class="headerlink" title="Table in Note"></a>Table in Note</h4><table><thead><tr><th>1</th><th>2</th></tr></thead><tbody><tr><td>3</td><td>4</td></tr><tr><td>5</td><td>6</td></tr><tr><td>7</td><td>8</td></tr></tbody></table>
          </div>

<hr>
<h2 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h2><h3 id="Settings-2"><a href="#Settings-2" class="headerlink" title="Settings"></a>Settings</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tabs:</span><br><span class="line">  transition:</span><br><span class="line">    tabs: false</span><br><span class="line">    labels: true</span><br></pre></td></tr></table></figure>

<h3 id="Usage-2"><a href="#Usage-2" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">Unique name   : Unique name of tabs block tag without comma.</span><br><span class="line">                Will be used in #id&#39;s as prefix for each tab with their index numbers.</span><br><span class="line">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span><br><span class="line">                Only for current url of post&#x2F;page must be unique!</span><br><span class="line">[index]       : Index number of active tab.</span><br><span class="line">                If not specified, first tab (1) will be selected.</span><br><span class="line">                If index is -1, no tab will be selected. It&#39;s will be something like spoiler.</span><br><span class="line">                Optional parameter.</span><br><span class="line">[Tab caption] : Caption of current tab.</span><br><span class="line">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span><br><span class="line">                If not caption specified, but specified icon, caption will empty.</span><br><span class="line">                Optional parameter.</span><br><span class="line">[@icon]       : FontAwesome icon name (without &#39;fa-&#39; at the begining).</span><br><span class="line">                Can be specified with or without space; e.g. &#39;Tab caption @icon&#39; similar to &#39;Tab caption@icon&#39;.</span><br><span class="line">                Optional parameter.</span><br></pre></td></tr></table></figure>

<h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs First unique name %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="first-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#first-unique-name-1">First unique name 1</a></li><li class="tab"><a href="#first-unique-name-2">First unique name 2</a></li><li class="tab"><a href="#first-unique-name-3">First unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="first-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="first-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="first-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h4 id="Tabs-with-3rd-tab-selected"><a href="#Tabs-with-3rd-tab-selected" class="headerlink" title="Tabs with 3rd tab selected"></a>Tabs with 3rd tab selected</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Second unique name, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="second-unique-name"><ul class="nav-tabs"><li class="tab"><a href="#second-unique-name-1">Second unique name 1</a></li><li class="tab"><a href="#second-unique-name-2">Second unique name 2</a></li><li class="tab active"><a href="#second-unique-name-3">Second unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="second-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="second-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane active" id="second-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h4 id="Tabs-with-no-tab-selected"><a href="#Tabs-with-no-tab-selected" class="headerlink" title="Tabs with no tab selected"></a>Tabs with no tab selected</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Third unique name, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="third-unique-name"><ul class="nav-tabs"><li class="tab"><a href="#third-unique-name-1">Third unique name 1</a></li><li class="tab"><a href="#third-unique-name-2">Third unique name 2</a></li><li class="tab"><a href="#third-unique-name-3">Third unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="third-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="third-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="third-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h4 id="Tabs-with-custom-labels"><a href="#Tabs-with-custom-labels" class="headerlink" title="Tabs with custom labels"></a>Tabs with custom labels</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Fourth unique name %&#125;</span><br><span class="line">&lt;!-- tab Solution 1 --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab Solution 2 --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab Solution 3 --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="fourth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fourth-unique-name-1">Solution 1</a></li><li class="tab"><a href="#fourth-unique-name-2">Solution 2</a></li><li class="tab"><a href="#fourth-unique-name-3">Solution 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="fourth-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="fourth-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="fourth-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h4 id="Tabs-with-icons-only"><a href="#Tabs-with-icons-only" class="headerlink" title="Tabs with icons only"></a>Tabs with icons only</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Fifth unique name %&#125;</span><br><span class="line">&lt;!-- tab @text-width --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @amazon --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @bold --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="fifth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fifth-unique-name-1"><i class="fa fa-text-width" style="text-align: center;"></i></a></li><li class="tab"><a href="#fifth-unique-name-2"><i class="fa fa-amazon" style="text-align: center;"></i></a></li><li class="tab"><a href="#fifth-unique-name-3"><i class="fa fa-bold" style="text-align: center;"></i></a></li></ul><div class="tab-content"><div class="tab-pane active" id="fifth-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="fifth-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="fifth-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h4 id="Tabs-with-icons-and-labels"><a href="#Tabs-with-icons-and-labels" class="headerlink" title="Tabs with icons and labels"></a>Tabs with icons and labels</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Sixth unique name %&#125;</span><br><span class="line">&lt;!-- tab Solution 1@text-width --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab Solution 2 @amazon --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab Solution 3@bold --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="sixth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#sixth-unique-name-1"><i class="fa fa-text-width"></i>Solution 1</a></li><li class="tab"><a href="#sixth-unique-name-2"><i class="fa fa-amazon"></i>Solution 2</a></li><li class="tab"><a href="#sixth-unique-name-3"><i class="fa fa-bold"></i>Solution 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sixth-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="sixth-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="sixth-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h4 id="Tabs-permalinks-test"><a href="#Tabs-permalinks-test" class="headerlink" title="Tabs permalinks test"></a>Tabs permalinks test</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Permalink for &gt; [Tab one](#tab-one).</span><br><span class="line">Permalink for &gt; [Tab one 1](#tab-one-1).</span><br><span class="line">Permalink for &gt; [Tab one 2](#tab-one-2).</span><br><span class="line">Permalink for &gt; [Tab one 3](#tab-one-3).</span><br><span class="line"></span><br><span class="line">Permalink for &gt; [Tab two](#tab-two).</span><br><span class="line">Permalink for &gt; [Tab two 1](#tab-two-1).</span><br><span class="line">Permalink for &gt; [Tab two 2](#tab-two-2).</span><br><span class="line">Permalink for &gt; [Tab two 3](#tab-two-3).</span><br><span class="line"></span><br><span class="line">&#123;% tabs Tab one %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tabs Tab two %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<p>Permalink for &gt; <a href="#tab-one">Tab one</a>.<br>Permalink for &gt; <a href="#tab-one-1">Tab one 1</a>.<br>Permalink for &gt; <a href="#tab-one-2">Tab one 2</a>.<br>Permalink for &gt; <a href="#tab-one-3">Tab one 3</a>.</p>
<p>Permalink for &gt; <a href="#tab-two">Tab two</a>.<br>Permalink for &gt; <a href="#tab-two-1">Tab two 1</a>.<br>Permalink for &gt; <a href="#tab-two-2">Tab two 2</a>.<br>Permalink for &gt; <a href="#tab-two-3">Tab two 3</a>.</p>
<div class="tabs" id="tab-one"><ul class="nav-tabs"><li class="tab active"><a href="#tab-one-1">Tab one 1</a></li><li class="tab"><a href="#tab-one-2">Tab one 2</a></li><li class="tab"><a href="#tab-one-3">Tab one 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-one-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="tab-one-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="tab-one-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<div class="tabs" id="tab-two"><ul class="nav-tabs"><li class="tab active"><a href="#tab-two-1">Tab two 1</a></li><li class="tab"><a href="#tab-two-2">Tab two 2</a></li><li class="tab"><a href="#tab-two-3">Tab two 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-two-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="tab-two-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="tab-two-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h4 id="Tabs-with-other-tags"><a href="#Tabs-with-other-tags" class="headerlink" title="Tabs with other tags"></a>Tabs with other tags</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Tags %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line"></span><br><span class="line">1. One</span><br><span class="line">2. Two</span><br><span class="line">3. Three</span><br><span class="line"></span><br><span class="line">4-spaces code block:</span><br><span class="line"></span><br><span class="line">    nano &#x2F;etc</span><br><span class="line"></span><br><span class="line">Tagged code block:</span><br><span class="line"></span><br><span class="line">&#123;% code %&#125;</span><br><span class="line">code tag</span><br><span class="line">code tag</span><br><span class="line">code tag</span><br><span class="line">&#123;% endcode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default %&#125;</span><br><span class="line">Note default tag.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line"></span><br><span class="line">* Five</span><br><span class="line">* Six</span><br><span class="line">* Seven</span><br><span class="line"></span><br><span class="line">&#123;% note primary %&#125;</span><br><span class="line">&#123;% youtube Kt7u5kr_P5o %&#125;</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line"></span><br><span class="line">&#123;% subtabs Sub Tabs %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Sub Tab 1.**</span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Sub Tab 2.**</span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span><br><span class="line"></span><br><span class="line">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Sub Tab 3.**</span><br><span class="line"></span><br><span class="line">&#123;% subtabs Sub-Sub Tabs %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Sub-Sub Tab 1 of Sub Tab 3.**</span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span><br><span class="line"></span><br><span class="line">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span><br><span class="line"></span><br><span class="line">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Sub-Sub Tab 2 of Sub Tab 3.**</span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span><br><span class="line"></span><br><span class="line">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Sub-Sub Tab 3 of Sub Tab 3.**</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endsubtabs %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endsubtabs %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="tags"><ul class="nav-tabs"><li class="tab active"><a href="#tags-1">Tags 1</a></li><li class="tab"><a href="#tags-2">Tags 2</a></li><li class="tab"><a href="#tags-3">Tags 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tags-1"><p><strong>This is Tab 1.</strong></p>
<ol>
<li>One</li>
<li>Two</li>
<li>Three</li>
</ol>
<p>4-spaces code block:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nano &#x2F;etc</span><br></pre></td></tr></table></figure>

<p>Tagged code block:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">code tag</span><br><span class="line">code tag</span><br><span class="line">code tag</span><br></pre></td></tr></table></figure>

<div class="note default">
            <p>Note default tag.</p>
          </div></div><div class="tab-pane" id="tags-2"><p><strong>This is Tab 2.</strong></p>
<ul>
<li>Five</li>
<li>Six</li>
<li>Seven</li>
</ul>
<div class="note primary">
            <div class="video-container"><iframe src="https://www.youtube.com/embed/Kt7u5kr_P5o" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
          </div></div><div class="tab-pane" id="tags-3"><p><strong>This is Tab 3.</strong></p>
<div class="tabs" id="sub-tabs"><ul class="nav-tabs"><li class="tab active"><a href="#sub-tabs-1">Sub Tabs 1</a></li><li class="tab"><a href="#sub-tabs-2">Sub Tabs 2</a></li><li class="tab"><a href="#sub-tabs-3">Sub Tabs 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sub-tabs-1"><p><strong>This is Sub Tab 1.</strong></p>
<div class="note success">
            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class="note warning">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>          </div><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>
          </div></div><div class="tab-pane" id="sub-tabs-2"><p><strong>This is Sub Tab 2.</strong></p>
<div class="note success">
            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><div class="note danger">            <p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>
          </div></div><div class="tab-pane" id="sub-tabs-3"><p><strong>This is Sub Tab 3.</strong></p>
<div class="tabs" id="sub-sub-tabs"><ul class="nav-tabs"><li class="tab active"><a href="#sub-sub-tabs-1">Sub-Sub Tabs 1</a></li><li class="tab"><a href="#sub-sub-tabs-2">Sub-Sub Tabs 2</a></li><li class="tab"><a href="#sub-sub-tabs-3">Sub-Sub Tabs 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sub-sub-tabs-1"><p><strong>This is Sub-Sub Tab 1 of Sub Tab 3.</strong></p>
<div class="note success">
            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>
          </div></div><div class="tab-pane" id="sub-sub-tabs-2"><p><strong>This is Sub-Sub Tab 2 of Sub Tab 3.</strong></p>
<div class="note success">
            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class="note warning">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>
          </div></div><div class="tab-pane" id="sub-sub-tabs-3"><p><strong>This is Sub-Sub Tab 3 of Sub Tab 3.</strong></p>
<div class="note success">
            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class="note warning">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><div class="note danger">            <p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>          </div>
          </div></div></div></div></div></div></div></div></div></div>

<hr>
<h2 id="PDF"><a href="#PDF" class="headerlink" title="PDF"></a>PDF</h2><h3 id="Settings-3"><a href="#Settings-3" class="headerlink" title="Settings"></a>Settings</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pdf:</span><br><span class="line">  enable: true</span><br><span class="line">  # Default height</span><br><span class="line">  height: 500px</span><br></pre></td></tr></table></figure>

<h3 id="Usage-3"><a href="#Usage-3" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% pdf url [height] %&#125;</span><br><span class="line"></span><br><span class="line">[url]    : Relative path to PDF file.</span><br><span class="line">[height] : Optional. Height of the PDF display element, e.g. 800px.</span><br></pre></td></tr></table></figure>

<h3 id="Example-2"><a href="#Example-2" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% pdf https:&#x2F;&#x2F;example.com&#x2F;sample.pdf %&#125;</span><br></pre></td></tr></table></figure>

<div class="pdf" target="https://example.com/sample.pdf" height=""></div>

<hr>
<h2 id="Mermaid"><a href="#Mermaid" class="headerlink" title="Mermaid"></a>Mermaid</h2><h3 id="Settings-4"><a href="#Settings-4" class="headerlink" title="Settings"></a>Settings</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Mermaid tag</span><br><span class="line">mermaid:</span><br><span class="line">  enable: true</span><br><span class="line">  # Available themes: default | dark | forest | neutral</span><br><span class="line">  theme: forest</span><br></pre></td></tr></table></figure>

<h3 id="Usage-4"><a href="#Usage-4" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid type %&#125;</span><br><span class="line">&#123;% endmermaid %&#125;</span><br><span class="line"></span><br><span class="line">type : type of the mermaid chart, visit https:&#x2F;&#x2F;github.com&#x2F;knsv&#x2F;mermaid for more information.</span><br></pre></td></tr></table></figure>

<ul>
<li><a href="https://github.com/knsv/mermaid" target="_blank" rel="noopener">https://github.com/knsv/mermaid</a></li>
</ul>
<h3 id="Example-3"><a href="#Example-3" class="headerlink" title="Example"></a>Example</h3><h4 id="Ex1"><a href="#Ex1" class="headerlink" title="Ex1"></a>Ex1</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid graph TD %&#125;</span><br><span class="line">A[Christmas] --&gt;|Get money| B(Go shopping)</span><br><span class="line">B --&gt; C&#123;Let me thinksssss&lt;br&gt;ssssssssssssssssssssss&lt;br&gt;sssssssssssssssssssssssssss&#125;</span><br><span class="line">C --&gt;|One| D[Laptop]</span><br><span class="line">C --&gt;|Two| E[iPhone]</span><br><span class="line">C --&gt;|Three| F[Car]</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>

<pre class="mermaid" style="text-align: center;">
            graph TD
            A[Christmas] -->|Get money| B(Go shopping)
B --> C{Let me thinksssss<br>ssssssssssssssssssssss<br>sssssssssssssssssssssssssss}
C -->|One| D[Laptop]
C -->|Two| E[iPhone]
C -->|Three| F[Car]
          </pre>

<h4 id="Ex2"><a href="#Ex2" class="headerlink" title="Ex2"></a>Ex2</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid graph LR %&#125;</span><br><span class="line">47(SAM.CommonFA.FMESummary)--&gt;48(SAM.CommonFA.CommonFAFinanceBudget)</span><br><span class="line">37(SAM.CommonFA.BudgetSubserviceLineVolume)--&gt;48(SAM.CommonFA.CommonFAFinanceBudget)</span><br><span class="line">35(SAM.CommonFA.PopulationFME)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">41(SAM.CommonFA.MetricCost)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">44(SAM.CommonFA.MetricOutliers)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">46(SAM.CommonFA.MetricOpportunity)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">40(SAM.CommonFA.OPVisits)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">38(SAM.CommonFA.CommonFAFinanceRefund)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">43(SAM.CommonFA.CommonFAFinancePicuDays)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">42(SAM.CommonFA.CommonFAFinanceNurseryDays)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">45(SAM.CommonFA.MetricPreOpportunity)--&gt;46(SAM.CommonFA.MetricOpportunity)</span><br><span class="line">35(SAM.CommonFA.PopulationFME)--&gt;45(SAM.CommonFA.MetricPreOpportunity)</span><br><span class="line">41(SAM.CommonFA.MetricCost)--&gt;45(SAM.CommonFA.MetricPreOpportunity)</span><br><span class="line">41(SAM.CommonFA.MetricCost)--&gt;44(SAM.CommonFA.MetricOutliers)</span><br><span class="line">39(SAM.CommonFA.ChargeDetails)--&gt;43(SAM.CommonFA.CommonFAFinancePicuDays)</span><br><span class="line">39(SAM.CommonFA.ChargeDetails)--&gt;42(SAM.CommonFA.CommonFAFinanceNurseryDays)</span><br><span class="line">39(SAM.CommonFA.ChargeDetails)--&gt;41(SAM.CommonFA.MetricCost)</span><br><span class="line">39(SAM.CommonFA.ChargeDetails)--&gt;40(SAM.CommonFA.OPVisits)</span><br><span class="line">35(SAM.CommonFA.PopulationFME)--&gt;39(SAM.CommonFA.ChargeDetails)</span><br><span class="line">36(SAM.CommonFA.PremetricCost)--&gt;39(SAM.CommonFA.ChargeDetails)</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>

<pre class="mermaid" style="text-align: center;">
            graph LR
            47(SAM.CommonFA.FMESummary)-->48(SAM.CommonFA.CommonFAFinanceBudget)
37(SAM.CommonFA.BudgetSubserviceLineVolume)-->48(SAM.CommonFA.CommonFAFinanceBudget)
35(SAM.CommonFA.PopulationFME)-->47(SAM.CommonFA.FMESummary)
41(SAM.CommonFA.MetricCost)-->47(SAM.CommonFA.FMESummary)
44(SAM.CommonFA.MetricOutliers)-->47(SAM.CommonFA.FMESummary)
46(SAM.CommonFA.MetricOpportunity)-->47(SAM.CommonFA.FMESummary)
40(SAM.CommonFA.OPVisits)-->47(SAM.CommonFA.FMESummary)
38(SAM.CommonFA.CommonFAFinanceRefund)-->47(SAM.CommonFA.FMESummary)
43(SAM.CommonFA.CommonFAFinancePicuDays)-->47(SAM.CommonFA.FMESummary)
42(SAM.CommonFA.CommonFAFinanceNurseryDays)-->47(SAM.CommonFA.FMESummary)
45(SAM.CommonFA.MetricPreOpportunity)-->46(SAM.CommonFA.MetricOpportunity)
35(SAM.CommonFA.PopulationFME)-->45(SAM.CommonFA.MetricPreOpportunity)
41(SAM.CommonFA.MetricCost)-->45(SAM.CommonFA.MetricPreOpportunity)
41(SAM.CommonFA.MetricCost)-->44(SAM.CommonFA.MetricOutliers)
39(SAM.CommonFA.ChargeDetails)-->43(SAM.CommonFA.CommonFAFinancePicuDays)
39(SAM.CommonFA.ChargeDetails)-->42(SAM.CommonFA.CommonFAFinanceNurseryDays)
39(SAM.CommonFA.ChargeDetails)-->41(SAM.CommonFA.MetricCost)
39(SAM.CommonFA.ChargeDetails)-->40(SAM.CommonFA.OPVisits)
35(SAM.CommonFA.PopulationFME)-->39(SAM.CommonFA.ChargeDetails)
36(SAM.CommonFA.PremetricCost)-->39(SAM.CommonFA.ChargeDetails)
          </pre>

<h4 id="Ex3"><a href="#Ex3" class="headerlink" title="Ex3"></a>Ex3</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid sequenceDiagram %&#125;</span><br><span class="line">participant Alice</span><br><span class="line">participant Bob</span><br><span class="line">participant John as John&lt;br&gt;Second Line</span><br><span class="line">Alice -&gt;&gt; Bob: Hello Bob, how are you?</span><br><span class="line">Bob--&gt;&gt;John: How about you John?</span><br><span class="line">Bob--x Alice: I am good thanks!</span><br><span class="line">Bob-x John: I am good thanks!</span><br><span class="line">Note right of John: Bob thinks a long&lt;br&gt;long time, so long&lt;br&gt;that the text does&lt;br&gt;not fit on a row.</span><br><span class="line">Bob--&gt;Alice: Checking with John...</span><br><span class="line">alt either this</span><br><span class="line">Alice-&gt;&gt;John: Yes</span><br><span class="line">else or this</span><br><span class="line">Alice-&gt;&gt;John: No</span><br><span class="line">else or this will happen</span><br><span class="line">Alice-&gt;John: Maybe</span><br><span class="line">end</span><br><span class="line">par this happens in parallel</span><br><span class="line">Alice --&gt;&gt; Bob: Parallel message 1</span><br><span class="line">and</span><br><span class="line">Alice --&gt;&gt; John: Parallel message 2</span><br><span class="line">end</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>

<pre class="mermaid" style="text-align: center;">
            sequenceDiagram
            participant Alice
participant Bob
participant John as John<br>Second Line
Alice ->> Bob: Hello Bob, how are you?
Bob-->>John: How about you John?
Bob--x Alice: I am good thanks!
Bob-x John: I am good thanks!
Note right of John: Bob thinks a long<br>long time, so long<br>that the text does<br>not fit on a row.
Bob-->Alice: Checking with John...
alt either this
Alice->>John: Yes
else or this
Alice->>John: No
else or this will happen
Alice->John: Maybe
end
par this happens in parallel
Alice -->> Bob: Parallel message 1
and
Alice -->> John: Parallel message 2
end
          </pre>

<h4 id="Ex4"><a href="#Ex4" class="headerlink" title="Ex4"></a>Ex4</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid gitGraph: %&#125;</span><br><span class="line">options</span><br><span class="line">&#123;</span><br><span class="line">    &quot;nodeSpacing&quot;: 150,</span><br><span class="line">    &quot;nodeRadius&quot;: 10</span><br><span class="line">&#125;</span><br><span class="line">end</span><br><span class="line">commit</span><br><span class="line">branch newbranch</span><br><span class="line">checkout newbranch</span><br><span class="line">commit</span><br><span class="line">commit</span><br><span class="line">checkout master</span><br><span class="line">commit</span><br><span class="line">commit</span><br><span class="line">merge newbranch</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>

<pre class="mermaid" style="text-align: center;">
            gitGraph:
            options
{
"nodeSpacing": 150,
"nodeRadius": 10
}
end
commit
branch newbranch
checkout newbranch
commit
commit
checkout master
commit
commit
merge newbranch
          </pre>

<hr>
<h2 id="Label"><a href="#Label" class="headerlink" title="Label"></a>Label</h2><h3 id="Usage-5"><a href="#Usage-5" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% label [class]@Text %&#125;</span><br><span class="line"></span><br><span class="line">[class] : default | primary | success | info | warning | danger.</span><br><span class="line">          &#39;@Text&#39; can be specified with or without space</span><br><span class="line">          E.g. &#39;success @text&#39; similar to &#39;success@text&#39;.</span><br><span class="line">          If not specified, default class will be selected.</span><br></pre></td></tr></table></figure>

<h3 id="Example-4"><a href="#Example-4" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Lorem &#123;% label @ipsum %&#125; &#123;% label primary@dolor sit %&#125; amet, consectetur &#123;% label success@adipiscing elit, %&#125; sed &#123;% label info@do eiusmod %&#125; tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line"></span><br><span class="line">Ut enim *&#123;% label warning @ad %&#125;* minim veniam, quis **&#123;% label danger@nostrud %&#125;** exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</span><br><span class="line"></span><br><span class="line">Duis aute irure dolor in reprehenderit in voluptate ~~&#123;% label default @velit %&#125;~~ &lt;mark&gt;esse&lt;&#x2F;mark&gt; cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>

<p>Lorem <span class="label default">ipsum</span> <span class="label primary">dolor sit</span> amet, consectetur <span class="label success">adipiscing elit,</span> sed <span class="label info">do eiusmod</span> tempor incididunt ut labore et dolore magna aliqua.</p>
<p>Ut enim _<span class="label warning">ad</span>_ minim veniam, quis <strong><span class="label danger">nostrud</span></strong> exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
<p>Duis aute irure dolor in reprehenderit in voluptate <del><span class="label default">velit</span></del> <mark>esse</mark> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
<hr>
<h2 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h2><h3 id="Usage-6"><a href="#Usage-6" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% video url %&#125;</span><br><span class="line">&#123;% youtube VIDEO_KEY %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Example-5"><a href="#Example-5" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% video https:&#x2F;&#x2F;example.com&#x2F;sample.mp4 %&#125;</span><br></pre></td></tr></table></figure>

<video src="https://example.com/sample.mp4" preload="metadata" controls playsinline poster="">Sorry, your browser does not support the video tag.</video>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% youtube Kt7u5kr_P5o %&#125;</span><br></pre></td></tr></table></figure>

<div class="video-container"><iframe src="https://www.youtube.com/embed/Kt7u5kr_P5o" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<hr>
<h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><h3 id="Usge"><a href="#Usge" class="headerlink" title="Usge"></a>Usge</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% button url, text, icon [class], [title] %&#125;</span><br><span class="line">&lt;!-- Tag Alias --&gt;</span><br><span class="line">&#123;% btn url, text, icon [class], [title] %&#125;</span><br><span class="line"></span><br><span class="line">url     : Absolute or relative path to URL.</span><br><span class="line">text    : Button text. Required if no icon specified.</span><br><span class="line">icon    : FontAwesome icon name (without &#39;fa-&#39; at the begining). Required if no text specified.</span><br><span class="line">[class] : FontAwesome class(es): fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5x</span><br><span class="line">          Optional parameter.</span><br><span class="line">[title] : Tooltip at mouseover.</span><br><span class="line">          Optional parameter.</span><br></pre></td></tr></table></figure>

<h3 id="Example-6"><a href="#Example-6" class="headerlink" title="Example"></a>Example</h3><h4 id="Simple-Button"><a href="#Simple-Button" class="headerlink" title="Simple Button"></a>Simple Button</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% button #, Text %&#125;</span><br></pre></td></tr></table></figure>

<a class="btn" href="#">Text</a>

<h4 id="Button-with-text-amp-title"><a href="#Button-with-text-amp-title" class="headerlink" title="Button with text &amp; title"></a>Button with text &amp; title</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% btn #, Text %&#125;&#123;% btn #, Text &amp; Title,, Title %&#125;</span><br></pre></td></tr></table></figure>

<a class="btn" href="#">Text</a><a class="btn" href="#" title="Title">Text & Title</a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% btn #, Text %&#125; &#123;% btn #, Text &amp; Title,, Title %&#125;</span><br></pre></td></tr></table></figure>

<a class="btn" href="#">Text</a> <a class="btn" href="#" title="Title">Text & Title</a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% btn #, Text %&#125;</span><br><span class="line">&#123;% btn #, Text &amp; Title,, Title %&#125;</span><br></pre></td></tr></table></figure>

<a class="btn" href="#">Text</a>
<a class="btn" href="#" title="Title">Text & Title</a>

<h4 id="Button-with-icon"><a href="#Button-with-icon" class="headerlink" title="Button with icon"></a>Button with icon</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;&#123;% btn #,, home fa-5x %&#125;&#123;% btn #,, home fa-5x %&#125;&#123;% btn #,, home fa-5x %&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, home fa-4x %&#125;&#123;% btn #,, home fa-4x %&#125;&#123;% btn #,, home fa-4x %&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, home fa-3x %&#125;&#123;% btn #,, home fa-3x %&#125;&#123;% btn #,, home fa-3x %&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, home fa-2x %&#125;&#123;% btn #,, home fa-2x %&#125;&#123;% btn #,, home fa-2x %&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, home fa-lg %&#125;&#123;% btn #,, home fa-lg %&#125;&#123;% btn #,, home fa-lg %&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, home %&#125;&#123;% btn #,, home %&#125;&#123;% btn #,, home %&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<div><a class="btn" href="#"><i class="fa fa-home fa-5x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-5x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-5x"></i></a></div>
<div><a class="btn" href="#"><i class="fa fa-home fa-4x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-4x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-4x"></i></a></div>
<div><a class="btn" href="#"><i class="fa fa-home fa-3x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-3x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-3x"></i></a></div>
<div><a class="btn" href="#"><i class="fa fa-home fa-2x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-2x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-2x"></i></a></div>
<div><a class="btn" href="#"><i class="fa fa-home fa-lg"></i></a><a class="btn" href="#"><i class="fa fa-home fa-lg"></i></a><a class="btn" href="#"><i class="fa fa-home fa-lg"></i></a></div>
<div><a class="btn" href="#"><i class="fa fa-home"></i></a><a class="btn" href="#"><i class="fa fa-home"></i></a><a class="btn" href="#"><i class="fa fa-home"></i></a></div>

<h4 id="Button-with-text-amp-icon"><a href="#Button-with-text-amp-icon" class="headerlink" title="Button with text &amp; icon"></a>Button with text &amp; icon</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;&#123;% btn #, Text &amp; Icon (buggy), home %&#125;</span><br><span class="line">&#123;% btn #, Text &amp; Icon (fixed width), home fa-fw %&#125;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>

<p><a class="btn" href="#"><i class="fa fa-home"></i>Text & Icon (buggy)</a>
<a class="btn" href="#"><i class="fa fa-home fa-fw"></i>Text & Icon (fixed width)</a></p>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;&#123;% btn #, Text &amp; Large Icon, home fa-fw fa-lg %&#125;</span><br><span class="line">&#123;% btn #, Text &amp; Large Icon &amp; Title, home fa-fw fa-lg, Title %&#125;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>

<p><a class="btn" href="#"><i class="fa fa-home fa-fw fa-lg"></i>Text & Large Icon</a>
<a class="btn" href="#" title="Title"><i class="fa fa-home fa-fw fa-lg"></i>Text & Large Icon & Title</a></p>

<h4 id="Button-inside-text"><a href="#Button-inside-text" class="headerlink" title="Button inside text"></a>Button inside text</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Lorem &#123;% btn #, Lorem, home fa-fw fa-lg %&#125; ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br><span class="line"></span><br><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident &#123;% btn #, Ipsum, home fa-fw fa-lg %&#125;, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>

<p>Lorem <a class="btn" href="#"><i class="fa fa-home fa-fw fa-lg"></i>Lorem</a> ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident <a class="btn" href="#"><i class="fa fa-home fa-fw fa-lg"></i>Ipsum</a>, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
<h4 id="Button-inside-other-tag"><a href="#Button-inside-other-tag" class="headerlink" title="Button inside other tag"></a>Button inside other tag</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note info %&#125;</span><br><span class="line">&#123;% btn #, Text &amp; Icon, home fa-fw %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% btn #,, home, Title %&#125;&#123;% btn #, Text %&#125;</span><br><span class="line">[Link](#)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note info">
            <p><a class="btn" href="#"><i class="fa fa-home fa-fw"></i>Text &amp; Icon</a></p><p><a class="btn" href="#" title="Title"><i class="fa fa-home"></i></a><a class="btn" href="#">Text</a><br><a href="#">Link</a></p>
          </div>

<h4 id="Button-margin"><a href="#Button-margin" class="headerlink" title="Button margin"></a>Button margin</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;text-center&quot;&gt;&lt;div&gt;&#123;% btn #,, header %&#125;&#123;% btn #,, edge %&#125;&#123;% btn #,, times %&#125;&#123;% btn #,, circle-o %&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, italic %&#125;&#123;% btn #,, scribd %&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, google %&#125;&#123;% btn #,, chrome %&#125;&#123;% btn #,, opera %&#125;&#123;% btn #,, diamond fa-rotate-270 %&#125;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<div class="text-center"><div><a class="btn" href="#"><i class="fa fa-header"></i></a><a class="btn" href="#"><i class="fa fa-edge"></i></a><a class="btn" href="#"><i class="fa fa-times"></i></a><a class="btn" href="#"><i class="fa fa-circle-o"></i></a></div>
<div><a class="btn" href="#"><i class="fa fa-italic"></i></a><a class="btn" href="#"><i class="fa fa-scribd"></i></a></div>
<div><a class="btn" href="#"><i class="fa fa-google"></i></a><a class="btn" href="#"><i class="fa fa-chrome"></i></a><a class="btn" href="#"><i class="fa fa-opera"></i></a><a class="btn" href="#"><i class="fa fa-diamond fa-rotate-270"></i></a></div></div>

<h4 id="Button-with-relative-URL"><a href="#Button-with-relative-URL" class="headerlink" title="Button with relative URL"></a>Button with relative URL</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;text-center&quot;&gt;&#123;% btn #, Previous Chapter, arrow-left fa-fw fa-lg, Previous Chapter (Full Image) %&#125; &#123;% btn #, Next Chapter, arrow-right fa-fw fa-lg, Next Chapter (Label) %&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<div class="text-center"><a class="btn" href="#" title="Previous Chapter (Full Image)"><i class="fa fa-arrow-left fa-fw fa-lg"></i>Previous Chapter</a> <a class="btn" href="#" title="Next Chapter (Label)"><i class="fa fa-arrow-right fa-fw fa-lg"></i>Next Chapter</a></div>

<h4 id="Button-with-absolute-URL"><a href="#Button-with-absolute-URL" class="headerlink" title="Button with absolute URL"></a>Button with absolute URL</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;text-center&quot;&gt;&#123;% btn https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next, NexT, github fa-fw fa-lg, NexT source code %&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<div class="text-center"><a class="btn" href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener" title="NexT source code"><i class="fa fa-github fa-fw fa-lg"></i>NexT</a></div>

<hr>
<h2 id="Group-Pictures"><a href="#Group-Pictures" class="headerlink" title="Group Pictures"></a>Group Pictures</h2><h3 id="Usage-7"><a href="#Usage-7" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% grouppicture [group]-[layout] %&#125;&#123;% endgrouppicture %&#125;</span><br><span class="line">&#123;% gp [group]-[layout] %&#125;&#123;% endgp %&#125;</span><br><span class="line"></span><br><span class="line">[group]  : Total number of pictures to add in the group.</span><br><span class="line">[layout] : Default picture under the group to show.</span><br></pre></td></tr></table></figure>

<h3 id="Example-7"><a href="#Example-7" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% grouppicture 6-3 %&#125;</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">&#123;% endgrouppicture %&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% gp 5-2 %&#125;</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">&#123;% endgp %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="hexo-oembed"><a href="#hexo-oembed" class="headerlink" title="hexo-oembed"></a>hexo-oembed</h2><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ul>
<li><strong>Supports oEmbed Discovery</strong><ul>
<li>You can embed an oEmbed Discovery compatible site</li>
<li>You can check a permalink with oEmbed Tester</li>
<li>YouTube, Vimeo, Twitter, SlideShare, Speaker Deck, CodePen, TED, pixiv and more!</li>
</ul>
</li>
<li><strong>Supports oEmded endpoint configuration</strong><ul>
<li>You can embed an oEmbed compatible site(not support oEmbed Discovery) if you configure endpoint settings</li>
<li>You can find an oEmbed endpoint at oEmbed site</li>
<li>Instagram, Gyazo, Flickr and more!</li>
</ul>
</li>
<li>Automatic Embed.ly fallback when an API key is provided</li>
</ul>
<h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Installation</span><br></pre></td></tr></table></figure>

<h3 id="Usage-8"><a href="#Usage-8" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% oembed permlink [maxwidth] [maxheight] %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><p>See <a href="https://hinastory.github.io/cats-cats-cats/hexo-oembed-demo/" target="_blank" rel="noopener">Demo page</a>.</p>
<h3 id="About"><a href="#About" class="headerlink" title="About"></a>About</h3><p>This is hexo-oembed plugin demo page.<br><a href="https://github.com/hinastory/hexo-oembed" target="_blank" rel="noopener">https://github.com/hinastory/hexo-oembed</a></p>
<h3 id="oEmbed-derivery-compatible-site-demo"><a href="#oEmbed-derivery-compatible-site-demo" class="headerlink" title="oEmbed derivery compatible site demo"></a>oEmbed derivery compatible site demo</h3><h4 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a>YouTube</h4><figure class="highlight plain"><figcaption><span>Hexo tag</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% oembed https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v&#x3D;SX_ViT4Ra7k %&#125;</span><br></pre></td></tr></table></figure>

<div class="oembed-outer oembed-youtube"><div class="oembed-inner"><iframe width="480" height="270" src="https://www.youtube.com/embed/SX_ViT4Ra7k?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div></div>

<hr>
<h4 id="Twitter"><a href="#Twitter" class="headerlink" title="Twitter"></a>Twitter</h4><figure class="highlight plain"><figcaption><span>Hexo tag</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% oembed https:&#x2F;&#x2F;twitter.com&#x2F;hinastory999&#x2F;status&#x2F;1089514744174632960 %&#125;</span><br></pre></td></tr></table></figure>

<div class="oembed-outer oembed-twitter"><div class="oembed-inner"><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Kubernetes Meetup Tokyo　#15 - KubeCon 2018 Recap に初参加 - cats cats cats <a href="https://t.co/O3ScDbSriz" target="_blank" rel="noopener">https://t.co/O3ScDbSriz</a></p>&mdash; hinastory (@hinastory999) <a href="https://twitter.com/hinastory999/status/1089514744174632960?ref_src=twsrc%5Etfw" target="_blank" rel="noopener">January 27, 2019</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div></div>

<hr>
<h4 id="Speaker-Deck"><a href="#Speaker-Deck" class="headerlink" title="Speaker Deck"></a>Speaker Deck</h4><figure class="highlight plain"><figcaption><span>Hexo tag</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% oembed https:&#x2F;&#x2F;speakerdeck.com&#x2F;ladicle&#x2F;recap-kubecon-plus-cloud-nativecon-north-america-2018-overview %&#125;</span><br></pre></td></tr></table></figure>

<div class="oembed-outer oembed-speaker-deck"><div class="oembed-inner"><iframe id="talk_frame_485070" src="//speakerdeck.com/player/4a061694787a4febac0e96845d58b961" width="710" height="399" style="border:0; padding:0; margin:0; background:transparent;" frameborder="0" allowtransparency="true" allowfullscreen="allowfullscreen" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe>
</div></div>

<hr>
<h4 id="SlideShare"><a href="#SlideShare" class="headerlink" title="SlideShare"></a>SlideShare</h4><figure class="highlight plain"><figcaption><span>Hexo tag</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% oembed https:&#x2F;&#x2F;www.slideshare.net&#x2F;Odersky&#x2F;preparing-for-scala-3 %&#125;</span><br></pre></td></tr></table></figure>

<div class="oembed-outer oembed-slideshare"><div class="oembed-inner"><iframe src="https://www.slideshare.net/slideshow/embed_code/key/EM76C9qMh454Bl" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/Odersky/preparing-for-scala-3" title="Preparing for Scala 3" target="_blank">Preparing for Scala 3</a> </strong> from <strong><a href="https://www.slideshare.net/Odersky" target="_blank">Martin Odersky</a></strong> </div>

</div></div>

<hr>
<h4 id="Vimeo"><a href="#Vimeo" class="headerlink" title="Vimeo"></a>Vimeo</h4><figure class="highlight plain"><figcaption><span>Hexo tag</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% oembed https:&#x2F;&#x2F;vimeo.com&#x2F;311121738 %&#125;</span><br></pre></td></tr></table></figure>

<div class="oembed-outer oembed-vimeo"><div class="oembed-inner"><iframe src="https://player.vimeo.com/video/311121738?app_id=122963" width="640" height="360" frameborder="0" allow="autoplay; fullscreen" allowfullscreen title="Seeking Nirvana 3.3 - Strange Adventures"></iframe></div></div>

<hr>
<h4 id="TED"><a href="#TED" class="headerlink" title="TED"></a>TED</h4><figure class="highlight plain"><figcaption><span>Hexo tag</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% oembed  https:&#x2F;&#x2F;www.ted.com&#x2F;talks&#x2F;susan_etlinger_what_do_we_do_with_all_this_big_data %&#125;</span><br></pre></td></tr></table></figure>

<div class="oembed-outer oembed-ted"><div class="oembed-inner"><iframe src="https://embed.ted.com/talks/susan_etlinger_what_do_we_do_with_all_this_big_data" width="560" height="316" frameborder="0" scrolling="no" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe></div></div>

<hr>
<h4 id="Hatena-Blog"><a href="#Hatena-Blog" class="headerlink" title="Hatena Blog"></a>Hatena Blog</h4><figure class="highlight plain"><figcaption><span>Hexo tag</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% oembed https:&#x2F;&#x2F;rheb.hatenablog.com&#x2F;entry&#x2F;rhel8-python %&#125;</span><br></pre></td></tr></table></figure>

<div class="oembed-outer oembed-hatena-blog"><div class="oembed-inner"><iframe src="https://hatenablog-parts.com/embed?url=https%3A%2F%2Frheb.hatenablog.com%2Fentry%2Frhel8-python" title="Red Hat Enterprise Linux 8 のPython事情 - 赤帽エンジニアブログ" class="embed-card embed-blogcard" scrolling="no" frameborder="0" style="display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;"></iframe></div></div>

<hr>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Blog</category>
        <category>TAG-PLUGINS</category>
      </categories>
  </entry>
  <entry>
    <title>Csci 343 - Distributions</title>
    <url>/2020/02/19/2020-02-20-csci343-lec6/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Probability-Density-Functions"><a href="#Probability-Density-Functions" class="headerlink" title="Probability Density Functions"></a>Probability Density Functions</h2><p>Given a range of possible outcomes (some measurable value), what is the probability that a our Random Variable will have one of these values? Often, fits a <strong>normal distribution</strong>.</p>
<blockquote>
<p>Function representing distribution of probability variables. Probability Density Functions, is a function whose value at any given sample in the sample space can be interpreted as providing a relative likelihood that the value of the random variable would equal that sample.</p>
</blockquote>
<p>확률 밀도 함수는 표본 공간에서 주어진 표본의 값이 표본과 동일한 상대적 가능성을 제공하는 것으로 해석될 수 있는 함수다.</p>
<p>확률 밀도 함수 (Probability Density Function, PDF)는 확률 변수의 분포를 나타내는 함수로, 확률 밀도 함수 $f(x)$와 구간 $[a,b]$에 대해서 확률 변수 $X$가 구간에 포함될 확률 $(a \leq X \leq b)$는 아래와 같은 공식이 된다.<br>&nbsp;<br>$$ \int _{a}^{b}f(x)dx $$<br>&nbsp;<br>확률 밀도 함수 $f(x)$는 다음의 두 조건을 만족해야 한다.</p>
<ol>
<li>모든 실수값 $X$에 대해 $f(x) \geq 0$</li>
<li>$\int _{-\infty}^{\infty}f(x)dx = 1$</li>
</ol>
<p>확률 밀도 함수와 누적 분포 함수에는 다음과 같은 수식이 성립한다.</p>
<ol>
<li>$F(x) = \int _{-\infty}^{x}f(x)dx$</li>
<li>$f(x) = \frac{d}{dx}F(x)$</li>
</ol>
<hr>
<h2 id="Central-Limit-Theorem"><a href="#Central-Limit-Theorem" class="headerlink" title="Central Limit Theorem"></a>Central Limit Theorem</h2><ol>
<li><p>A random variable with random variation centered about some value within a given interval will be approximately normally distributed as the number of samples increases.</p>
<blockquote>
<p>주어진 간격 내에 어떤 값을 중심으로 임의의 변동을 가지는 임의의 변수는 표본 수가 증가함에 따라 대략 정상적으로 분포될 것이라는 정리이다.</p>
</blockquote>
</li>
<li><p>This is similar to concept of limits in calculus.</p>
<blockquote>
<p>정규 분포가 중요한 이유 중 하나는 중심극한정리(central limit theorem) 때문이다. 중심 극한 정리(central limit theorem)는 동일한 확률분포를 가진 독립 확률 변수 n개의 평균의 분포는 n이 적당히 크다면 정규분포에 가까워진다는 정리이다</p>
</blockquote>
</li>
</ol>
<p><a href="https://upload.wikimedia.org/wikipedia/commons/c/cd/Clt_in_action.gif" title="wiki" class="gallery-item"><img src="https://upload.wikimedia.org/wikipedia/commons/c/cd/Clt_in_action.gif" alt="wiki"></a></p>
<p>매우 불규칙한 분포도 충분히 많은 수를 더하면 중심극한정리에 따라 결국 정규분포로 수렴한다.</p>
<h2 id="Recall"><a href="#Recall" class="headerlink" title="Recall"></a>Recall</h2><ul>
<li>When we sample(measure) something over and over, the samples often fit a Normal Distribution.</li>
</ul>
<blockquote>
<p>These are examples of Probability Density/Distribution Functions (PDFs)</p>
</blockquote>
<h3 id="What-do-these-tell-us"><a href="#What-do-these-tell-us" class="headerlink" title="What do these tell us?"></a>What do these tell us?</h3><p>Visually, we can quickly approximate the sample population average and dispersion/spread.</p>
<h2 id="Cumulative-Distribution-Functions-CDF"><a href="#Cumulative-Distribution-Functions-CDF" class="headerlink" title="Cumulative Distribution Functions (CDF)"></a>Cumulative Distribution Functions (CDF)</h2><ul>
<li><p>Provides the probability that a random value is less than or equal to a given value within a <em>normally distributed population</em>.</p>
<blockquote>
<p>무작위 값이 정규 분포 모집단 내에서 주어진 값보다 작거나 같을 확률을 제공한다.</p>
</blockquote>
</li>
<li><p>It means that CDF tells us the probability that some value lies below a certain threshold.</p>
<blockquote>
<p>즉 CDF는 어떤 값이 특정 임계값보다 낮을 확률을 우리에게 알려준것을 의미한다.</p>
</blockquote>
</li>
<li><p>Describes probability <em>over</em> the PDF.</p>
</li>
</ul>
<blockquote>
<p>누적 분포 함수(cumulative distribution function, cdf)는 주어진 확률 변수가 특정 값보다 작거나 같은 확률을 나타내는 함수이다.</p>
</blockquote>
<p>The probability density function $f(x)$ is defined as the differential of the cumulative distribution function $F(x)$.<br>&nbsp;</p>
<p>$$<br>\frac{dF(x)}{dx} = f(x)<br>$$</p>
<p>&nbsp;</p>
<ul>
<li>확률밀도함수(PDF)는 특정 확률 변수 구간의 확률이 다른 구간에 비해 <strong>상대적으로</strong> 얼마나 높은가를 나타내는 것이며 그 값 자체가 확률은 아니다라는 점을 명심해야 한다.</li>
</ul>
<hr>
<h2 id="Confidence-amp-CDF"><a href="#Confidence-amp-CDF" class="headerlink" title="Confidence &amp; CDF"></a>Confidence &amp; CDF</h2><ul>
<li>Our CDF tells us the probability that some value lies below a certain threshold.</li>
<li>50% of the population should lie on either side of the vertical line.</li>
<li>This kind of statistical test is called a <ins>one-tailed test.</ins></li>
</ul>
<blockquote>
<p>통계적 가설 검정(statistical hypothesis test)은 통계적 추측의 하나로서, 모집단 실제의 값이 얼마가 된다는 주장과 관련해, 표본의 정보를 사용해서 가설의 합당성 여부를 판정하는 과정을 의미한다.<br><br>간단히 가설 검정(hypothesis test)이라고 부르는 경우가 많다.</p>
</blockquote>
<p>통계적으로 가설을 검정하기 위해 먼저 귀무가설과 대립가설을 세워야 한다. 어떤 모수(평균, 분산, 비울, etc.)에 대해 가설을 설정할 때, 일반적을 5 가지 경우가 있다.</p>
<ol>
<li>유의수준의 결정, 귀무가설과 대립가설 설정</li>
<li>검정통계량의 설정</li>
<li>기각역의 설정</li>
<li>검정통계량 계산</li>
<li>통계적인 의사결정</li>
</ol>
<hr>
<h2 id="귀무가설과-대립-가설-설정"><a href="#귀무가설과-대립-가설-설정" class="headerlink" title="귀무가설과 대립 가설 설정"></a>귀무가설과 대립 가설 설정</h2><p><strong>귀무 가설</strong><br>귀무 가설(null hypothesis, $H_{0}$)은 통계학에서 처음부터 버릴 것을 예상하는 가설이다. 차이가 없거나 의미있는 차이가 없는 경우의 가설이며 이것이 맞거나 맞지 않다는 통계학적 증거를 통해 증명하려는 가설이다.</p>
<p><strong>대립 가설</strong><br>대립 가설(alternative hypothesis, $H_{1}$) 또는 연구 가설 또는 유지 가설은 귀무가설에 대립하는 명제이다. 보통, 모집단에서 독립변수와 결과변수 사이에 어떤 특정한 관련이 있다는 꼴이다. 어떤 가능성에 대해 확률적인 가설검정을 할 때 귀무가설과 함께 사용된다. 이 가설은 귀무가설처럼 검정을 직접 수행하기는 불가능하며 귀무가설을 기각함으로써 받아들여지는 반증의 과정을 거쳐 받아들여질 수 있다. 대립 가설은 <strong>양측 대립 가설</strong> 과 <strong>단측 대립 가설</strong> 이 있다.</p>
<div class="note info">
            <h3 id="단측-대립-가설"><a href="#단측-대립-가설" class="headerlink" title="단측 대립 가설"></a>단측 대립 가설</h3><p>독립 변수와 결과 변수와의 관련성을 검정할 때 그 방향이 미리 어느 한쪽으로 결정되어 있는 경우이다. 예를 들어 새로 개발된 심장병 치료 약물이 기존의 약물요법에 비교하여 더 효과가 좋은가?라는 것을 밝혀낼 때에 더 효과가 좋다는 가설이 단측대립가설이다.</p><h3 id="양측-대립-가설"><a href="#양측-대립-가설" class="headerlink" title="양측 대립 가설"></a>양측 대립 가설</h3><p>독립변수와 종속변수간에 관련성 혹은 차이가 존재하는가?라는 면에서만 관심을 가지는 것이며 그 방향은 따지지 않는 가설이다. 예를 들어 새로 개발된 심장병 치료 약물이 기존의 약물요법에 비교하여 효과에 차이가 있다라고 가정하는 것이다.</p>
          </div>

<ul>
<li><p>먼저 연구 가설 내용을 (e.g. 미국 성인여자의 신장은 크다)을 통계적 가설 (e.g. 미국 성인여자의 평균신장은 180cm이다.)로 바꾸어 줌으로써 가설 검정이 시작된다.</p>
</li>
<li><p>가령, 미국 성인 여성의 평균 신장이 180cm라는 하나의 가설을 검정할 계획이라면, 귀무 가설의 표기는 다음과 같다.</p>
</li>
</ul>
<p>$$<br>H_{0}: \mu = 180<br>$$</p>
<p>해당 귀무 가설과 반대되는 대립 가설은 다음과 같은 형태가 있다.</p>
<ul>
<li>제1형: $H_{1} : \mu \ne 180$</li>
<li>제2형: $H_{1} : \mu \le 180$</li>
<li>제3형: $H_{1} : \mu \ge 180$</li>
</ul>
<p>여기서 제 1형은 <strong>양측 검정</strong>(two-sided test, two tailed test), 제 2형, 제 3형은 <strong>단측 검정(one-sided test)</strong> 이라고 지칭한다. 단측검정을 나누자면 제 2형을 <strong>좌측 검정</strong> (lower tailed test)이라고 하며, 제 3형은 <strong>우측 검정</strong> (upper tailed test)이라고 부른다.</p>
<p>양측검정은 가설 검증에서 <strong>기각 영역</strong>(rejection region)이 양쪽에 있는 것이고, 그러므로 유의수준 $\alpha$ 도 양극단으로 갈라져 한쪽의 면적이 $\frac{\alpha}{2}$가 된다. 기각영역이 어느 한쪽에만 있게 되는 경우를 <strong>단측검정</strong> 이라고 한다.</p>
<blockquote>
<p>즉, 단측 검정이란 대립 가설이 어느 특정 모수 이상이거나 이하일 때 검정하는 것이다.</p>
</blockquote>
<hr>
<blockquote>
<p>Has limitations due to only testing if something is above or below a certain value</p>
</blockquote>
<ul>
<li>We can say that values below this level differ from 90% of the population, values below this that cut off could be at most 10% of the population we are measuring. This means they are less likely to be the same population.</li>
</ul>
<blockquote>
<p>이 수준 이하의 값은 모집단의 90 %와 다르다고 말할 수 있습니다.이 차단 ​​값 아래의 값은 측정중인 모집단의 최대 10 % 일 수 있습니다. 이것은 그들이 같은 인구가 될 가능성이 적다는 것을 의미합니다.</p>
</blockquote>
<ul>
<li>For the values that lie <strong>below</strong> the cut off we will incorrectly reject 10% of the time!</li>
</ul>
<blockquote>
<p>This is called a <ins>False Negative</ins>.(AKA a Type II Error).</p>
</blockquote>
<ul>
<li>For the values that lie <strong>above</strong> the cut off that are NOT in our population, we incorrectly accept the values as members.</li>
</ul>
<blockquote>
<p>This is called a <ins>False Positive</ins>.(AKA a Type I Error).</p>
</blockquote>
<div class="note info">
            <h4 id="거짓-양성-false-positive"><a href="#거짓-양성-false-positive" class="headerlink" title="거짓 양성(false positive)"></a>거짓 양성(false positive)</h4><p>거짓 양성 또는 1종 오류(<code>type I error</code>)는 통계상 실제로는 음성인데 검사 결과는 양성이라고 나오는 것이다. 예를 들어, 어떤 메일이 스팸 메일인지 검사하는 프로그램이 있다고 하자. 이때 어떤 메일이 실제로는 스팸 메일이 아니지만 프로그램 검사 결과 스팸 메일이라고 판정한다면, 이것이 거짓 양성이다. 위양성, 혹은 거짓 경보(false alarm)라고도 한다.</p><h4 id="거짓-음성-false-negative"><a href="#거짓-음성-false-negative" class="headerlink" title="거짓 음성(false negative)"></a>거짓 음성(false negative)</h4><p>거짓 음성 또는 2종 오류(<code>type II error</code>)는 통계상 실제로는 양성인데 검사 결과는 음성이라고 나오는 것이다. 예를 들어, 어떤 메일이 스팸 메일인지 검사하는 프로그램이 있다고 하자. 이때 어떤 메일이 실제로는 스팸 메일임에도 불구하고 프로그램 검사 결과 스팸 메일이 아니라고 판정한다면, 이것이 거짓 음성이다. 이러한 현상은 암 진단이나 보안 진단과 같은 분야에서는 거짓 양성에 비해 오 탐지에 대한 비용이 커서 그것을 잘 고려하여 검사 알고리즘을 개발해야 한다.</p>
          </div>

<p>실제로 검사 알고리즘을 개발한다면, 거짓 양성과 거짓 음성 사이에 <span class="label warning">trade-off</span>(어느 한편을 늘리면 다른 한편은 그 만큼 줄어드는 것)가 필연적으로 생기게 된다.</p>
<hr>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><h3 id="Probability-Density-Function-PDF"><a href="#Probability-Density-Function-PDF" class="headerlink" title="Probability Density Function (PDF)"></a>Probability Density Function (PDF)</h3><blockquote>
<p>unction representing distribution of probability variables</p>
</blockquote>
<ul>
<li>Given a range of possible outcomes (some measurable value), what is the probability that a our Random Variable will have one of these values?</li>
</ul>
<blockquote>
<p>Often, fits a <code>distribution</code></p>
</blockquote>
<ul>
<li>Visually, we can quickly approximate the sample population average and dispersion/spread.</li>
</ul>
<h3 id="Central-Limit-Theorem-CLT"><a href="#Central-Limit-Theorem-CLT" class="headerlink" title="Central Limit Theorem (CLT)"></a>Central Limit Theorem (CLT)</h3><p>A random variable with random variation centered about some value within a given interval will be approximately normally distributed as the number of samples increases.</p>
<blockquote>
<p>주어진 간격 내에 어떤 값을 중심으로 임의의 변동을 가지는 임의의 변수는 표본 수가 증가함에 따라 대략 정상적으로 분포될 것이라는 정리이다.</p>
</blockquote>
<h3 id="Cumulative-Density-Function-CDF"><a href="#Cumulative-Density-Function-CDF" class="headerlink" title="Cumulative Density Function (CDF)"></a>Cumulative Density Function (CDF)</h3><ul>
<li>Provides the probability that a random value is less than or equal to a given value within a <em>normally distributed population</em>.</li>
<li>It means that CDF tells us the probability that some value lies below a certain threshold.</li>
<li>Describes probability <em>over</em> the PDF.</li>
</ul>
<h3 id="False-Positive-Negative"><a href="#False-Positive-Negative" class="headerlink" title="False Positive/Negative"></a>False Positive/Negative</h3><ul>
<li>False Positive (<code>Type I Error</code>) is a result that indicates a given condition exists, when it does not.</li>
<li>False negative (<code>Type II Error</code>) is a test result that indicates that a condition does not hold, while in fact it does.</li>
</ul>
<h3 id="one-tailed-test"><a href="#one-tailed-test" class="headerlink" title="one-tailed test"></a>one-tailed test</h3><ul>
<li>A one-sided test is a test when the alternative hypothesis is above or below any specific parameter.</li>
<li>Has limitations due to only testing if something is above or below a certain value</li>
</ul>
<hr>
<h2 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h2><h3 id="Probability-density-functions-PDF"><a href="#Probability-density-functions-PDF" class="headerlink" title="Probability density functions (PDF)"></a>Probability density functions (PDF)</h3><ol>
<li>Function representing distribution of probability variables</li>
<li>Ofthen fits a Normal distribution!</li>
</ol>
<h3 id="Central-limit-theorm-CLT"><a href="#Central-limit-theorm-CLT" class="headerlink" title="Central limit theorm (CLT)"></a>Central limit theorm (CLT)</h3><ol>
<li>It is a theorm that if N is moderaely large, then the distribution of mean of N probability variable (with same probabiliy distribution) is closer to the normal distribution</li>
</ol>
<h3 id="Comulative-Distribution-Functions-CDF"><a href="#Comulative-Distribution-Functions-CDF" class="headerlink" title="Comulative Distribution Functions (CDF)"></a>Comulative Distribution Functions (CDF)</h3><ol>
<li>Provides the probability that a random value is ‘&lt;’ or ‘=’ to a given value within a normally distributed population.</li>
<li>It means that CDF tells us the probability that some value lies below a certain threshold.</li>
</ol>
<h3 id="False-positive-negative"><a href="#False-positive-negative" class="headerlink" title="False positive/negative"></a>False positive/negative</h3><ol>
<li>False Positive (Type I Error) is a result that indicates a given condition exists, when it does not.</li>
<li>False negative (Type II Error) is a test result that indicates that a condition does not hold, while in fact it does.</li>
</ol>
<h3 id="One-tailed-test"><a href="#One-tailed-test" class="headerlink" title="One-tailed test"></a>One-tailed test</h3><ol>
<li>A one-tailed test is a (statistical) test (in which the critical area of a distribution is one-sided so that) it is either [greater than or less than] a certain value, but not both.</li>
</ol>
<h3 id="Two-tailed-test"><a href="#Two-tailed-test" class="headerlink" title="Two-tailed test"></a>Two-tailed test</h3><ol>
<li>A two-tailed test is a method (in which the critical area of a distribution is two-sided) and tests whether a sample is [greater than or less than] a certain range of values.</li>
</ol>
<p>$$<br>$$</p>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Data Science</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Olemiss</tag>
        <tag>CSCI 343</tag>
      </tags>
  </entry>
  <entry>
    <title>Csci 343 - Descriptive Statistics</title>
    <url>/2020/02/19/2020-02-19-csci343-lec5/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Samples-and-Population"><a href="#Samples-and-Population" class="headerlink" title="Samples and Population"></a>Samples and Population</h2><p><strong>Statistics</strong> are usually meant to tell us something about <span class="label warning">a group</span> or <span class="label warning">set of things</span> (could be groups of people, cars on an aseembly line, or produce at a grocery store).</p>
<ol>
<li>We can’t measure EVERYONE, so we usually take a <ins>sample</ins> from the whole.</li>
<li>we call this our <strong><code>sample population</code></strong> or just <strong><code>population</code></strong>.</li>
</ol>
<div class="note primary no-icon">
            <ol><li>Populations are made up of samples.</li><li>Samples are individual measurements within a population.</li></ol>
          </div>

<hr>
<p><strong>통계</strong>(statistics)란 데이터를 이해하는 바탕이 되는 수리적 기법이다.</p>
<p>만약 데이터의 수가 적다면 데이터 자체를 보여 주는 것이 가장 좋은 방법일 수 있다. 하지만 데이터가 많다면 데이터를 다루는 것도 불편하고 이해하기도 힘들 것이다. 이럴 때 통계를 사용하면 데이터를 정제해서 중요한 정보만 전달해 줄 수 있다.</p>
<div class="note info no-icon">
            <h3 id="통계학-statistics"><a href="#통계학-statistics" class="headerlink" title="통계학(statistics)"></a>통계학(statistics)</h3><p>통계학(statistics)은 산술적 방법을 기초로 하여, 주로 다량의 데이터를 관찰하고 정리 및 분석하는 방법을 연구하는 수학의 한 분야이다.</p>
          </div>

<ul>
<li><a href="https://ko.wikipedia.org/wiki/%ED%86%B5%EA%B3%84%ED%95%99" target="_blank" rel="noopener">[Wiki]통계학</a></li>
</ul>
<hr>
<p>통계학에서는 주어진 데이터를 <span class="label warning">표본</span>(sample), 데이터가 대표하는 현상을 <span class="label warning">모집단</span>(population)이라고 하며, 표본을 바탕으로 모집단의 특성에 대한 결론을 유도하는 것을 통계적 추론(statistical inference)이라고 부른다. 즉 통계적 추론은 통계 이론을 바탕으로 한 현상의 일반화하고 하겠다. 현상에 대한 관찰에서 일반화할 수 있는 지식을 이끌어내는 것은 과학의 본령이니, 통계적 추론은 데이터 ‘과학’의 본질과도 맞닿아 있다고 하겠다.</p>
<p><a href="https://lh6.googleusercontent.com/dGLNLDXsDQH-vbf8u8ADMUeIE-tGuN9vetm5TR0H-6mRHxuwzdl_IsLPHRRa4aYGNoqGiAyO1C24ieuS3S3UaCx7pAkXdlZKCQ9fg-9lQZTZIvIHNgOQBDZsVfUcGtT2J1pu1MdB3m2IcAFs" title="데이터과학 프로세스(5): 통계적 추론" class="gallery-item"><img src="https://lh6.googleusercontent.com/dGLNLDXsDQH-vbf8u8ADMUeIE-tGuN9vetm5TR0H-6mRHxuwzdl_IsLPHRRa4aYGNoqGiAyO1C24ieuS3S3UaCx7pAkXdlZKCQ9fg-9lQZTZIvIHNgOQBDZsVfUcGtT2J1pu1MdB3m2IcAFs" alt="데이터과학 프로세스(5): 통계적 추론"></a></p>
<p>언뜻 마법처럼 들리는 통계적 추론을 가능하게 하는 것은 주어진 현상에 관한 통계적 모델이다. 주어진 현상이 어떤 모델에서 의해 발생했다고 가정하고, 그 모델에서 발생한 일정량의 결과물을 안다면 (표본), 그 모델에서 일반적으로 어떤 현상이 발생할지를 예측할 수 있는 것이다. 따라서 통계적 추론은 주어진 현상에 대한 가정과 데이터를 사용해 이런 통계적 모델을 만들고, 여기서 다양한 결론을 도출해내는 과정이다.</p>
<ul>
<li><a href="http://www.hellodatascience.com/?p=366" target="_blank" rel="noopener">데이터과학 프로세스(5): 통계적 추론</a></li>
</ul>
<hr>
<h3 id="Normal-Distribution"><a href="#Normal-Distribution" class="headerlink" title="Normal Distribution"></a>Normal Distribution</h3><ul>
<li>Generally, we expect a population to be somwhat homogeneous.</li>
<li>This means that the individuals in a population are fairly similar to each other.</li>
<li>Homogeneous populations often fit a <ins>Normal Distribution</ins>.</li>
</ul>
<div class="note info no-icon">
            <h4 id="확률-변수"><a href="#확률-변수" class="headerlink" title="확률 변수"></a>확률 변수</h4><ol><li>확률에 따라 변하는 값</li><li>특정확률로 나타나는 어떠한 사건에 수치를 부여한 변수</li><li>즉 무작위 실험을 했을 때, 특정 확률로 발생하는 각각의 결과를 수치적 값으로 표현하는 변수를 말한다.</li><li>예를 들어 확률 변수는 임의로 진행되는 실험에서 일정한 확률을 가지고 발생하는 결과에 실수 값을 부여하는 변수를 말한다.</li></ol>
          </div>

<ol>
<li>예를 들어 동전을 2번 던져서 그림 또는 숫자가 나오는 실험을 한다고 가정하면</li>
<li>그림이 나올 확률을 $\frac{1}{2}$, 숫자가 나올 확률을 $\frac{1}{2}$ 이라고 하자.</li>
<li>그리고 이 확률에 따라 발생하는 결과에 실수 값을 각각 그림의 경우 <code>1</code>, 숫자의 경우 <code>0</code> 을 부여한다고 하자.</li>
</ol>
<p><a href="../../../../img/csci343-lec5/random_variable.jpg" title="sample" class="gallery-item"><img src="../../../../img/csci343-lec5/random_variable.jpg" alt="sample"></a></p>
<p>이때 표본 공간을 대문자로 $S$, 그에 상응하는 실수 값을 부여하는 값을 $X$, 그리고 부여된 실수값 $X$에 따라 계산된 실수 값을 $R$이라고 하면 관계는 아래 그림과 같다.</p>
<p><a href="../../../../img/csci343-lec5/random_variable2.jpg" title="sample" class="gallery-item"><img src="../../../../img/csci343-lec5/random_variable2.jpg" alt="sample"></a></p>
<p>위 그림에서 표본공간(S)는 그림 또는 숫자가 나오는 조합이 되고, 각 조합에 그림=1, 숫자=0을 부여했을 때 나오는 값(R)이 {0, 1, 2}가 된다. 이를 확률 변수라고 한다.</p>
<div class="note danger no-icon">
            <h4 id="Warning"><a href="#Warning" class="headerlink" title="Warning"></a>Warning</h4><p>이때 산출된 값 R은 확률변수를 표본 공간의 각 조합에 부여함에 따라 나오는 값, 즉 (1,1), (0,1)과 같이 나타나는 조합 안의 숫자들을 더하여 나온 결과이다.<br>e.g. <code>(1,1)</code> -&gt; 1 + 1 = 2</p>
          </div>

<p>이때 확률 변수(R)가 취하는 모든 실수들의 집합을 <strong>상태 공간</strong>(State space)라고 하고, 그 상태공간을 구성하는 각 값이 나올 수 있는 가능성은 특정 확률로 주어지게 된다.</p>
<table>
<thead>
<tr>
<th>값</th>
<th>확률</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>$\frac{1}{4}$</td>
</tr>
<tr>
<td>1</td>
<td>$\frac{1}{2}$</td>
</tr>
<tr>
<td>2</td>
<td>$\frac{1}{4}$</td>
</tr>
</tbody></table>
<p>&nbsp;</p>
<p><strong>확률 함수</strong><br>확률 변수를 확률 값으로 대응시키는 함수</p>
<ul>
<li>이 확률 변수와 확률 함수를 이용하면 특정 사건이 일어날 확률을 계산할 수 있다.</li>
<li>그리고 그것을 도식화 시킨 것이 바로 확률 분포이다.</li>
</ul>
<p><strong>확률 분포</strong><br>확률변수에 의해 정의된 실수를 확률($0$ ~ $1$사이)에 대응시키는 함수</p>
<ul>
<li>즉, 위에서 정의한 표에 따라 x가 <code>0</code>이면 그에 대응되는 확률은 $\frac{1}{4}$ , <code>1</code>이면 $\frac{1}{2}$ 과 같이 이렇게 확률 변수의 상태공간의 각 실수 값과 확률 값을 대응시키는 것이 바로 확률 함수이다.</li>
</ul>
<p><strong>E.g.s</strong></p>
<ul>
<li>동전을 2번 던져 나오는 수: $x$</li>
<li>$x$가 취할 수 있는 값은 $x = 0, x = 1, x = 2$</li>
</ul>
<table>
<thead>
<tr>
<th align="center">$x$</th>
<th align="center">0</th>
<th align="center">1</th>
<th align="center">2</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$P(x)$</td>
<td align="center">$\frac{1}{4}$</td>
<td align="center">$\frac{1}{2}$</td>
<td align="center">$\frac{1}{4}$</td>
</tr>
</tbody></table>
<p>확률 변수, 확률 분포, 그리고 확률 함수의 관계를 정리하자면 다음과 같이 표현 할 수 있다.</p>
<p><a href="../../../../img/csci343-lec5/random_variable3.jpg" title="sample" class="gallery-item"><img src="../../../../img/csci343-lec5/random_variable3.jpg" alt="sample"></a></p>
<hr>
<ul>
<li><strong>표본공간</strong>(S, sample space): 어떤 특정 실험 또는 무작위 실험을 했을 때, 측정가능한 모든 결과들의 집합 (The set of all possible outcomes or results of that experiment)</li>
</ul>
<div class="note info">
            <h5 id="표본점-sample"><a href="#표본점-sample" class="headerlink" title="표본점(sample)"></a>표본점(sample)</h5><p>표본 공간은 정의 그대로 “측정 가능한 모든 결과의 집합”이다. 따라서 표본 공간을 이루는 개개의 관찰 결과를 우리는 표본점(sample)이라고 한다.</p><p>즉, 우리가 수집한 표본은 표본 공간의 부분집합이라고 할 수 있다.</p>
          </div>

<ul>
<li>사건(Event): 표본공간(S)의 부분 집합으로 어떤 조건을 만족하는 특정한 표본점(Sample)들의 집합</li>
<li>확률(Probability): 동일한 조건 하에서 동일한 실험을 무수히 많이 반복하여 실시할 때, 어떤 특정한 사건이 발생하는 비율</li>
</ul>
<blockquote>
<p>확률이란 어떤 실험을 했을 때, 나올 수 있는 모든 경우의 수 중 어떤 특정한 조건을 만족하는 사건이 발생하는 비율을 말한다.</p>
</blockquote>
<p>$$<br>P(A) = \frac {\text{A 사건이 일어나는 경우의 수}}{\text{모든 사건이 일어나는 경우의 수}}<br>$$</p>
<ul>
<li><a href="https://drhongdatanote.tistory.com/49" target="_blank" rel="noopener">[개념 통계]확률 변수와 확률 함수</a></li>
</ul>
<hr>
<h4 id="정규분포-Normal-distribution"><a href="#정규분포-Normal-distribution" class="headerlink" title="정규분포(Normal distribution)"></a>정규분포(Normal distribution)</h4><ul>
<li>정규분포는 통계학에서 가장 많이 쓰이는 확률분포이다.</li>
<li>우리 주변에서 일반적으로 발견되는 좌우 대칭의 종 모양으로 생긴 분포이다. (가우스 분포라고도 부른다.)</li>
<li>우리 주변의 많은 변수 또는 자료들이 정규분포를 따른다고 알려져 있다.[^1]</li>
</ul>
<p>[^1]:E.g.s 대한민국 남성의 키 분포, 수능 점수의 분포 등</p>
<ul>
<li>정규 분포는 평균 값에 가장 많은 데이터가 분포되어 있고 평균과 떨어질 수록 적게 분포되는 특징을 가지고 있다.</li>
</ul>
<ul>
<li><a href="https://drhongdatanote.tistory.com/50" target="_blank" rel="noopener">[개념 통계]정규분포와 표준정규분포 그리고 Z-score</a></li>
</ul>
<hr>
<p>인간과 자연 세상에서 일어나는 수많은 일을 설명하는 핵심 개념이다.<br>통계학에서 사용하는 각종 확률분포 중에서도 가장 중요하게 다루는 분포이다.</p>
<p>정규분포는 특정값의 출현비율을 그렸을 때, 중심(평균값)을 기준으로 좌우 대칭 형태가 나타나며, 좌우 극단으로 갈수록 급격하게 수치가 낮아지는 특징이 있다.</p>
<p><a href="https://ww.namu.la/s/8a577c27dc206b771919ed57c079106a8b5b3d5e7b71b061bbe1e0b2a1589e045fe1515556cfff97e673aab42a897a62508018a15a09bfc9fc2ad850f571346d776c8fdb7b6a81f28f0ec8963bbe605b16cfad49c902f6c95a308b5c16c18a39" title="Normal Distribution" class="gallery-item"><img src="https://ww.namu.la/s/8a577c27dc206b771919ed57c079106a8b5b3d5e7b71b061bbe1e0b2a1589e045fe1515556cfff97e673aab42a897a62508018a15a09bfc9fc2ad850f571346d776c8fdb7b6a81f28f0ec8963bbe605b16cfad49c902f6c95a308b5c16c18a39" alt="Normal Distribution"></a></p>
<p>그래서 변곡점도 2개 있는데, 모두 $μ$에서 $\sigma$만큼 떨어져 있다.하지만 표준편차의 수치가 위의 이미지처럼 꼭 기계적으로 딱딱 맞아야 하는 것은 아니고 대략 저런 ‘종’ 형태로 나타난다.</p>
<hr>
<h3 id="Outliers"><a href="#Outliers" class="headerlink" title="Outliers"></a>Outliers</h3><ul>
<li><p>We expect our samples to have some spread to them, but that in the end they will appear “normal”, Values that radically differ from this distribution are called <strong><code>outliers</code></strong></p>
</li>
<li><p><strong>An outlier is an observation that lies an abnormal distance from other values in a random sample from a population</strong></p>
</li>
</ul>
<div class="note primary">
            <h4 id="outlier"><a href="#outlier" class="headerlink" title="outlier"></a>outlier</h4><p>이상값은 모집단(population)에서 무작위로 추출한 표본(simple)의 다른 값과의 비정상적인 거리를 나타내는 관측치 입니다. 예를 들어 데이터에는 다양한 이유로 정상 범주를 벗어난 값이 존재할 수 있는데, 이런 값을 이상값(outlier)이라고 합니다.</p>
          </div>

<ul>
<li>When we take measurements we can to measure a signal indicative of something we are interested in.</li>
<li>If we have, two separate groups when we expect only one, we may be accidentally sampling from two differing populations.</li>
</ul>
<blockquote>
<p>This relates to the <ins>Central limit Theorem</ins>.</p>
</blockquote>
<h2 id="Averages"><a href="#Averages" class="headerlink" title="Averages"></a>Averages</h2><h3 id="Means"><a href="#Means" class="headerlink" title="Means"></a>Means</h3><ul>
<li>This is what most people think of when they think “average”.</li>
</ul>
<blockquote>
<p>Means are most representative of homogenous populations where few outliers exist.</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># from __future__ import division을 선언해 주지 않으면 값이 틀리게 계산될 수도 있다.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mean</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> sum(x)/len(x)</span><br></pre></td></tr></table></figure>

<h3 id="Medians"><a href="#Medians" class="headerlink" title="Medians"></a>Medians</h3><ul>
<li>This is the value at which 50% of your samples are above and 50% of your samples are below it.</li>
</ul>
<blockquote>
<p>For very noisy data, medians can be more descriptive of the population than the mean.</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">median</span><span class="params">(v)</span>:</span></span><br><span class="line"><span class="string">''''''</span>v의 중앙값을 계산 <span class="string">''''''</span></span><br><span class="line">    n = len(v)</span><br><span class="line">    sorted_v = sorted(v)</span><br><span class="line">    midpoint = n // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">    <span class="comment"># 데이터 포인트의 개수가 홀수면 중앙값을 반환</span></span><br><span class="line">        <span class="keyword">return</span> sorted_v[midpoint]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        lo = midpoint - <span class="number">1</span></span><br><span class="line">        hi = midpoint</span><br><span class="line">        <span class="keyword">return</span> (sorted_v[lo] + sorted_v[hi]) / <span class="number">2</span></span><br></pre></td></tr></table></figure>

<h3 id="Modes"><a href="#Modes" class="headerlink" title="Modes"></a>Modes</h3><p>This is the number that appears most frequently in your samples</p>
<ul>
<li>This one is a bit <code>less useful</code> for general purposes<ol>
<li>Count the number of unique samples in your data set.</li>
<li>The sample with the most occurrences (highest count) is your mode</li>
</ol>
</li>
</ul>
<blockquote>
<p>In the typical case, mode is not better then mean and median as a general representation of the population. Because most values we work with are on a gradient and seldom repeat due to fractional differences. It just depends in the ideal case.</p>
</blockquote>
<ul>
<li>일반적인 경우 Mode는 모집단(population)의 일반적 표현으로 평균과 중앙값을 사용하는 경우보다 좋지 않다. 왜냐하면 우리가 다루는 대부분의 데이터들은 기울기(gradient)가 있고 이견이 거의 없어 반복되지 않기 때문이다.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mode</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="string">''''''</span>최빈 값이 하나보다 많다면 list를 반환<span class="string">''''''</span></span><br><span class="line">    counts = Counter(x)</span><br><span class="line">    max_count = max(counts.value())</span><br><span class="line">    <span class="keyword">return</span> [x_i <span class="keyword">for</span> x_i, count <span class="keyword">in</span> counts.iteritems() <span class="keyword">if</span> count == max_count]</span><br></pre></td></tr></table></figure>

<h2 id="Dispersion"><a href="#Dispersion" class="headerlink" title="Dispersion"></a>Dispersion</h2><p>Samples and Populations usually have a spread of data</p>
<blockquote>
<p>The size of the <em>distribution</em></p>
</blockquote>
<ul>
<li>This is called <strong>dispersion</strong>.</li>
<li>Dispersion is how spread out your samples are from each other.</li>
</ul>
<div class="note info">
            <h3 id="산포도-dispersion"><a href="#산포도-dispersion" class="headerlink" title="산포도(dispersion)"></a>산포도(dispersion)</h3><p>산포도(dispersion) 는 데이터가 얼마나 퍼져 있는지를 나타낸다. 보통 0과 근접한 값이면 데이터가 거의 퍼져있지 않다는 의미이고 큰 값이면 매우 퍼져있다는 것을 의미하는 통계치이다.</p>
          </div>

<ul>
<li>예를 들어, 가장 큰 값과 작은 값의 차이를 나타내는 범위는 신포도를 나타내는 가장 간단한 통계치이다.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">data_range</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> max(x) - min(x)</span><br></pre></td></tr></table></figure>

<h3 id="Variance"><a href="#Variance" class="headerlink" title="Variance"></a>Variance</h3><blockquote>
<p>Variance is a calculation of how far a variable is from the mean of a variable.</p>
</blockquote>
<ol>
<li>essentially the average sum of squares of average difference from the group mean.</li>
</ol>
<ul>
<li>그룹 평균(group mean)과 다른 평균 제곱합(average sum of squares of average)</li>
</ul>
<ol start="2">
<li>It’s give us <ins>units squared</ins> which can be difficult to understand intuitively.</li>
</ol>
<blockquote>
<p>분산(Variance)은 하나의 변수가 변수의 평균에서 얼마나 멀리 떨어져 있는지 계산한 것이다. 분산은 산포도를 측정하는 더 복잡한 개념이며 다음과 같이 계산된다.</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">de_mean</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="string">''''''</span>x의 모든 데이터 포인트에서 평균을 뺌(평균을 <span class="number">0</span>으로 만들기 위해)<span class="string">''''''</span></span><br><span class="line">    x_bar = mean(x)</span><br><span class="line">    <span class="keyword">return</span> [x_i - x_bar <span class="keyword">for</span> x_i <span class="keyword">in</span> x]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">variance</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="string">''''''</span>x에 <span class="number">2</span>개 이상의 데이터 포인트가 존재한다고 가정<span class="string">''''''</span></span><br><span class="line">    n = len(x)</span><br><span class="line">    deviations = de_mean(x)</span><br><span class="line">    <span class="keyword">return</span> sum_of_squares(deviations) / (n - <span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p>식에서 편차의 제곱의 평균을 계산하는데 <code>n</code> 대신 <code>n - 1</code>로 나눈 것은 편차의 제곱합을 n으로 나누면 <code>bias</code> 때문에 모분산(population)에 대한 추정값이 실제 모분산보다 적게 계산되는 것을 보정해주기 위함이다.</p>
<h3 id="Standard-Deviation"><a href="#Standard-Deviation" class="headerlink" title="Standard Deviation"></a>Standard Deviation</h3><ul>
<li>A more common measure of dispersion is <ins>standard deviation</ins>.</li>
<li>It is the square root of the variance.<ul>
<li>It’s units are the <strong>same</strong> as your mean (not squared units)</li>
</ul>
</li>
</ul>
<blockquote>
<p>분산의 단위는 기존 단위의 제곱이다. 그렇기 때문에 분산 대신 원래 단위와 같은 단위를 가지는 표준 편차(standard dispersion)를 이용할 때가 많다.</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">standard_deviation</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> math.sqrt(variance(x))</span><br></pre></td></tr></table></figure>

<h4 id="Quantiles"><a href="#Quantiles" class="headerlink" title="Quantiles"></a>Quantiles</h4><p>The value below which some percentage falls</p>
<ol>
<li>Median is a special case quantile. It’s for 50 % of the population.</li>
<li>A common use of quantiles is to specify the Interquartile Range (or the values that fall above 25% of the population and below 75% of the population - i.e. the central 50%).</li>
<li>Interquartile range is often used with box plots</li>
</ol>
<table>
<thead>
<tr>
<th align="left">Entitity</th>
<th align="left">Mean</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Box</td>
<td align="left">interquartile range</td>
</tr>
<tr>
<td align="left">Mid-line</td>
<td align="left">median</td>
</tr>
<tr>
<td align="left">Whiskers</td>
<td align="left">95% of the population</td>
</tr>
<tr>
<td align="left">Stars</td>
<td align="left">outliers</td>
</tr>
</tbody></table>
<div class="note info no-icon">
            <h5 id="분위-quantile"><a href="#분위-quantile" class="headerlink" title="분위(quantile)"></a>분위(quantile)</h5><p>분위는 중앙값(median)을 포괄하는 개념인데, 데이터의 특정 백분위보다 낮은 값을 의미한다. (즉, median은 상위 50%보다 작은 값을 의미하는 것이다.)</p>
          </div>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quantile</span><span class="params">(x, p)</span>:</span></span><br><span class="line">    <span class="string">''''''</span>x의 p분위에 속하는 값을 반환<span class="string">''''''</span></span><br><span class="line">    p_index= int(p * len(x))</span><br><span class="line">    <span class="keyword">return</span> sorted(x)[p_index]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">interquetile</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="string">''''''</span>사분범위의 일반적인 사용은 사분범위 간 범위(또는 모집단의 <span class="number">25</span>% 이상과 모집단의 <span class="number">75</span>% 미만으로 떨어지는 값 - 즉 중심 <span class="number">50</span>%)를 지정하는 것이다.<span class="string">''''''</span></span><br><span class="line">    <span class="keyword">return</span> quantile(x, <span class="number">0.75</span>) - quantile(x, <span class="number">0.25</span>)</span><br><span class="line"></span><br><span class="line">s = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>quantile(s, <span class="number">0.25</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>quantile(s, <span class="number">0.5</span>)</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>quantile(s, <span class="number">0.75</span>)</span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>interquartile(s)</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure>

<h2 id="Correlation"><a href="#Correlation" class="headerlink" title="Correlation"></a>Correlation</h2><ul>
<li>Correlation is how two different variable/measurements relate to each other.</li>
<li>Variable that vary together are said to <strong>covary</strong>.</li>
<li>When things covary, they have a correlation. (they co-relate)</li>
</ul>
<div class="note primary">
            <h3 id="Correlation-analysis"><a href="#Correlation-analysis" class="headerlink" title="Correlation analysis"></a>Correlation analysis</h3><p>상관 분석(Correlation analysis) 또는 ‘상관관계’ 또는 ‘상관’은 확률론과 통계학에서 두 변수간에 어떤 선형적 또는 비선형적 관계를 갖고 있는 지를 분석하는 방법이다.</p><p>확률론과 통계학에서, 공분산(covariance)은 2개의 확률변수의 상관정도를 나타내는 값이다.(1개의 변수의 이산정도를 나타내는 분산과는 별개임) 만약 2개의 변수중 하나의 값이 상승하는 경향을 보일 때, 다른 값도 상승하는 경향의 상관관계에 있다면, 공분산의 값은 양수가 될 것이다. 반대로 2개의 변수중 하나의 값이 상승하는 경향을 보일 때, 다른 값이 하강하는 경향을 보인다면 공분산의 값은 음수가 된다.</p><p>분산(Variance)는 하나의 변수가 변수의 평균에서 얼마나 떨어져 있는지 계산한다면, 공분산(Covariance)은 두 변수가 각각 평균에서 얼마나 떨어져 있는지 살펴본다.</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">covariance</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    n = len(x)</span><br><span class="line">    <span class="keyword">return</span> dot(de_mean(x), de_mean(y)) / (n - <span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li><code>dot</code>은 각 성분별로 곱한 값을 더해 준다.</li><li>만약 x와 y 모두 각각의 평균보다 크거나 작은 경우, 양수가 더해질 것이다. (Positive Correlation)</li><li>반면 둘 중 하나는 평균보다 크고, 다른 하나는 평균보다 작을 경우, 음수가 더해질 것이다. (Negative Correlation)</li><li>만약 공분산이 0이면 그와 같은 관계가 존재하지 않는다는 것을 의미한다.</li></ul>
          </div>

<hr>
<ul>
<li>Things can correlate positivly, negatively, or not at all.</li>
</ul>
<ol>
<li><strong>Positive Correlation</strong>: When one variable is high, so is the other. When one variable is low, so is the other.</li>
<li><strong>Negative Correlation</strong>: When one variable is high, the other is low, and vice versa.</li>
</ol>
<ul>
<li>When the correlation gets closer to zero, that means that there is likely no correlation between two variables.</li>
<li>Just because something correlates with something does mean that<br>one <strong>CAUSED</strong> the other.</li>
</ul>
<hr>
<p>만약 두 변수 A, B 중 A는 변하지 않고 B만 2배로 증가한다면 공분산 또한 2배로 증가할 것이다, 하지만 생각해 보면 두 변수의 상관관계는 변하지 않았다. 다르게 이야기 하면, 값이 얼마나 커야 공분산이 크다고 판단할 수 있을까?</p>
<blockquote>
<p>이 경우 공분산에서 각각의 표준 편차를 나눠 준 상관 관계를 더 자주 살펴본다.</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">correlation</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    stdev_x = standard_deviation(x)</span><br><span class="line">    stdev_y = standard_deviation(y)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> stdev_x &gt; <span class="number">0</span> <span class="keyword">and</span> stdev_y &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> covariance(x, y) / stdev_x / stdev_y</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> <span class="comment"># 편차가 존재하지 않는다면 상관 관계는 0</span></span><br></pre></td></tr></table></figure>

<p>이때 이상치를 제거하면 더 강력한 상관관계를 볼 수 있다.</p>
<hr>
<h3 id="Correlation-and-Causation"><a href="#Correlation-and-Causation" class="headerlink" title="Correlation and Causation"></a>Correlation and Causation</h3><p>상관관계(correlation)는 인과관계(Causation)를 의미하지 않는다. 라는 애기를 많이 들어봤을 것이다. 특히 본인의 확고한 견해와 반대되는 데이터를 본 사람들이 자주하는 말이다. 하지만 이 말은 매우 중요하다.</p>
<ol>
<li>만약 x와 y가 강한 상관관계를 보인다면 x가 y를 발생시켰다고 볼 수도 이고, y가 x를 발생시켰다고 볼 수도 있다.<br></li>
<li>혹은 서로가 서로를 동시에 발생시키거나, 다른 외부 요인이 발생시키거나 아니면 아무런 인과관계가 없을 수도 있다.<br></li>
<li>예를 들어, 전기요금이 낮다고 해서 가스요금이 낮은 것은 아닌 것과 같은 경우이다.</li>
</ol>
<hr>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><h3 id="Statistic"><a href="#Statistic" class="headerlink" title="Statistic"></a>Statistic</h3><p>Something about a group / set of things.</p>
<h3 id="Population"><a href="#Population" class="headerlink" title="Population"></a>Population</h3><ol>
<li>population or sample population</li>
<li>It’s sample from whole.</li>
<li>It’s made up of samples</li>
</ol>
<h3 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h3><p>Individual measurement within a population</p>
<h3 id="Nomal-Distribution"><a href="#Nomal-Distribution" class="headerlink" title="Nomal Distribution"></a>Nomal Distribution</h3><ol>
<li>Type of continuous probability distribution for a real-valued random variable.</li>
<li>Samples in a population are fairly similar each other</li>
<li>Homogeneous population usually fit a normal distribution.</li>
</ol>
<h3 id="Outlier"><a href="#Outlier" class="headerlink" title="Outlier"></a>Outlier</h3><ol>
<li>Values that radically differ from distribution.</li>
<li>Related to Central Limit Theorm(CLT).</li>
</ol>
<h3 id="Average"><a href="#Average" class="headerlink" title="Average"></a>Average</h3><p>Is it a good for general representatoin of a population?</p>
<ol>
<li>Means: with few outliers exist</li>
<li>Median: For very noisy data</li>
<li>less useful: Modes (depends on case.. -&gt; cause, data are gradient &amp; seldom repeat due to fractional difference.)</li>
</ol>
<h3 id="dispersion-신포도"><a href="#dispersion-신포도" class="headerlink" title="dispersion(신포도)"></a>dispersion(신포도)</h3><ol>
<li>How spread out your samples from each other</li>
<li>The size of the distribution</li>
</ol>
<h3 id="variance-분산"><a href="#variance-분산" class="headerlink" title="variance(분산)"></a>variance(분산)</h3><ol>
<li>calculation of how far a variable is from the mean of a variable</li>
<li>The average sum of square of average difference from the group mean.</li>
</ol>
<h3 id="standard-deviation-표준-편차"><a href="#standard-deviation-표준-편차" class="headerlink" title="standard deviation(표준 편차)"></a>standard deviation(표준 편차)</h3><ol>
<li>A more common measure of dispersion</li>
<li>It’s units are the same as our mean</li>
</ol>
<h3 id="quantile"><a href="#quantile" class="headerlink" title="quantile"></a>quantile</h3><ol>
<li>The value below which some percentage falls</li>
<li>Median is a special case quantile. It’s for 50% of population</li>
</ol>
<h3 id="Interqurtile"><a href="#Interqurtile" class="headerlink" title="Interqurtile"></a>Interqurtile</h3><ol>
<li>Values that fall above 25% of population and below 75% of population.</li>
<li>Or the central 50%</li>
</ol>
<h3 id="Correlation-상관관계"><a href="#Correlation-상관관계" class="headerlink" title="Correlation (상관관계)"></a>Correlation (상관관계)</h3><p>How two different variable/measurements relate to each other</p>
<h3 id="Covery"><a href="#Covery" class="headerlink" title="Covery"></a>Covery</h3><ol>
<li>Or Coveriance</li>
<li>Variable that vary together</li>
<li>When things covary, they have a correlation.</li>
<li>A value that indicates the correlation of two probability variables</li>
</ol>
<h4 id="Positive-Corrleation"><a href="#Positive-Corrleation" class="headerlink" title="Positive Corrleation"></a>Positive Corrleation</h4><p>one is high, so is the other</p>
<h4 id="Negative-Correlation"><a href="#Negative-Correlation" class="headerlink" title="Negative Correlation"></a>Negative Correlation</h4><p>ohe is high, the other is low, vice versa.</p>
<h4 id="Get-closer-to-Zero"><a href="#Get-closer-to-Zero" class="headerlink" title="Get closer to Zero"></a>Get closer to Zero</h4><p>No corrleation between two varaibles.</p>
<h3 id="correlation-and-causation-상관관계와-인과관계"><a href="#correlation-and-causation-상관관계와-인과관계" class="headerlink" title="correlation and causation(상관관계와 인과관계)"></a>correlation and causation(상관관계와 인과관계)</h3><p>Correlation may not mean Causation</p>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Data Science</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Olemiss</tag>
        <tag>CSCI 343</tag>
      </tags>
  </entry>
  <entry>
    <title>Csci 259 Test1 Review Questions</title>
    <url>/2020/02/18/2020-02-18-csci259-test1/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="The-characteristics-of-3-Language"><a href="#The-characteristics-of-3-Language" class="headerlink" title="The characteristics of 3 Language"></a>The characteristics of 3 Language</h2><ul>
<li>Machine, Assembly, High-Level Language</li>
</ul>
<h3 id="Machine-Language"><a href="#Machine-Language" class="headerlink" title="Machine Language"></a>Machine Language</h3><ul>
<li>Machine language is a set of primitive instructions built into every computer</li>
<li>The instructions are in the form of binary code.</li>
<li>The programs are highly difficult ti read and modify.</li>
</ul>
<h3 id="Assembly-Language"><a href="#Assembly-Language" class="headerlink" title="Assembly Language"></a>Assembly Language</h3><ul>
<li>Assembly languages were developed to make programming easy.</li>
<li>A program called <strong><code>assembler</code></strong> is used to convert assembly language programs into machine code.</li>
</ul>
<blockquote>
<p>ADDF3 R1, R2, R3 &gt; 1101101010011010</p>
</blockquote>
<h3 id="High-Level-Language"><a href="#High-Level-Language" class="headerlink" title="High-Level Language"></a>High-Level Language</h3><ul>
<li>The high-level languages are English-like and easy to learn and program.</li>
</ul>
<h4 id="High-Level-Program-to-an-Executable-File"><a href="#High-Level-Program-to-an-Executable-File" class="headerlink" title="High-Level Program to an Executable File"></a>High-Level Program to an Executable File</h4><p><a href="https://sites.google.com/site/introductiontocpluspluss/_/rsrc/1520025768677/figures/fig2.png" title="From High Level Program to an Executable File" class="gallery-item"><img src="https://sites.google.com/site/introductiontocpluspluss/_/rsrc/1520025768677/figures/fig2.png" alt="From High Level Program to an Executable File"></a></p>
<hr>
<h2 id="Interpreting-Compiling-Source-Code"><a href="#Interpreting-Compiling-Source-Code" class="headerlink" title="Interpreting/Compiling Source Code"></a>Interpreting/Compiling Source Code</h2><p>Because a computer cannot understand a source program, a source program must be translated into machine code for execution.</p>
<p>The translation can be done using an <strong><code>interpreter</code></strong> or a <strong><code>compiler</code></strong>.</p>
<h3 id="Interpreter"><a href="#Interpreter" class="headerlink" title="Interpreter"></a>Interpreter</h3><ol>
<li>An interpreter reads <strong>one statement</strong> from the source code</li>
<li>Translates it to the machine code, and than executes it right away.</li>
</ol>
<h3 id="Compiler"><a href="#Compiler" class="headerlink" title="Compiler"></a>Compiler</h3><ol>
<li>A compiler translates the <strong>entire source code</strong> into a machine code file.</li>
<li>The machine-code file is then executed.</li>
</ol>
<h3 id="Reference-Video"><a href="#Reference-Video" class="headerlink" title="Reference Video"></a>Reference Video</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/9sSxdhYGYSM" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<hr>
<h2 id="The-structure-of-a-C-program"><a href="#The-structure-of-a-C-program" class="headerlink" title="The structure of a C++ program"></a>The structure of a C++ program</h2><ol>
<li>The main function is the entry point where the program begins execution.</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt; // preprocessor directive</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; <span class="comment">// keywords (or reserved words)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123; <span class="comment">// main function</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Welcome to C++!"</span> &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// statement</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>A statement represents an action or a sequence of actions.</li>
<li>Every statement in C++ ends with a semicolon.<div class="note primary">
            <p><code>;</code> is known as the statement terminator in C++.</p>
          </div></li>
<li>Key words or reserved words are words that have a specific meaning to the compiler and cannot be used for other purposes in the program.</li>
<li>The <code>#include &lt;iostream&gt;</code> directive tells the computer to include the contents of the iostream file in the current program</li>
<li>The using namespace std indicates that the definitions of standard C++ keywords and classes are located in the std namespace.<blockquote>
<p>A namespace is a special area in the computer’s internal memory.</p>
</blockquote>
</li>
</ol>
<hr>
<h2 id="Concatenate-items-in-cout"><a href="#Concatenate-items-in-cout" class="headerlink" title="Concatenate items in cout"></a>Concatenate items in cout</h2><p><code>&lt;&lt;</code> is stream insertion operator for cout, concatenate using this operator.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> hours;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"How many hours did you work? "</span>;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Data-Types-in-C"><a href="#Data-Types-in-C" class="headerlink" title="Data Types in C++"></a>Data Types in C++</h2><h3 id="Integer-Data-Types"><a href="#Integer-Data-Types" class="headerlink" title="Integer Data Types"></a>Integer Data Types</h3><ul>
<li>Integer variables can hold <strong>whole numbers</strong> such as 12, 7, and -99.</li>
<li>There are several integer data types in C++, we will mainly use <code>int</code> in class.</li>
<li>Variables of the same type can be defined on separate lines or on the same line.</li>
</ul>
<table>
<thead>
<tr>
<th align="left">Data Types</th>
<th align="left">Typical Size</th>
<th align="left">Range</th>
</tr>
</thead>
<tbody><tr>
<td align="left">short int (unsigned)</td>
<td align="left">2 bytes</td>
<td align="left">$-2^{15}$ ~ $2^{15}-1$</td>
</tr>
<tr>
<td align="left">int (unsigned)</td>
<td align="left">4 bytes</td>
<td align="left">$-2^{31}$ ~ $2^{31}-1$</td>
</tr>
<tr>
<td align="left">long int (unsinged)</td>
<td align="left">4 bytes</td>
<td align="left">$-2^{31}$ ~ $2^{31}-1$</td>
</tr>
<tr>
<td align="left">long long int (unsigned)</td>
<td align="left">8 bytes</td>
<td align="left">$-2^{63}$ ~ $2^{63}-1$</td>
</tr>
</tbody></table>
<h3 id="Floating-point-Data-Types"><a href="#Floating-point-Data-Types" class="headerlink" title="Floating-point Data Types"></a>Floating-point Data Types</h3><ul>
<li>They can hold <strong>real numbers</strong> such as 12.45, -3.8.</li>
<li>Theare are three floating-point data types in C++.</li>
</ul>
<table>
<thead>
<tr>
<th align="left">Data Type</th>
<th align="left">Key Word</th>
<th align="left">Range</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Single precision</td>
<td align="left">float</td>
<td align="left">4 bytes. Numbers between $\pm3.4E-38$ and $\pm3.4E38$</td>
</tr>
<tr>
<td align="left">Double precision</td>
<td align="left">double</td>
<td align="left">8 bytes. Numbers between $\pm1.7E-308$ and $\pm1.7E308$</td>
</tr>
<tr>
<td align="left">Long double precision</td>
<td align="left">long double</td>
<td align="left">8 bytes. Numbers between $\pm1.7E-308$ and $\pm1.7E308$</td>
</tr>
</tbody></table>
<hr>
<h2 id="Restrictions-for-variable-names"><a href="#Restrictions-for-variable-names" class="headerlink" title="Restrictions for variable names"></a>Restrictions for variable names</h2><ol>
<li>An identifier is a sequence of characters that consist of letters(<strong><code>0-9</code></strong>), digits(<strong><code>a-z</code></strong>/<strong><code>A-Z</code></strong>), and underscores(<strong><code>_</code></strong>).</li>
<li>An identifier must start with a <strong><code>letter</code></strong> or an <strong><code>underscore</code></strong>. It cannot start with a digit.</li>
<li>An identifier cannot be a reserved word.</li>
<li>An identifier cannot be <code>true</code>, <code>false</code>, or <code>null</code>.</li>
<li>An identifier can be of any length.</li>
<li><strong><code>Variables</code></strong> and <strong><code>named constants</code></strong> are identifiers.</li>
</ol>
<hr>
<h2 id="Declare-a-constant"><a href="#Declare-a-constant" class="headerlink" title="Declare a constant"></a>Declare a constant</h2><p>A named constant is an identifier that represents a permanent value.</p>
<p>General form:</p>
<blockquote>
<p><strong>const</strong> datatype CONSTANTNAME = VALUE;</p>
</blockquote>
<ul>
<li>Exmaples:</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="number">3.14159</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_VALUE = <span class="number">3</span>;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Naming-Conventions"><a href="#Naming-Conventions" class="headerlink" title="Naming Conventions"></a>Naming Conventions</h2><p>Choose meaningful and descriptive names</p>
<h3 id="Variables-and-function-names"><a href="#Variables-and-function-names" class="headerlink" title="Variables and function names"></a>Variables and function names</h3><ol>
<li>Use <code>lowercase</code>.</li>
<li>If the name consists of several words, concatenate all in one, use lowercase for the first word, and capitalize the first letter of each subsequent word in the name.</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Variable</span></span><br><span class="line"><span class="keyword">double</span> radius, area;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Funcion</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">computeArea</span><span class="params">()</span> </span>&#123; ... &#125;</span><br></pre></td></tr></table></figure>

<h3 id="Named-Constants"><a href="#Named-Constants" class="headerlink" title="Named Constants"></a>Named Constants</h3><p>Capitalize all letters in named constants, and use underscores to connect words.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="number">3.14159</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_VALUE = <span class="number">3</span>;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>see this for reference</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://docs.popekim.com/ko/coding-standards/cpp" target="_blank" rel="noopener">C++ 코딩 표준</a></td>
</tr>
<tr>
<td><a href="https://docs.unrealengine.com/en-US/Programming/Development/CodingStandard/index.html" target="_blank" rel="noopener">언리얼 엔진 4 코딩 표준</a></td>
</tr>
<tr>
<td><a href="https://docs.google.com/document/d/0Bw_EFnOWRcU4ajhGRV9udmFqbFU/edit" target="_blank" rel="noopener">IDSoftware-CodeStyleConventions</a></td>
</tr>
</tbody></table>
<hr>
<h2 id="Order-of-operator-precedence"><a href="#Order-of-operator-precedence" class="headerlink" title="Order of operator precedence"></a>Order of operator precedence</h2><p>Standard arithmetic operator</p>
<blockquote>
<p>**&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;%&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;&nbsp;&nbsp;&nbsp;-</p>
</blockquote>
<p>Standard boolean operators</p>
<blockquote>
<p>not&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;&nbsp;&nbsp;&nbsp;or</p>
</blockquote>
<hr>
<h2 id="Format-specifications-in-printf"><a href="#Format-specifications-in-printf" class="headerlink" title="Format specifications in printf"></a>Format specifications in printf</h2><table>
<thead>
<tr>
<th align="left">formats</th>
<th align="left">data</th>
</tr>
</thead>
<tbody><tr>
<td align="left">%d</td>
<td align="left">integers</td>
</tr>
<tr>
<td align="left">%.nf</td>
<td align="left">doubles withs <code>n</code> decimal places</td>
</tr>
<tr>
<td align="left">%c</td>
<td align="left">single characters</td>
</tr>
<tr>
<td align="left">%s</td>
<td align="left">strings (must use <code>c_str()</code> function with the string variable)</td>
</tr>
</tbody></table>
<p>e.g.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> zipCode = <span class="number">38655</span>;</span><br><span class="line"><span class="built_in">string</span> city = <span class="string">"Oxford"</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The city %s has the zip code %d\n"</span>, city.c_str(), zipCode);</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Escape-sequences"><a href="#Escape-sequences" class="headerlink" title="Escape sequences"></a>Escape sequences</h2><table>
<thead>
<tr>
<th align="left">Escape sequence</th>
<th align="left">Name</th>
<th align="left">Unicode</th>
<th align="left">Decimal value</th>
</tr>
</thead>
<tbody><tr>
<td align="left">\b</td>
<td align="left">Backspace</td>
<td align="left">\u0008</td>
<td align="left">8</td>
</tr>
<tr>
<td align="left">\t</td>
<td align="left">Tab</td>
<td align="left">\u0009</td>
<td align="left">9</td>
</tr>
<tr>
<td align="left">\n</td>
<td align="left">Linefeed</td>
<td align="left">\u000A</td>
<td align="left">10</td>
</tr>
<tr>
<td align="left">\f</td>
<td align="left">Formfeed</td>
<td align="left">\u000C</td>
<td align="left">12</td>
</tr>
<tr>
<td align="left">\r</td>
<td align="left">Carriage Return</td>
<td align="left">\u000D</td>
<td align="left">13</td>
</tr>
<tr>
<td align="left">\\</td>
<td align="left">Backslash</td>
<td align="left">\u005C</td>
<td align="left">92</td>
</tr>
<tr>
<td align="left">&quot;</td>
<td align="left">Double Quote</td>
<td align="left">\u0022</td>
<td align="left">34</td>
</tr>
</tbody></table>
<hr>
<h2 id="Comments"><a href="#Comments" class="headerlink" title="Comments"></a>Comments</h2><h3 id="single-line-comments"><a href="#single-line-comments" class="headerlink" title="single-line comments"></a>single-line comments</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//int zipCode = 38655;</span></span><br><span class="line"><span class="comment">//string city = "Oxford";</span></span><br><span class="line"><span class="comment">//printf("The city %s has the zip code %d\n", city.c_str(), zipCode);</span></span><br></pre></td></tr></table></figure>

<h3 id="multi-line-comments"><a href="#multi-line-comments" class="headerlink" title="multi-line comments"></a>multi-line comments</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">int zipCode = 38655;</span></span><br><span class="line"><span class="comment">string city = "Oxford";</span></span><br><span class="line"><span class="comment">printf("The city %s has the zip code %d\n", city.c_str(), zipCode);</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Programming-errors-in-C"><a href="#Programming-errors-in-C" class="headerlink" title="Programming errors in C++"></a>Programming errors in C++</h2><h3 id="Syntax-Errors"><a href="#Syntax-Errors" class="headerlink" title="Syntax Errors"></a>Syntax Errors</h3><ol>
<li><code>Syntax</code> is a set of rules that must be followed when writing a program.</li>
<li>The programmer has made a mistake in the syntax (e.g. forget the colon when writing a for loop)</li>
<li>Detected by the compiler</li>
</ol>
<blockquote>
<p>identified during compilation.</p>
</blockquote>
<h3 id="Runtime-Errors"><a href="#Runtime-Errors" class="headerlink" title="Runtime Errors"></a>Runtime Errors</h3><ul>
<li>Causes the program to abort</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="number">1</span>/<span class="number">0</span>; <span class="comment">// Divide by zero.</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Divide-by-Zero"><a href="#Divide-by-Zero" class="headerlink" title="Divide by Zero"></a>Divide by Zero</h3><iframe width="750" height="422" src="https://www.youtube.com/embed/SQzjzStU1RQ" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<h3 id="Logic-Errors"><a href="#Logic-Errors" class="headerlink" title="Logic Errors"></a>Logic Errors</h3><ol>
<li>Produces incorrect result</li>
<li>The program executes but gives the wrong result.</li>
</ol>
<blockquote>
<p>Logic errors include some <strong>runtime</strong> errors that cause the program to terminate. These types of runtime errors are typically called <strong>exceptions</strong>.</p>
</blockquote>
<h3 id="Undeclared-Uninitialzed-Vavriables-and-Unused-Variables"><a href="#Undeclared-Uninitialzed-Vavriables-and-Unused-Variables" class="headerlink" title="Undeclared/Uninitialzed Vavriables and Unused Variables"></a>Undeclared/Uninitialzed Vavriables and Unused Variables</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> interestRate = <span class="number">0.05</span>;</span><br><span class="line"><span class="keyword">double</span> interest = interestrate * <span class="number">45</span>; <span class="comment">// case-sensitive</span></span><br></pre></td></tr></table></figure>

<h3 id="Integer-Overflow"><a href="#Integer-Overflow" class="headerlink" title="Integer Overflow"></a>Integer Overflow</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> value = <span class="number">2147483647</span> + <span class="number">1</span>;</span><br><span class="line"><span class="comment">//value will actually be 2147483648</span></span><br></pre></td></tr></table></figure>

<h3 id="Unintended-Integer-Division"><a href="#Unintended-Integer-Division" class="headerlink" title="Unintended Integer Division"></a>Unintended Integer Division</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// It can be unexpected results.</span></span><br><span class="line"><span class="keyword">double</span> avg = (<span class="number">1</span> + <span class="number">2</span>)/<span class="number">2</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; avg &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// using this</span></span><br><span class="line"><span class="keyword">double</span> avg = (<span class="number">1</span> + <span class="number">2</span>)/<span class="number">2.0</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; avg &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 1.5</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Get-input-from-the-user-using-cout"><a href="#Get-input-from-the-user-using-cout" class="headerlink" title="Get input from the user using cout"></a>Get input from the user using cout</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> radius;</span><br><span class="line">    <span class="keyword">double</span> area;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter the radius of the circle: "</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; radius;</span><br><span class="line"></span><br><span class="line">    area = radius * radius * <span class="number">3.14159</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"The area for the circle of radius "</span> &lt;&lt; radius;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">" is "</span> &lt;&lt; area &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Working-with-Characters"><a href="#Working-with-Characters" class="headerlink" title="Working with Characters"></a>Working with Characters</h2><p>To read a single character:</p>
<h3 id="Use-cin"><a href="#Use-cin" class="headerlink" title="Use cin:"></a>Use cin:</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter a character: "</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; ch;</span><br></pre></td></tr></table></figure>

<ul>
<li>Problem: will skip over blanks, tabs, etc.</li>
</ul>
<h3 id="Use-cin-get"><a href="#Use-cin-get" class="headerlink" title="Use cin.get():"></a>Use cin.get():</h3><p>Will read the character entered, even whitespace</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter a character: "</span>;</span><br><span class="line">ch = <span class="built_in">cin</span>.get()</span><br></pre></td></tr></table></figure>

<ul>
<li>Mixing <code>cin &gt;&gt;</code> and <code>cin.get()</code> in the same program can cause input errors that are hard to detect</li>
<li>To skip over undeeded characters that are still in the keyboard buffer, use <code>cin.ignore()</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cin</span>.ignore() <span class="comment">// skip next char</span></span><br></pre></td></tr></table></figure>

<ul>
<li>E.g.</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> ch1, ch2;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter two characters separated by a space: "</span>;</span><br><span class="line">ch1 = <span class="built_in">cin</span>.get(); <span class="comment">// Character 1</span></span><br><span class="line"><span class="built_in">cin</span>.ignore(); <span class="comment">// Ignore the enter</span></span><br><span class="line">ch2 = <span class="built_in">cin</span>.get(); <span class="comment">// Character 2</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Character 1 is: "</span> &lt;&lt; ch1 &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">"Character 2 is: "</span> &lt;&lt;ch2  <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Character-Functions"><a href="#Character-Functions" class="headerlink" title="Character Functions"></a>Character Functions</h3><ul>
<li>Return an <code>int</code>.<blockquote>
<p>zero is false and non-zero is true.</p>
</blockquote>
</li>
<li>Need to include cctype file: <code>#include &lt;cctype&gt;</code></li>
</ul>
<table>
<thead>
<tr>
<th align="left">Type</th>
<th align="left">Method</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="left">int</td>
<td align="left"><strong>isalnum</strong>(c)</td>
<td align="left">true if c is a letter or digit</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>isalpha</strong>(c)</td>
<td align="left">true if <code>c</code> is a letter</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>isblank</strong>(c)</td>
<td align="left">true if <code>c</code> is a blank or tab</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>isdigit</strong>(c)</td>
<td align="left">true if <code>c</code> is a digit</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>islower</strong>(c)</td>
<td align="left">true if <code>c</code> is an lowercase letter</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>isupper</strong>(c)</td>
<td align="left">true if <code>c</code> is an uppercase letter</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>isspace</strong>(c)</td>
<td align="left">true if <code>c</code> is whitespace character (space, tab, vertical tab, formfeed, carriage return, or newline)</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>tolower</strong>(c)</td>
<td align="left">returns lowercase version of <code>c</code> if there is one, otherwise it returns the character unchanged</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>toupper</strong>(c)</td>
<td align="left">returns uppercase version of <code>c</code> if there is one, otherwise it returns the character unchanged</td>
</tr>
</tbody></table>
<hr>
<h2 id="String-Type"><a href="#String-Type" class="headerlink" title="String Type"></a>String Type</h2><ol>
<li>The char type only represents one character.</li>
<li>To represent a string of characters, use the data type called <strong>string</strong>.</li>
</ol>
<p>For example,</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> message = <span class="string">"Welcome to C++"</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>For the time being, you just need to know how to declare a string variable, how to assign a string to the variable, how to concatenate strings, and to perform simple operations on strings.</li>
</ul>
<h3 id="Working-with-Strings"><a href="#Working-with-Strings" class="headerlink" title="Working with Strings"></a>Working with Strings</h3><ul>
<li>To read a string:</li>
</ul>
<blockquote>
<p>Use <strong>getline</strong> function<br>You need to include string file: <code>#include &lt;string&gt;</code></p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> name, city;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt;<span class="string">"Enter your name: "</span>;</span><br><span class="line">getline(<span class="built_in">cin</span>, name);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter the city you live in :"</span>;</span><br><span class="line">getline(<span class="built_in">cin</span>, city);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello, "</span> &lt;&lt; name &lt;&lt; <span class="string">", you line in "</span> &lt;&lt; city;</span><br></pre></td></tr></table></figure>

<p>&nbsp;</p>
<h3 id="String-Functions-and-Operators"><a href="#String-Functions-and-Operators" class="headerlink" title="String Functions and Operators"></a>String Functions and Operators</h3><p>To find the length of a stirng, use <code>stringVariable.length()</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> state = <span class="string">"Mississippi"</span>;</span><br><span class="line"><span class="keyword">int</span> size = state.length();</span><br></pre></td></tr></table></figure>

<p>To concatenate (join) multiple strings use <code>+</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">name = firstName + lastName;</span><br><span class="line">greeting = greeting + name;</span><br></pre></td></tr></table></figure>

<p>Or using the <code>+=</code> combined assignment operator:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">greeting += name;</span><br></pre></td></tr></table></figure>

<p>&nbsp;</p>
<h3 id="Simple-Functions-for-String-Objects"><a href="#Simple-Functions-for-String-Objects" class="headerlink" title="Simple Functions for String Objects"></a>Simple Functions for String Objects</h3><table>
<thead>
<tr>
<th align="left">Function</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>length</strong>()</td>
<td align="left">Returns the number of characters in the string</td>
</tr>
<tr>
<td align="left">s1.<strong>compare</strong>(s2)</td>
<td align="left">Returns <code>0</code> if <code>s1</code> and <code>s2</code> are the same, returns <code>non-zero</code> if they are different</td>
</tr>
</tbody></table>
<p><strong>Getting String Length</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> message = <span class="string">"Welcome to C++"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"The length of"</span> &lt;&lt; message &lt;&lt; <span class="string">" is "</span> &lt;&lt; message.length();</span><br></pre></td></tr></table></figure>

<p><strong>Getting Characters from a String</strong><br>How do you get the first and last character from a string?</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> message = <span class="string">"Programming is fun"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"The first character is"</span> &lt;&lt; message[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"The last character is "</span> &lt;&lt; message[message.length() - <span class="number">1</span>];</span><br></pre></td></tr></table></figure>

<p><strong>String concatenation</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> s1 = <span class="string">"Welcome "</span>;</span><br><span class="line"><span class="built_in">string</span> s2 = <span class="string">"to "</span>;</span><br><span class="line"><span class="built_in">string</span> s3 = <span class="string">"C++"</span>;</span><br><span class="line"><span class="built_in">string</span> s = s1 + s2 + s3;</span><br></pre></td></tr></table></figure>

<h3 id="Obtaining-Substrings"><a href="#Obtaining-Substrings" class="headerlink" title="Obtaining Substrings"></a>Obtaining Substrings</h3><table>
<thead>
<tr>
<th align="left">Function</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>substr</strong>(beginIndex, endIndex)</td>
<td align="left">Returns the substring from <strong><code>beginIndex</code></strong> to <strong><code>endIndex-1</code></strong></td>
</tr>
<tr>
<td align="left"><strong>substr</strong>(beginIndex)</td>
<td align="left">Returns the substring from <strong><code>beginIndex</code></strong> to the end of string</td>
</tr>
<tr>
<td align="left"><strong>find</strong>(str)</td>
<td align="left">Returns the index of the substring in the string, if not found, returns -1</td>
</tr>
</tbody></table>
<p>Example</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> s = <span class="string">"Welcome to C++"</span>;</span><br><span class="line"><span class="built_in">string</span> s1 = s.substr(<span class="number">0</span>, <span class="number">11</span>); <span class="comment">// s1 is "Welcome to "</span></span><br><span class="line"><span class="built_in">string</span> s2 = s.substr(<span class="number">11</span>);    <span class="comment">// s2 is "C++"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a = s.find(<span class="string">"to"</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;          <span class="comment">// return 8</span></span><br></pre></td></tr></table></figure>

<h3 id="Conversion-between-Strings-and-Numbers"><a href="#Conversion-between-Strings-and-Numbers" class="headerlink" title="Conversion between Strings and Numbers"></a>Conversion between Strings and Numbers</h3><p>To convert a numberic string into a number, use <code>stoi</code> and <code>stod</code> function</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> s1 = <span class="string">"56"</span>;</span><br><span class="line"><span class="built_in">string</span> s2 = <span class="string">"67.8"</span>;</span><br><span class="line"><span class="keyword">int</span> n1 = stoi(s1);</span><br><span class="line"><span class="keyword">double</span> n2 = stod(s2);</span><br></pre></td></tr></table></figure>

<p>To convert a number into a string, use <code>to_string</code> function:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">89</span>;</span><br><span class="line"><span class="built_in">string</span> s = to_string(a);</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Formatting-Output-using-cout"><a href="#Formatting-Output-using-cout" class="headerlink" title="Formatting Output using cout"></a>Formatting Output using cout</h2><p>Can control how output displays for numeric and string data:</p>
<ol>
<li>number of digits</li>
<li>position</li>
<li>size</li>
</ol>
<p>Requires <code>#include &lt;iomanip&gt;</code></p>
<ul>
<li><code>setw(x)</code>: print in a field at least <strong><code>x</code></strong> spaces wide. Use more spaces if field is not wide enough.</li>
<li><code>setprecision(s)</code>: when used with <strong><ins>fixed</ins></strong>, print floating-point value using <strong><code>x</code></strong> digits after the decimal.</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> num1 = <span class="number">1234</span>;</span><br><span class="line">  <span class="keyword">double</span> num2 = <span class="number">4.918</span>;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; setw(<span class="number">6</span>) &lt;&lt; num1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">2</span>) &lt;&lt; num2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  1234</span></span><br><span class="line"><span class="comment">4.92</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Literals"><a href="#Literals" class="headerlink" title="Literals"></a>Literals</h2><p>A <strong>literal</strong> is a value that appears directly in the program.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">34</span>;</span><br><span class="line"><span class="keyword">double</span> d = <span class="number">5.0</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Integer-Literals"><a href="#Integer-Literals" class="headerlink" title="Integer Literals"></a>Integer Literals</h3><ol>
<li>An <strong>integer literal</strong> can be assigned to an integer variable as long as it can fit into the variable.</li>
<li>A compilation error would occur if the literal were too large for the variable to hold.</li>
<li>An integer literal is assumed to be of the <strong>int</strong> type, whose value is between $-2^{31} (-214783648)$ ~ $2^{31} (214783647)$.</li>
</ol>
<h3 id="Floating-Point-Literals"><a href="#Floating-Point-Literals" class="headerlink" title="Floating-Point Literals"></a>Floating-Point Literals</h3><ol>
<li><strong>Floating-Point Literals</strong> are written with a decimal point.</li>
<li>By default, a floating-point literal is treated as a <strong>double</strong> value.</li>
</ol>
<hr>
<h2 id="Scientific-notation"><a href="#Scientific-notation" class="headerlink" title="Scientific notation"></a>Scientific notation</h2><p>Scientific notation,</p>
<ul>
<li>$1.23456e2$ = $123.456$ = $1.23456e+2$</li>
<li>$1.23456e-2$ = $0.012345$</li>
</ul>
<p>so,</p>
<ul>
<li>$1.234e+2$ is $123.4$</li>
<li>$1.234e-2$ is $0.01234$</li>
</ul>
<hr>
<h2 id="Type-Coercion"><a href="#Type-Coercion" class="headerlink" title="Type Coercion"></a>Type Coercion</h2><ol>
<li><strong>Type Coercion</strong>: automatic conversion of an operand to another data type</li>
<li><strong>Promotion</strong>: convert to a higher type</li>
<li><strong>Demotion</strong>: convert to a lower type</li>
</ol>
<h3 id="Coercion-Rules"><a href="#Coercion-Rules" class="headerlink" title="Coercion Rules"></a>Coercion Rules</h3><ol>
<li>When operating on values of different data types, the lower one is promoted to the type of the higher one.</li>
<li>When using the <code>=</code> operator, the type of expression on right will be converted to type of variable on left.</li>
</ol>
<blockquote>
<p>int, float, double</p>
</blockquote>
<p>Rank from Low to High</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> num1 = <span class="number">5</span>, num2 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">double</span> avg = (num1 + num2)/<span class="number">2.0</span>;</span><br><span class="line"><span class="keyword">int</span> avg2 = (num1 + num2)/<span class="number">2.0</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; avg &lt;&lt; <span class="built_in">endl</span> &lt;&lt; avg2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 7.5</span></span><br><span class="line"><span class="comment">// 7</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Type-Casting"><a href="#Type-Casting" class="headerlink" title="Type Casting"></a>Type Casting</h2><ol>
<li><strong>Type casting</strong>: Used for manual data type conversion</li>
<li><strong>C-Style cast</strong>: data type name in <code>()</code></li>
<li><strong>Prestandard C++ cast</strong>: value in <code>()</code></li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">double</span>)<span class="number">3</span> <span class="function"><span class="keyword">or</span> <span class="title">double</span><span class="params">(<span class="number">3</span>)</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>Both are still supported in C++</li>
</ul>
<hr>
<h2 id="Random-numbers"><a href="#Random-numbers" class="headerlink" title="Random numbers"></a>Random numbers</h2><ol>
<li>These require <code>cstdlib</code> header file</li>
<li>Generate random numbers within a range: <code>rand()</code></li>
<li>To randomize the results of rand(), the srand() function must be used as follows: <code>srand(time(0))</code></li>
<li>The time function requires the <code>ctime</code> header file</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">rand() % <span class="number">10</span>       <span class="comment">// A random integer between 0-9</span></span><br><span class="line"><span class="number">50</span> + rand() % <span class="number">50</span>  <span class="comment">// A random integer between 50-99</span></span><br><span class="line"><span class="number">5</span> + rand() % <span class="number">21</span>   <span class="comment">// A random integer between 5-25</span></span><br></pre></td></tr></table></figure>

<ul>
<li>In general, to generate an integer from <code>a</code> to <code>b</code>:</li>
</ul>
<blockquote>
<p>a + rand() % (b - a + 1)</p>
</blockquote>
<p>E.g.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    srand(time(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a + rand()%(b - a + <span class="number">1</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="comment">//generate random number between 10 ~ 30</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Express-Arithmetic-expression"><a href="#Express-Arithmetic-expression" class="headerlink" title="Express Arithmetic expression"></a>Express Arithmetic expression</h2><p>&nbsp;</p>
<p>$$<br>P = \frac{L(\frac{r}{12})}{1 - (1+\frac{r}{12})^{-m}}<br>$$</p>
<p>&nbsp;</p>
<p>assuming that all variables are pre-declared and initialized.</p>
<blockquote>
<p>P = (L <em>r/12)/(1 - pow(1 + (r/12),-1</em>m))</p>
</blockquote>
<p>&nbsp;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> L, r, m, P;</span><br><span class="line"></span><br><span class="line">    L = <span class="number">2.0</span>;</span><br><span class="line">    r = <span class="number">12.0</span>;</span><br><span class="line">    m = <span class="number">4.0</span>;</span><br><span class="line"></span><br><span class="line">    P = (L * r/<span class="number">12</span>)/(<span class="number">1</span> - <span class="built_in">pow</span>(<span class="number">1</span> + (r/<span class="number">12</span>),<span class="number">-1</span>*m));</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; P &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Programming</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>Olemiss</tag>
        <tag>CSCI 259</tag>
      </tags>
  </entry>
  <entry>
    <title>Csci 356 Data Structures in Python Test1</title>
    <url>/2020/02/17/2020-02-17-csci356-test1/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="What-is-Computer-Science"><a href="#What-is-Computer-Science" class="headerlink" title="What is Computer Science"></a>What is Computer Science</h2><ul>
<li><strong>Computer Science</strong> is the study of <strong>problems</strong>, <strong>problem-solving</strong>, and the <strong>solutions</strong> that come out of the problem-solving process.</li>
</ul>
<blockquote>
<p>컴퓨터 과학은 문제 해결과정(problem-solving)에 대한 연구다.</p>
</blockquote>
<ul>
<li><strong>Algorithm</strong>: a step-by-step list of insturctions for solving a problem.</li>
</ul>
<blockquote>
<p>Algorithm is a instructions list for solving a problem.</p>
</blockquote>
<ul>
<li>Computer science is also the study of <strong>abstraction</strong>: displaying only essential info and hiding the details.</li>
</ul>
<blockquote>
<p>컴퓨터 과학은 또한 추상화에 대한 학문이다: 필수적인 정보만을 표시하고 세부사항을 숨긴다.</p>
</blockquote>
<hr>
<h2 id="What-is-Programming"><a href="#What-is-Programming" class="headerlink" title="What is Programming"></a>What is Programming</h2><ul>
<li><strong>Programming</strong> is the process of taking an algorithm and encoding it into a programming language, so that it can be executed by a computer<ul>
<li>Programming is the way that create a <strong>representation</strong> for our solutions.</li>
</ul>
</li>
<li>Programming languages must provide a notational way to represent both the <strong>process</strong> and the <strong>data</strong>;</li>
<li>to this end, languages provide <strong>control constructs</strong> and <strong>data types</strong>.<ul>
<li>There are building-blocks for algorithm development.</li>
</ul>
</li>
</ul>
<blockquote>
<p>프로그래밍(Programming)은 알고리즘을 가져다가 프로그래밍 언어로 인코딩하여 컴퓨터에 의해 실행될 수 있도록 하는 과정이다.<Br><br>프로그래밍 언어는 프로세스와 데이터를 모두 나타낼 수 있는 표기법을 제공해야 한다. (이를 위해 언어는 제어 구조와 데이터 유형을 제공한다.)</p>
</blockquote>
<hr>
<h2 id="Why-Study-Data-Structures-and-Abstract-Data-Types"><a href="#Why-Study-Data-Structures-and-Abstract-Data-Types" class="headerlink" title="Why Study Data Structures and Abstract Data Types"></a>Why Study Data Structures and Abstract Data Types</h2><ul>
<li>An <strong>abstract data type</strong> (ADT) is a logical description of how we view data and opeartions without regard to how they will be implemented.<ul>
<li>The idea of encapsulating the details of implementaion and hiding them from user’s view is called <strong>information hiding</strong>.</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>추상 데이터 타입(ADT)은 데이터 및 연산이 구현되는 방법과 관계없이 우리가 그것들을 어떻게 보는지를 논리적으로 설명하는 것이다.</th>
</tr>
</thead>
</table>
<h3 id="Abstract-Data-Type"><a href="#Abstract-Data-Type" class="headerlink" title="Abstract Data Type"></a>Abstract Data Type</h3><ul>
<li>The ADT is the <strong>shell</strong> that the user interacts with.</li>
<li>The implementation is <strong>hidden</strong>, and the user is not concerned with details of implementation.</li>
<li>The implementation of an ADT is often referred to as a <strong>data structure</strong>.</li>
</ul>
<p><a href="https://runestone.academy/runestone/books/published/pythonds/_images/adt.png" title="Abstract Data type" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/pythonds/_images/adt.png" alt="Abstract Data type"></a></p>
<div class="note primary">
            <h4 id="추상자료형-Abstract-Data-Type"><a href="#추상자료형-Abstract-Data-Type" class="headerlink" title="추상자료형(Abstract Data Type)"></a>추상자료형(Abstract Data Type)</h4><p>추상적 자료형(Abstract Data Type, 줄여서 ADT)은 컴퓨터 과학에서 자료들과 그 자료들에 대한 연산들을 명기한 것이다. 추상적 자료형은 구현 방법을 명시하고 있지 않다는 점에서 자료 구조와 다르다. 비슷한 개념의 추상적 자료 구조는 각 연산의 시간 복잡도를 명기하고 있지만 추상적 자료형에서는 이것조차 명기하지 않는다.</p>
          </div>

<p>추상적 자료형은 인터페이스와 구현을 분리하여 추상화 계층을 둔 것이다. 예를 들어, 전기 밥솥을 추상적 자료형에 비유한다면, 그 속에 들어가는 밥은 자료가 되고, 밥솥에 있는 취사, 예약취사 버튼들과 남은 시간을 표시하는 디스플레이에 어떤 내용들이 표시되어야 하는지를 명기한 것이다. 추상적 자료형에서는 이것들이 어떻게 구성되는지 관심이 없고, 몇 와트의 전기를 소모하는지에 대해서도 관심이 없다.</p>
<p>자료에 대한 연산은 자료에 대하여 질의를 던지는 것과 자료를 변경하기 위한 연산으로 나뉜다. 유명한 자료구조인 스택에서 자료를 변경하기 위한 연산은 기본적으로 push와 pop이 있다. 여기에 자료에 대하여 질의를 던지는 연산으로 스택의 크기를 알 수 있는 size 연산, 스택이 가득차거나 비었는지를 알 수 있는 full, empty 연산이 있고, 추가적으로 pop을 하면 제거될 자료를 볼 수 있는 peek 연산 등을 정의할 수 있다. 만약 여기에 각 연산들은 모두 상수 시간 복잡도 $O(1)$ 에 일어나야 한다고 명기한다면 이것은 ‘추상적 자료 구조’가 된다.</p>
<p>잘 알려진 추상 자료형에는 복소수, 리스트, 스택, 큐, 맵, 우선순위 큐, 집합 등이 있다.</p>
<hr>
<h2 id="Why-Study-Algorithms"><a href="#Why-Study-Algorithms" class="headerlink" title="Why Study Algorithms"></a>Why Study Algorithms</h2><ul>
<li>Algorithms are often quite different from one another</li>
<li>Consider the <em><strong>sqrt</strong></em> example, if there are two ways to implement the function that computes the square root of a number, one is perhaps “better” than the other:<blockquote>
<p>More <strong>efficient</strong> or simply works faster or uses less memory.</p>
</blockquote>
</li>
<li>We will learn <strong>analysis techniques</strong> that allow us to compare and contrast solutions.</li>
</ul>
<hr>
<h2 id="Review-of-Basic-Python"><a href="#Review-of-Basic-Python" class="headerlink" title="Review of Basic Python"></a>Review of Basic Python</h2><ul>
<li><strong>Python</strong> is a modern, easy-to-learn, object-oriented programming language.</li>
<li>It has a powerful set of built-in <strong>data types</strong> and easy-to-use <strong>control constructs</strong>.</li>
<li>It it an <strong>interpreted</strong> language, and the interpreter evaluates the code that you provide.</li>
</ul>
<p>E.g.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(‘Welcome to Python!’)</span><br><span class="line">Welcome to Python!</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<h3 id="Built-in-Atomic-Data-Types"><a href="#Built-in-Atomic-Data-Types" class="headerlink" title="Built-in Atomic Data Types"></a>Built-in Atomic Data Types</h3><ul>
<li>Python has two main built-in numeric classes that implement the integer and floating point data types:<blockquote>
<p><strong><em>int</em></strong> and <strong><em>float</em></strong></p>
</blockquote>
</li>
<li>The standard arithmetic operators:<blockquote>
<p><strong>**</strong>&nbsp;&nbsp;&nbsp;&nbsp;<strong>*</strong>&nbsp;&nbsp;&nbsp;&nbsp;<strong>/(//)</strong>&nbsp;&nbsp;&nbsp;&nbsp;<strong>%</strong>&nbsp;&nbsp;&nbsp;&nbsp;<strong>+</strong>&nbsp;&nbsp;&nbsp;&nbsp;<strong>-</strong></p>
</blockquote>
</li>
<li>The principal built-in types are numerics, sequences, mappings, classes, instances and exceptions.</li>
</ul>
<table>
<thead>
<tr>
<th align="left">Data Type</th>
<th align="left">type</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Numeric Type</td>
<td align="left">int, float, complex</td>
</tr>
<tr>
<td align="left">Iterator Type</td>
<td align="left">Generator Type</td>
</tr>
<tr>
<td align="left">Sequence Type</td>
<td align="left">list, tuple, range</td>
</tr>
<tr>
<td align="left">Text Sequence Type</td>
<td align="left">str</td>
</tr>
<tr>
<td align="left">Binary Sequence Type</td>
<td align="left">bytes, bytearray, memoryview</td>
</tr>
<tr>
<td align="left">Set Types</td>
<td align="left">set, frozenset</td>
</tr>
<tr>
<td align="left">Mapping Type</td>
<td align="left">dict</td>
</tr>
<tr>
<td align="left">Context Manager Type</td>
<td align="left">…</td>
</tr>
<tr>
<td align="left">Other Built-in Type</td>
<td align="left">Modules, Classes, Functions, Methods, etc.</td>
</tr>
</tbody></table>
<h3 id="Built-in-Atomic-Data-Types-Cont’d"><a href="#Built-in-Atomic-Data-Types-Cont’d" class="headerlink" title="Built-in Atomic Data Types (Cont’d)"></a>Built-in Atomic Data Types (Cont’d)</h3><ul>
<li><p>Python has the Boolean data type, implemented as the <strong>bool</strong> class, will be quite useful for representing truth values:</p>
<blockquote>
<p><strong><em>True</em></strong> and <strong><em>False</em></strong></p>
</blockquote>
</li>
<li><p>The standard comparision operators:</p>
<blockquote>
<p>&gt;&nbsp;&nbsp;&nbsp;&nbsp;&gt;=&nbsp;&nbsp;&nbsp;&nbsp;&lt;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;&nbsp;&nbsp;&nbsp;==&nbsp;&nbsp;&nbsp;&nbsp;!=</p>
</blockquote>
</li>
<li><p>The standard boolean operators:</p>
<blockquote>
<p><strong>not</strong>&nbsp;&nbsp;&nbsp;<strong>and</strong>&nbsp;&nbsp;&nbsp;<strong>or</strong></p>
</blockquote>
</li>
</ul>
<h3 id="Identifiers-and-Assignment"><a href="#Identifiers-and-Assignment" class="headerlink" title="Identifiers and Assignment"></a>Identifiers and Assignment</h3><ul>
<li><strong>Identifiers</strong> are names in programming langauges.</li>
<li>In Python, identifiers start with a letter or an underscore(_), can contain letters, digits, and underscores, no spaces, can’t be a keyword, and are case-sensitive.<ul>
<li>Use names that are meaningful for readability</li>
</ul>
</li>
<li><strong>Assignment statements</strong> provide a way to associate a name with a value.</li>
<li>The same variable can refer to <strong>different</strong> types of data.</li>
</ul>
<h3 id="Built-in-Collection-Data-Types"><a href="#Built-in-Collection-Data-Types" class="headerlink" title="Built-in Collection Data Types"></a>Built-in Collection Data Types</h3><p>Python has a number of very powerful built-in collection classes.</p>
<ol>
<li><strong>Ordered</strong> collections</li>
</ol>
<ul>
<li>lists, strings and tuples</li>
</ul>
<ol start="2">
<li><strong>Unordered</strong> collections</li>
</ol>
<ul>
<li>sets and dictionaries</li>
</ul>
<h3 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h3><ul>
<li><p><strong>Lists</strong> are written as comma-delimited values enclosed in <strong>square brackets</strong>.</p>
<blockquote>
<p>Empty list is simply []</p>
</blockquote>
</li>
<li><p>Lists are <strong>heterogeneous</strong>, meaning that elements in the list need not all be of the same data type.</p>
</li>
<li><p>The collection can be assigned to a <strong>varaible</strong>.</p>
</li>
<li><p>E.g.</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">myList = [<span class="number">1</span>, <span class="number">3</span>, <span class="literal">True</span>, <span class="number">6.5</span>]</span><br></pre></td></tr></table></figure>

<h4 id="Operations-on-Lists"><a href="#Operations-on-Lists" class="headerlink" title="Operations on Lists"></a>Operations on Lists</h4><ul>
<li><strong>Lists</strong> are considered to be <strong>sequentially ordered</strong>, they support a number of operations that can be applied to any Python sequence.</li>
</ul>
<h3 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h3><ul>
<li><strong>Strings</strong> are sequential collections of zero or more <strong>characters</strong> (letters, numbers, and other symbols).</li>
<li>Python uses <strong>quotation marks</strong> to enclose strings (either single or double).</li>
<li>since strings are sequences, the sequence operations described in lists would work.</li>
</ul>
<h3 id="Difference-between-Lists-and-Strings"><a href="#Difference-between-Lists-and-Strings" class="headerlink" title="Difference between Lists and Strings"></a>Difference between Lists and Strings</h3><ul>
<li>Lists can be modified while strings cannot (i.e. Lists are mutable and strings are immutable).</li>
<li>You can change an item in a list by using indexing and assignment; this change is not allowed in a string.</li>
<li>E.g.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">myName = <span class="string">'David'</span></span><br><span class="line">myName[<span class="number">3</span>] = <span class="string">'e'</span> <span class="comment"># Error!</span></span><br></pre></td></tr></table></figure>

<h3 id="Tuples"><a href="#Tuples" class="headerlink" title="Tuples"></a>Tuples</h3><ul>
<li><strong>Tuples</strong> are very similar to lists, they are heterogeneous sequences of data</li>
<li>The difference is that tuple is <strong>immuntable</strong>, like a string.</li>
<li>Tuples are written as comma-delimited values enclosed in <strong>parentheses</strong>.</li>
</ul>
<h3 id="Sets"><a href="#Sets" class="headerlink" title="Sets"></a>Sets</h3><ul>
<li><strong>Sets</strong> are unorderd collections of zero or more data objects.</li>
<li>Sets are <strong>heterogeneous</strong> and do <strong>not</strong> allow duplicates.</li>
<li>Sets are written as comma-delimited values enclosed in <strong>curly braces</strong>.</li>
<li>E.g.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mySet = &#123;<span class="literal">False</span>, <span class="number">4.5</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="string">'cat'</span>&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Dictionaries"><a href="#Dictionaries" class="headerlink" title="Dictionaries"></a>Dictionaries</h3><ul>
<li><strong>Dictionaries</strong> are <strong>unorderd</strong> collections of associated pairs of itmes where each pair consists of a <strong>key</strong> and a <strong>value</strong>.</li>
<li>This key-value pair is typically written as <strong>key : value</strong>.</li>
<li>Dictionaries are written as comma-delimited <code>key:value</code> pairs enclosed in <strong>curly braces</strong>.</li>
<li>E.g.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">myDict = &#123;<span class="string">'MS'</span>:<span class="string">'Jackson'</span>, <span class="string">'TN'</span>:<span class="string">'Nashville'</span>&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LogicGate</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span> <span class="params">(self, n)</span>:</span></span><br><span class="line">        self.label = n</span><br><span class="line">        self.output = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getLabel</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.label</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getOutput</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.output = self.performGateLogic()</span><br><span class="line">        <span class="keyword">return</span> self.output</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BinaryGate</span><span class="params">(LogicGate)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        LogicGate.__init__(self, n)</span><br><span class="line"></span><br><span class="line">        self.pinA = <span class="literal">None</span></span><br><span class="line">        self.pinB = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getPinA</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.pinA == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> int(input(<span class="string">"Enter pin A input for gate "</span> + self.getLabel() + <span class="string">":"</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.pinA.getFrom().getOutput()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getPinB</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.pinB == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> int(input(<span class="string">"Enter pin B input for gate "</span> + self.getLabel() + <span class="string">":"</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.pinB.getFrom().getOutput()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setNextPin</span><span class="params">(self, source)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.pinA == <span class="literal">None</span>:</span><br><span class="line">            self.pinA = source</span><br><span class="line">        <span class="keyword">elif</span> self.pinB == <span class="literal">None</span>:</span><br><span class="line">            self.pinB = source</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> RunTimeError(<span class="string">"Error, No Entry Pins"</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndGate</span><span class="params">(BinaryGate)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        BinaryGate.__init__(self, n)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">performGateLogic</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        a = self.getPinA()</span><br><span class="line">        b = self.getPinB()</span><br><span class="line">        <span class="keyword">if</span> a == <span class="number">1</span> <span class="keyword">and</span> b == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrGate</span><span class="params">(BinaryGate)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        BinaryGate.__init__(self, n)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">performGateLogic</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        a = self.getPinA()</span><br><span class="line">        b = self.getPinB()</span><br><span class="line">        <span class="keyword">if</span> a == <span class="number">1</span> <span class="keyword">or</span> b == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UnaryGate</span><span class="params">(LogicGate)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        LogicGate.__init__(self, n)</span><br><span class="line">        self.pin = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getPin</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.pin == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> int(input(<span class="string">"Enter pin input for gate "</span> + self.getLabel() + <span class="string">":"</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.pin.getFrom().getOutput()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setNextPin</span><span class="params">(self,source)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.pin == <span class="literal">None</span>:</span><br><span class="line">            self.pin = source</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"Cannot Connect: NO EMPTY PINS on this gate"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotGate</span><span class="params">(UnaryGate)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        UnaryGate.__init__(self, n)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">performGateLogic</span><span class="params">(self)</span>:</span></span><br><span class="line">        a = self.getPin()</span><br><span class="line">        <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> a == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Connector</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span> <span class="params">(self, fgate, tgate)</span>:</span></span><br><span class="line">        self.fromGate = fgate</span><br><span class="line">        self.toGate = tgate</span><br><span class="line">        tgate.setNextPin(self)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getFrom</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.fromGate</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getTo</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.toGate</span><br></pre></td></tr></table></figure>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://ko.wikipedia.org/wiki/%EC%B6%94%EC%83%81_%EC%9E%90%EB%A3%8C%ED%98%95" target="_blank" rel="noopener">추상 자료형 (Abstract Data Type)</a></li>
<li><a href="https://runestone.academy/runestone/books/published/pythonds/_images/adt.png" target="_blank" rel="noopener">Abstract Data type</a></li>
<li><a href="https://docs.python.org/3.8/library/stdtypes.html?highlight=built%20data%20type" target="_blank" rel="noopener">Built-in Types</a></li>
<li><a href="https://docs.python.org/ko/3.8/library/stdtypes.html?highlight=built%20data%20type" target="_blank" rel="noopener">Built-in Types(한글 문서)</a></li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Python</category>
        <category>Data Structure</category>
      </categories>
      <tags>
        <tag>Olemiss</tag>
        <tag>CSCI 356</tag>
      </tags>
  </entry>
  <entry>
    <title>Kakao clone coding</title>
    <url>/2020/02/15/2020-02-15-Kakao-clone-coding/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<p>Preview: <a href="https://sokhyg9016.github.io/Nomad-kakao-clone-2.0/">Link</a></p>
<h2 id="Screenshots-2020-01-20"><a href="#Screenshots-2020-01-20" class="headerlink" title="Screenshots (2020. 01. 20)"></a>Screenshots (2020. 01. 20)</h2><a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/friends.JPG" target="_blank" rel="noopener">
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/friends.JPG" title="friends" class="gallery-item"><img src="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/friends.JPG" align="left" width="125" alt = "friends"></a></a>
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/chats.JPG" target="_blank" rel="noopener">
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/chats.JPG" title="chats" class="gallery-item"><img src="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/chats.JPG" align="left" width="125" alt = "chats"></a></a>
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/chat.JPG" target="_blank" rel="noopener">
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/chat.JPG" title="chat" class="gallery-item"><img src="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/chat.JPG" align="left" width="125" alt = "chat"></a></a>
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/find.JPG" target="_blank" rel="noopener">
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/find.JPG" title="find" class="gallery-item"><img src="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/find.JPG" align="left" width="125" alt = "find"></a></a>
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/more.JPG" target="_blank" rel="noopener">
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/more.JPG" title="more" class="gallery-item"><img src="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/more.JPG" align="left" width="125" alt = "more"></a></a>
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/settings.JPG" target="_blank" rel="noopener">
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/settings.JPG" title="settings" class="gallery-item"><img src="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/settings.JPG" align="left" width="125" alt = "settings"></a></a>

<p style = "clear: both;"></p>

<h2 id="Introducion-Video"><a href="#Introducion-Video" class="headerlink" title="Introducion Video"></a>Introducion Video</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/6ZQAKorChFs" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<h2 id="Project-Settings"><a href="#Project-Settings" class="headerlink" title="Project Settings"></a>Project Settings</h2><ul>
<li>Make repository using Github desktop</li>
<li>Make <code>.gitignore</code></li>
<li>Make some html files</li>
<li>Upload the Github online</li>
</ul>
<h2 id="Chrome-Web-Extension-Apps"><a href="#Chrome-Web-Extension-Apps" class="headerlink" title="Chrome Web Extension Apps"></a>Chrome Web Extension Apps</h2><ul>
<li><a href="https://chrome.google.com/webstore/detail/colorzilla/bhlhnicpbhignbdhedgjhgdocnmhomnp?hl=en" target="_blank" rel="noopener">ColorZilla</a><ul>
<li>Get a color reading from any point in your browser, quickly adjust this color and paste it into another program</li>
</ul>
</li>
<li><a href="https://chrome.google.com/webstore/detail/page-ruler-redux/giejhjebcalaheckengmchjekofhhmal?hl=en" target="_blank" rel="noopener">PageRulerRedux</a><ul>
<li>Get perfect pixel dimensions and positioning to measure elements on any web page.</li>
</ul>
</li>
</ul>
<h2 id="TIPs-for-development"><a href="#TIPs-for-development" class="headerlink" title="TIPs for development"></a>TIPs for development</h2><ol>
<li>항상 컴포넌트 단위로 시작</li>
<li>반복되는 페이지의 파트로 시작 (헤더, 스테이터스 바, 네비게이션 바)</li>
<li>word를 나누기 위해 <code>-</code>를 사용 (e.g. <code>class = &quot;list-item&quot;</code>)</li>
<li>파일들을 작게 쪼개서 하나씩 완성해나가는 게 가장 좋을 수 도 있다.</li>
</ol>
<table>
<thead>
<tr>
<th>코드가 커지면 보기도 힘들고 기능별로 (파일을) 나누는 것도 좋다.</th>
</tr>
</thead>
</table>
<h3 id="E-g-s"><a href="#E-g-s" class="headerlink" title="E.g.s"></a>E.g.s</h3><ol>
<li>부모자식을 나누기 위해 <code>__</code>를 사용</li>
<li>한 클래스의 세부 속성을 나누기 위해 <code>--</code>를 사용</li>
</ol>
<blockquote>
<p>For example,<br><code>class = &quot;parent__child&quot;</code><br><code>class = &quot;friend--lg&quot;</code> (lg =&gt; large)</p>
</blockquote>
<hr>
<h2 id="Components"><a href="#Components" class="headerlink" title="Components"></a>Components</h2><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><ol>
<li>index.html</li>
<li>chat.html</li>
<li>friends.html</li>
<li>more.html</li>
<li>find.html</li>
<li>settings.html</li>
</ol>
<h3 id="css"><a href="#css" class="headerlink" title="css"></a>css</h3><h4 id="공통-속성"><a href="#공통-속성" class="headerlink" title="공통 속성"></a>공통 속성</h4><ol>
<li>status-bar.css</li>
<li>nav-bar.css</li>
<li>header.css</li>
<li>reset.css</li>
<li><code>style.css</code> : 다른 세부적인 css file들을 연결 및 웹 페이지 전체의 기준 값들을 결정</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700&amp;display=swap"</span>);</span><br><span class="line"><span class="keyword">@import</span> <span class="string">"reset.css"</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">"status-bar.css"</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">"header.css"</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">"nav-bar.css"</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">"friend.css"</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">"friends.css"</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">"find.css"</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">"more.css"</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">"settings.css"</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">"chat.css"</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">"mobile.css"</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>reset.css</strong>: 모든 기본 style 값을 0으로 바꾼다.</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">여기서 모든 style 값이란 margin, padding, display, font-size.. 등등의</span><br><span class="line">css 속성들을 말한다.</span><br><span class="line"></span><br><span class="line">Reset CSS란 설명하자면 브라우저간의 차이를 최대한 없에서,</span><br><span class="line">스타일이 0인 상태에서 디자인을 만들어 나가기 위해 생겨난것입니다.</span><br><span class="line">*font-size도 h1, h2, .. h7, p, a, font 가릴 것 없이 초기화 됨(크기가 같음.)</span><br><span class="line"></span><br><span class="line">또한 reset.css 대신 normalize.css를 사용할 수도 았다.</span><br><span class="line">reset.css가 모든 기본 값을 초기화시키는 것이라면 normalize.css는 기본적으로 각 브라우저의</span><br><span class="line">스타일을 따르고 있지만 기준을 만들어 줄 수 있다.</span><br><span class="line"></span><br><span class="line">즉, 모든 브라우저에서 한 태그(e.g.s h1)에 대한 크기를 같은 크기로 만드는 등의</span><br><span class="line">기준을 세울 수 있다.</span><br><span class="line"></span><br><span class="line">Refer: http://meyerweb.com/eric/tools/css/reset/</span><br></pre></td></tr></table></figure>

<h4 id="각-페이지-별-속성"><a href="#각-페이지-별-속성" class="headerlink" title="각 페이지 별 속성"></a>각 페이지 별 속성</h4><ol>
<li>chat.css</li>
<li>find.css</li>
<li>friend.css</li>
<li>friends.css</li>
<li>mobile.css</li>
<li>more.css</li>
<li>setting.css</li>
</ol>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://academy.nomadcoders.co/p/kakaoclone_total" target="_blank" rel="noopener">[이론+실전] 코코아톡 클론 코딩</a></li>
<li><a href="https://www.youtube.com/watch?v=6ZQAKorChFs" target="_blank" rel="noopener">노마드 아카데미 카카오톡 클론코딩 소개</a></li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Web Development</category>
        <category>Project</category>
        <category>Clone Coding</category>
      </categories>
      <tags>
        <tag>CSS3</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>BAEKJOON 10989 Solution</title>
    <url>/2020/02/15/2020-02-15-Baekjoon-10989/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<h2 id="Setting"><a href="#Setting" class="headerlink" title="Setting"></a>Setting</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> CNT_INFO[<span class="number">151</span>]; <span class="comment">// count of numbers</span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">30</span>];      <span class="comment">// store &amp; output area</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>buf[30] (10 * 4 + 4 = 44) [if all data is stored once.]</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">+-----+</span><br><span class="line">| 10  |   Size</span><br><span class="line">+-----+----------+</span><br><span class="line">| 10  |          |</span><br><span class="line">+-----+          |</span><br><span class="line">| 20  |          |</span><br><span class="line">+-----+          |</span><br><span class="line">| 30  |          |</span><br><span class="line">+-----+          |</span><br><span class="line">| 40  |          |</span><br><span class="line">+-----+          -</span><br><span class="line">| 100 |          D</span><br><span class="line">+-----+          A</span><br><span class="line">| 100 |          T</span><br><span class="line">+-----+          A</span><br><span class="line">| 100 |          -</span><br><span class="line">+-----+          |</span><br><span class="line">| 120 |          |</span><br><span class="line">+-----+          |</span><br><span class="line">| 130 |          |</span><br><span class="line">+-----+          |</span><br><span class="line">| 140 |          |</span><br><span class="line">+-----+----------+</span><br></pre></td></tr></table></figure>

<h2 id="If-statement"><a href="#If-statement" class="headerlink" title="If-statement"></a>If-statement</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (buf + sz - p - <span class="number">1</span> &lt; j)</span><br><span class="line">&#123;</span><br><span class="line">    fwrite(buf, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), p - buf, <span class="built_in">stdout</span>);</span><br><span class="line">    p = buf;</span><br><span class="line">    <span class="keyword">goto</span> check_1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>만약 현재의 저장소 <code>buf</code>보다 더 많은 입력을 했다면 이 경우 예외 처리가 필요하다.</li>
<li>따라서 현재까지 정렬된 저장소를 현재 문제가 발생된 부분을 제외하고 출력한다.</li>
<li>또한 현재 포인터 p를 다시 저장소의 처음 주소로 이동한다.</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">check_1:</span><br><span class="line">    <span class="built_in">memcpy</span>(p, STR_INFO[num], j);</span><br><span class="line">    s = p;</span><br><span class="line">    p += j;</span><br><span class="line">    CNT_INFO[num]--;</span><br><span class="line">    f = <span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>이때 현재 값<code>STR_INFO[num]</code>을 처음 주소로 옮긴다.</li>
<li>그리고 현재 포인터 p를 다음 주소로 옮긴다.</li>
</ul>
<h2 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// include user-defind memory</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"dataset.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//number: 1 ~ 150</span></span><br><span class="line"><span class="comment">//store area: 30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _BUFSIZ 30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _LENG 151</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> CNT_INFO[_LENG];</span><br><span class="line"><span class="keyword">char</span> buf[_BUFSIZ];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>* p;</span><br><span class="line">    <span class="keyword">int</span> sz, remain;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line"></span><br><span class="line">    fread(buf, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), _BUFSIZ, <span class="built_in">stdin</span>);</span><br><span class="line">    p = buf;</span><br><span class="line">    sz = <span class="keyword">sizeof</span>(buf);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Read size</span></span><br><span class="line">    <span class="keyword">for</span> (C = <span class="number">0</span>; *p++ &gt;= <span class="number">48</span>;)</span><br><span class="line">    &#123;</span><br><span class="line">        C = C * <span class="number">10</span> + (p[<span class="number">-1</span>] - <span class="number">48</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// store the values in array</span></span><br><span class="line">    <span class="keyword">while</span> (C--)</span><br><span class="line">    &#123;</span><br><span class="line">        remain = buf + sz - p;</span><br><span class="line">        <span class="keyword">if</span> (remain &lt; <span class="number">6</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(buf, p, remain);</span><br><span class="line">            fread(buf + remain, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), sz - remain, <span class="built_in">stdin</span>);</span><br><span class="line">            p = buf;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (num = <span class="number">0</span>; *p++ &gt;= <span class="number">48</span>;)</span><br><span class="line">        &#123;</span><br><span class="line">            num = num * <span class="number">10</span> + (p[<span class="number">-1</span>] - <span class="number">48</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        CNT_INFO[num]++;</span><br><span class="line">    &#125;</span><br><span class="line">    p = buf;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (num = <span class="number">1</span>; num &lt; _LENG; num++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> f, c, k, j;</span><br><span class="line">        <span class="keyword">char</span>* s;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// To get the length of number</span></span><br><span class="line">        <span class="keyword">for</span> (k = num, j = <span class="number">1</span>; k &gt; <span class="number">0</span>; k /= <span class="number">10</span>, j++);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (CNT_INFO[num])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//if current remain size is not enough to store the current number</span></span><br><span class="line">            <span class="keyword">if</span> (buf + sz - p - <span class="number">1</span> &lt; j)</span><br><span class="line">            &#123;</span><br><span class="line">                fwrite(buf, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), p - buf, <span class="built_in">stdout</span>);</span><br><span class="line">                p = buf;</span><br><span class="line">                <span class="keyword">goto</span> check_1;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        check_1:</span><br><span class="line">            <span class="built_in">memcpy</span>(p, STR_INFO[num], j);</span><br><span class="line">            s = p;</span><br><span class="line">            p += j;</span><br><span class="line">            CNT_INFO[num]--;</span><br><span class="line">            f = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// If still remain the count of number (it means, number &gt; 1).</span></span><br><span class="line">            <span class="keyword">while</span> (CNT_INFO[num] &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (CNT_INFO[num] &gt;= f)</span><br><span class="line">                &#123;</span><br><span class="line">                    c = f;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    c = CNT_INFO[num];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// if current remain size is not enough to store current sample numbers..</span></span><br><span class="line">                <span class="keyword">if</span> (buf + sz - p - <span class="number">1</span> &lt; j * c)</span><br><span class="line">                &#123;</span><br><span class="line">                    fwrite(buf, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), p - buf, <span class="built_in">stdout</span>);</span><br><span class="line">                    p = buf;</span><br><span class="line">                    <span class="keyword">goto</span> check_1;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">memcpy</span>(p, s, j * c);</span><br><span class="line">                p += j * c;</span><br><span class="line">                CNT_INFO[num] -= c;</span><br><span class="line">                f += c;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fwrite(buf, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), p - buf, <span class="built_in">stdout</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://www.acmicpc.net/source/17694817" target="_blank" rel="noopener">My source #1</a><br><a href="https://www.acmicpc.net/source/17694757" target="_blank" rel="noopener">My source #2</a></p>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Algorithm</category>
        <category>Baekjoon</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>What is Go language?</title>
    <url>/2020/01/14/2020-01-14-What%20is%20Go%20language/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="What-is-Go-language"><a href="#What-is-Go-language" class="headerlink" title="What is Go language?"></a>What is Go language?</h2><p><code>Go</code>는 2009년 구글이 개발한 프로그래밍 언어이다. 가비지 컬렉션 기능이 있고, 병행성(concurrent)을 잘 지원하는 컴파일 언어다.</p>
<blockquote>
<p>Go is an open source programming language that makes it easy to build <strong>simple</strong>, <strong>reliable</strong>, and <strong>efficient</strong> software.</p>
</blockquote>
<!-- ![GO Character](https://www.vertica.com/wp-content/uploads/2019/07/Golang.png) -->
<a href="https://www.vertica.com/wp-content/uploads/2019/07/Golang.png" class="gallery-item"><img src = "https://www.vertica.com/wp-content/uploads/2019/07/Golang.png" width = "500"></a>
↑ **`Gopher`**

<ol>
<li>Go는 다른 언어의 긍정적인 특징들을 유지하면서 공통이 되는 문제들을 해결할 새로운 프로그래밍 언어를 설계하기 위해 구글의 엔지니어 Robert Griesemer, 롭 파이크, 켄 톰프슨에 의해 실험적으로 시작되었다.</li>
<li>나중의 인터뷰에서, 언어 설계자 3명 모두 자신들이 C++의 복잡성을 싫어하며 이로 인해 새로운 언어를 설계하는 계기가 되었다고 언급하였다.</li>
</ol>
<hr>
<h2 id="Go의-언어-설계-및-특징"><a href="#Go의-언어-설계-및-특징" class="headerlink" title="Go의 언어 설계 및 특징"></a>Go의 언어 설계 및 특징</h2><p>&nbsp;<br><strong>Go는 단순함과 실용성을 지향하는 언어다.</strong></p>
<p>keyword가 25개밖에 되지 않고 문법 또한 간결해 입문이 쉬운 편이라고 한다.</p>
<p>&nbsp;<br><strong>Go의 문법은 대체로 C와 비슷하다.</strong></p>
<ol>
<li>코드 블록들은 중괄호로 둘러싸고 <code>for</code>, <code>switch</code>, <code>if</code>를 포함한 일반적인 제어구조를 가지고 있다.</li>
<li>C 와 다르게, 한 라인 끝의 세미콜론은 필수가 아닌 옵션이다.</li>
<li>변수 선언은 다르게 작성되고 대개 옵션이다.</li>
<li>형변환은 명시적으로 해야 한다.</li>
</ol>
<p>&nbsp;<br><strong>Go는 그리 좋지 않은 하드웨어에서도 빠르게 컴파일될 수 있도록 디자인되었다.</strong></p>
<ol>
<li>Go 언어의 특징은 컴파일 언어이지만 컴파일러의 컴파일 속도가 매우 빨라 인터프리터 언어처럼 쓸 수 있다는 점에 있다.</li>
<li>C++나 Java에 있는 기능들 중 타입 상속, 제너릭, 표명(assertion), 메서드 오버로딩, 포인터 연산은 Go 에서 포함하고 있지 않다.</li>
<li>Go 를 만들고 있는 개발자들은, 제너릭 등은 급하진 않지만 어느 시점에는 기능이 도입될 것이라고 한다.</li>
</ol>
<p>&nbsp;<br><strong>Go는 일차적으로 시스템 프로그래밍을 위해 개발되었다.</strong></p>
<ol>
<li>C++와 같이 Go는 컴파일러를 통해 컴파일되며, 정적 타입 (Statically Typed)의 언어이다.</li>
<li>또한 Java와 같이 Go는 <code>Garbage Collection</code> 기능을 제공한다.</li>
</ol>
<h2 id="단점"><a href="#단점" class="headerlink" title="단점?"></a>단점?</h2><p>실제로 고성능 연산에 사용하기에는 <code>C/C++</code>에 비해 느리며, 저수준 시스템 개발에서는 가비지 컬렉션과 고루틴을 지원하기 위한 무거운 런타임 등으로 인해 사용이 불가능에 가깝다.</p>
<p>그런 이유로 대체로 개발 속도와 실행 속도, 병행성 사이의 적정 지점이 필요한 서버 애플리케이션 개발에 많이 사용되는 편.</p>
<ol>
<li><p>바이트코드를 생성하는 언어가 아니므로, 바이너리만 배포할 경우 <code>C/C++</code> 프로그램이 그렇듯 해당 타깃 머신에 맞춰서 각각 컴파일해야 한다. 그렇게 하지 않고서 다중 플랫폼을 지원하려면 소스 코드째로 배포해야 한다.</p>
</li>
<li><p>Go 언어의 설계 지향점은 시스템 프로그래밍 언어였지만, 가비지 컬렉션의 지원이나 제네릭의 부재로 인해 박싱/언박싱이 불필요하게 많이 일어나는 등 <code>C/C++</code>을 대체할 수 있는 언어는 아니라는 것에 합의가 이루어지고 있는 상황이다.</p>
</li>
</ol>
<h2 id="병행성"><a href="#병행성" class="headerlink" title="병행성"></a>병행성</h2><p>Go를 이용해 프로그램들이 서로 소통하면서 상태를 공유하는 동시성(concurrency) 프로그램을 쉽게 만들 수 있다.</p>
<ul>
<li><strong>동시성</strong> 이란 멀티쓰레딩, 병렬 컴퓨팅 뿐 아니라, 비동기성 입출력 또한 포함한다.<ul>
<li>예를 들어, 이벤트 기반 서버와 같이, 데이터베이스나 네트워크 작업과 같이 시간이 많이 걸리는 연산을 하는 동안 프로그램이 다른 일을 하는 것을 말한다.</li>
</ul>
</li>
</ul>
<h2 id="목적"><a href="#목적" class="headerlink" title="목적"></a>목적</h2><p>Go는 정적 타입 컴파일 언어의 효율성과 동적 언어처럼 <strong>쉬운 프로그래밍</strong>을 할 수 있도록 하는 것을 목표로 한다. 또다른 목적은:</p>
<ol>
<li>안전성 : 타입 안전성과 메모리 안전성</li>
<li>병행성과 통신을 위한 훌륭한 지원</li>
<li>효과적인 가비지 컬렉션</li>
<li>빠른 컴파일</li>
</ol>
<hr>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><h3 id="Hello-world-in-Go"><a href="#Hello-world-in-Go" class="headerlink" title="Hello world in Go"></a>Hello world in Go</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main <span class="comment">// main() 함수를 포함하는 패키지의 이름이 main이 아닐 경우 에러가 발생한다.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	fmt.Println(<span class="string">"Hello, world!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Hello-world-example-of-Cgo"><a href="#Hello-world-example-of-Cgo" class="headerlink" title="Hello world example of Cgo"></a>Hello world example of Cgo</h3><p>Go의 C 코드를 위한 <strong>FFI</strong>(Foreign Function Interface)이다.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"C"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	C.puts(<span class="string">"Hello world!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://ko.wikipedia.org/wiki/Go_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)" target="_blank" rel="noopener">wiki</a></li>
<li><a href="http://codingnuri.com/golang-book/" target="_blank" rel="noopener">Go 프로그래밍 입문</a></li>
<li><a href="http://golang.site/go/basics" target="_blank" rel="noopener">예제로 배우는 Go 프로그래밍</a></li>
</ul>
<hr>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Go</tag>
      </tags>
  </entry>
  <entry>
    <title>Position property</title>
    <url>/2020/01/14/2020-01-14-position%20property%20note/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><blockquote>
<p>Default position value</p>
</blockquote>
<p><code>Default</code>로 모든 박스는 포지션이 static이다. 이 뜻은<br>그 element를 거기 놓으면 거기 있을 것이다~라는 뜻이다.</p>
<hr>
<h2 id="fixed"><a href="#fixed" class="headerlink" title="fixed"></a>fixed</h2><blockquote>
<p>Fixed stays with me while I scroll.</p>
</blockquote>
<p>포지션이 fixed 라면 화면 상에 표시되는 위치에 고정되어 스크롤해도 사라지지 않는다.<br>즉, element가 그 위치에 overwrap해서 고정된다.</p>
<hr>
<h2 id="absolute"><a href="#absolute" class="headerlink" title="absolute"></a>absolute</h2><ul>
<li>absolute는 fixed와 비슷하다. 어디에든 붙일 수 있지만 스크롤한다고 보이지는 않는다.</li>
<li>포지션을 absolute로 설정하고 설정 값을 주면 html 상에서 부모(father)에 해당하는 박스를 찾지 못할 수도 있다.</li>
<li>따라서 <code>relative</code> 포지션이 없는 경우, absolute는 문서의 본무 body에 맞춰서 포지션을 잡게 된다.</li>
</ul>
<blockquote>
<p>즉, <code>position: absolute;</code>가 설정되면 html 상에서 해당 element와 관계가 있는 (relative - 부모박스) element를 살펴보고 이에 상응해서 포지션이 결정된다. 이 경우 부모 박스가 상응하는 관계가 없어서 그냥 우리가 설정한 값대로 움직이게 됨으로 부모에 해당하는 박스를 찾지 못한다는 뜻이다.</p>
</blockquote>
<p>그렇기 때문에 만약 부모 박스가 없으면 child box는 문서 본문 body에 맞춰서 position을 잡을 것이다. 반대로 부모 박스에 <strong>position: relative;</strong> 를 설정하면 child box는 그에 상대해서 <code>absolute</code> 포지션을 잡을 것이다.</p>
<blockquote>
<ol>
<li>Not stays with me while I scroll.</li>
<li>Positioning relative to relative.</li>
</ol>
</blockquote>
<hr>
<h3 id="NOTE"><a href="#NOTE" class="headerlink" title="NOTE"></a>NOTE</h3><ol>
<li>주의해야 할 점은 <code>absolute</code> 포지션을 부모 element에 상대적으로 사용하려면 부모 element에서 <code>relative</code> 포지션을 먼저 설정해줘야 한다.</li>
<li>그게 설정되어야 차일즈 element는 부모 element 안에 위치할 수 있다.</li>
</ol>
<hr>
<h2 id="position-html"><a href="#position-html" class="headerlink" title="position.html"></a>position.html</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Position property<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      /*</span><br><span class="line">            각 브라우저 마다 가지고 있는 Default 값을 상쇄하기 위해서</span><br><span class="line">            아래와 같은 설정을 해준다. </span><br><span class="line">        */</span><br><span class="line">      body,</span><br><span class="line">      html &#123;</span><br><span class="line">        height: 100%;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      body &#123;</span><br><span class="line">        height: 100%;</span><br><span class="line">        background-color: gray;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="selector-class">.abs-box</span> &#123;</span></span><br><span class="line">        width: 400px;</span><br><span class="line">        height: 400px;</span><br><span class="line">        background-color: yellow;</span><br><span class="line">        position: relative;</span><br><span class="line">        top: 300px;</span><br><span class="line">        left: 50%;</span><br><span class="line">        transform: translate(-50%, -50%);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="selector-class">.abs-child</span> &#123;</span></span><br><span class="line">        width: 100px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: green;</span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 10px;</span><br><span class="line">        left: 10px;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"abs-box"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"abs-child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/position_property.png" title="Image description" class="gallery-item"><img src="../../../../img/position_property.png" alt="Image description"></a></p>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>CSS3</tag>
      </tags>
  </entry>
  <entry>
    <title>Advanced CSS</title>
    <url>/2020/01/14/2020-01-14-Advanced%20CSS/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="What-is-Transitions"><a href="#What-is-Transitions" class="headerlink" title="What is Transitions?"></a>What is Transitions?</h2><ol>
<li>트랜지션(Transitions)이란 element의 이동 및 변경을 멋지게 보여주는 효과들이다.</li>
<li>트랜지션은 focus, active, hover에서 효과적으로 사용된다.</li>
<li>즉 <strong>transition</strong> 이란 element가 하나의 state에서 다른 state로 넘어갈 때의 효과를 말한다.</li>
</ol>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>Text<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><figcaption><span>CSS</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">transition</span>: background-color <span class="number">5s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>여기서,</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">background-color</span> 5<span class="selector-tag">s</span> <span class="selector-tag">ease-in-out</span>;</span><br></pre></td></tr></table></figure>

<ol>
<li>위 코드의 의미는 배경색(background-color)를 <code>5s</code> 안에 <strong>ease-in-out</strong> 애니메이션 효과를 적용하여 바꾸라는 의미이다.</li>
<li>또한 이렇게 <strong>transition</strong> 앞에 바꾸고 싶은 property 값을 명시해주면 그 속성 값만 특정 효과를 적용하여 바꾸는 것이며, 만약 1개 이상의 설정값을 바꾸고 싶다면 transition 앞에 <code>all</code>이라고 적으면 된다.</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">all</span> 5<span class="selector-tag">s</span> <span class="selector-tag">ease-in-out</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://developer.mozilla.org/en/docs/Web/CSS/transition" target="_blank" rel="noopener">Official Transition Documentation</a></p>
<hr>
<h2 id="What-is-Transformation"><a href="#What-is-Transformation" class="headerlink" title="What is Transformation?"></a>What is Transformation?</h2><ol>
<li>트랜스포매이션(Transformation)은 html문서의 element들을 변경, 모습이 변하는 효과를 뜻한다.</li>
<li>즉 transform이란 element의 모양새(shape)를 바꾸는 것이다.</li>
<li><code>Transition</code>과 같이 합쳐서 사용할 수 있다. (즉 하나의 state에서 다른 state로 변할 때의 그 state에서의 모양새를 변경할 수 있다.)</li>
</ol>
<h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">0.5s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">skew</span>(<span class="number">30deg</span>, <span class="number">20deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>이렇게 되면 <code>.box</code>에 해당하는 element에 마우스를 올려놓았을 때 0.5s 초 안에 해당 element가<br>설정한 [<code>skew(...)</code>] 모습으로 변화한다.</p>
<p>또한 <code>transform</code> 설정을 복수로 결합하여 사용할 수 있다.</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">rotate</span>(1<span class="selector-tag">turn</span>) <span class="selector-tag">scale</span>(0<span class="selector-class">.5</span>, 0<span class="selector-class">.5</span>);</span><br></pre></td></tr></table></figure>

<h3 id="Reference-1"><a href="#Reference-1" class="headerlink" title="Reference"></a>Reference</h3><ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform" target="_blank" rel="noopener">CSS Transform Documentation</a></li>
</ul>
<hr>
<h2 id="What-is-Animation"><a href="#What-is-Animation" class="headerlink" title="What is Animation?"></a>What is Animation?</h2><ul>
<li><strong>Keyframe</strong> 은 CSS로 하여금 사용자가 animation을 생성했다는 것을 알려준다.</li>
</ul>
<blockquote>
<p><strong>First step</strong>: Default status<br><strong>Second step</strong>: The element that Something changes</p>
</blockquote>
<ul>
<li>Animation status가 2개만 필요할 때는 <code>from</code> ~ <code>to</code>만 작성하면 된다.</li>
<li>더 세부적인 각 단계별 status step를 작성하고 싶을 때는 <strong>0% ~ 100%</strong> 까지 작성하면 된다.</li>
</ul>
<h3 id="Example-2"><a href="#Example-2" class="headerlink" title="Example"></a>Example</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>Text<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">  <span class="attribute">animation</span>: <span class="number">1.5s</span> ScaleAndRotateSquare infinite ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> ScaleAndRotateSquare &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">1turn</span>) <span class="built_in">scale</span>(<span class="number">0.5</span>, <span class="number">0.5</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="What-is-media-query"><a href="#What-is-media-query" class="headerlink" title="What is media query?"></a>What is media query?</h2><blockquote>
<p>Media queries are conditions that let me change the CSS based on the size of the browser</p>
</blockquote>
<ol>
<li><code>media query</code>는 사용자의 디스플레이 환경에 따른 CSS 설정을 바꾸어 줄 수 있는 기능이다.</li>
<li>mobile - desktop 환경에 따른 디자인 변경을 가능하게 해준다.</li>
<li>반응형 웹 디자인에 유용</li>
</ol>
<h3 id="Example-3"><a href="#Example-3" class="headerlink" title="Example"></a>Example</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">320px</span>) <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">640px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>CSS3</tag>
      </tags>
  </entry>
  <entry>
    <title>Fluid layouts with Flexbox</title>
    <url>/2020/01/12/2020-01-12-Flexbox%20Note/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<p><strong>flex</strong> 이전, <code>display</code> 설정 시에 자동으로 완성되는 grid가 없었기 때문에 일일이 조절해줘야 했다. 예를 들어 element들을 가운데로 이동하려면 간격을 조정해야 하며, 모바일 상에서 볼때 다른 모습으로 출력이 되어서 보이는 등의 문제점들이 있었다. <code>flex</code>는 이러한 문제들을 해결할 수 있다.</p>
<hr>
<blockquote>
<p><strong>On Wiki,</strong><br>CSS Flexible Box Layout, commonly known as Flexbox, is a CSS3 web layout model.<br>It is in the W3C’s candidate recommendation (CR) stage. The flex layout allows<br>responsive elements within a container to be automatically arranged<br>depending upon screen size (or device).</p>
</blockquote>
<p>일반적으로 Flexbox로 알려진 CSS Flexible Box Layout은 CSS3 웹 레이아웃 모델입니다. W3C의 후보 추천 단계에 있습니다. 플렉스 레이아웃을 사용하면 컨테이너 내의 반응 형 요소를 화면 크기에 따라 자동으로 배열 할 수 있습니다.</p>
<h2 id="NOTE"><a href="#NOTE" class="headerlink" title="NOTE"></a>NOTE</h2><ol>
<li>flex는 엘리먼트들의 크기나 위치를 쉽게 잡아주는 도구이다.</li>
<li>flexbox의 콘텐츠는 어떤 방향에든 위치할 수 있으며, 동적으로 변경가능한 순서를 지정할 수도 있고, 가용한 공간 내에서 크기와 위치를 자동으로 조정하기도 한다.</li>
<li>지금까지 레이아웃과 관련된 다양한 속성들이 있었지만 그리 효과적이지 않지만 flex를 이용하면 레이아웃을 매우 효과적으로 표현할 수 있습니다.</li>
</ol>
<blockquote>
<p>요소가 유연한 품목(flexible item)이 아닌 경우, 플렉스 속성은 아무런 효과도 없다. 과거 문법 display: box(old)와 같이 사용되다가 비공식적인 문법으로 display: flexbox(hybrid)와 같이 사용되었다. 근래에 명세에는 display: flex(modern)가 되었다.</p>
</blockquote>
<p>If the element is not a flexible item, the flex property has no effect.</p>
<hr>
<h2 id="How-to-use-the-flex"><a href="#How-to-use-the-flex" class="headerlink" title="How to use the flex"></a>How to use the flex</h2><p>flex 속성은 flex-grow, flex-shrink, flex-basis의 축약속성으로, 같은 컨테이너안쪽에 flexible item들에 대한 속성값을 지정한다. 기본값은 0 1 auto이다.</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* flex : flex-grow flex-shrink flex-basis */</span></span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-flex</span>: <span class="number">1</span>; <span class="comment">/* Safari 6.1+ */</span></span><br><span class="line">  <span class="attribute">-ms-flex</span>: <span class="number">1</span>; <span class="comment">/* IE 10 */</span></span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>먼저 부모(parent) 클래스를 만들고, 자식 box(childs) 박스들을 만든다.</li>
<li><code>flex</code> 사용시 자식(childs) 박스에 적용하지 않는다. 오직 부모 클래스에만 적용하면 된다.</li>
<li>부모 클래스에 <code>display: flex</code>라고 쓰면 바로 적용된다. 이때 자식 박스들은 <code>inline-block</code>과 같이 출력된다.</li>
</ol>
<hr>
<h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><p><a href="../../../../img/flex-base.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-base.jpg" alt="Image description"></a></p>
<h3 id="Container-Properties"><a href="#Container-Properties" class="headerlink" title="Container Properties"></a>Container Properties</h3><table>
<thead>
<tr>
<th>Name</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td><code>flex-flow</code></td>
<td align="left"><code>flex-direction</code>와 <code>flex-wrap</code>의 단축 속성</td>
</tr>
<tr>
<td><code>flex-direction</code></td>
<td align="left">Flex Items의 주 축(main-axis)을 설정</td>
</tr>
<tr>
<td><code>flex-wrap</code></td>
<td align="left">flexible item을 wrap 할것인지 아닌지를 지정한다.</td>
</tr>
<tr>
<td><code>justify-content</code></td>
<td align="left">주 축(main-axis)의 정렬 방법을 설정</td>
</tr>
<tr>
<td><code>align-content</code></td>
<td align="left">교차 축(cross-axis)의 정렬 방법을 설정(2줄 이상)</td>
</tr>
<tr>
<td><code>align-items</code></td>
<td align="left">교차 축(cross-axis)에서 Items의 정렬 방법을 설정(1줄)</td>
</tr>
</tbody></table>
<h3 id="Items-Properties"><a href="#Items-Properties" class="headerlink" title="Items Properties"></a>Items Properties</h3><table>
<thead>
<tr>
<th>Name</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td><code>order</code></td>
<td align="left">Flex Item의 순서를 설정</td>
</tr>
<tr>
<td><code>flex</code></td>
<td align="left"><code>flex-grow</code>, <code>flex-shrink</code>, <code>flex-basis</code>의 단축 속성</td>
</tr>
<tr>
<td><code>flex-grow</code></td>
<td align="left">Flex Item의 증가 너비 비율을 설정</td>
</tr>
<tr>
<td><code>flex-shrink</code></td>
<td align="left">Flex Item의 감소 너비 비율을 설정</td>
</tr>
<tr>
<td><code>flex-basis</code></td>
<td align="left">Flex Item의 (공간 배분 전) 기본 너비 설정</td>
</tr>
<tr>
<td><code>align-self</code></td>
<td align="left">교차 축(cross-axis)에서 Item의 정렬 방법을 설정</td>
</tr>
</tbody></table>
<h3 id="주-축-main-axis-과-교차-축-cross-axis"><a href="#주-축-main-axis-과-교차-축-cross-axis" class="headerlink" title="주 축(main-axis)과 교차 축(cross-axis)"></a>주 축(main-axis)과 교차 축(cross-axis)</h3><p>주 축(main-axis)과 교차 축(cross-axis)의 개념은 다음과 같습니다.</p>
<p><strong><code>row</code></strong>: Items를 수평축으로 표시하므로 이때는 주 축이 수평이며 교차 축은 수직이 됩니다.<br><strong><code>column</code></strong>: Items를 수직축으로 표시하므로 주 축은 수직이며 교차 축은 수평이 됩니다.</p>
<p>즉, 방향(수평, 수직)에 따라 주 축과 교차 축이 달라집니다.</p>
<p><a href="../../../../img/flex-axis.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-axis.jpg" alt="Image description"></a></p>
<h3 id="시작점-flex-start-과-끝점-flex-end"><a href="#시작점-flex-start-과-끝점-flex-end" class="headerlink" title="시작점(flex-start)과 끝점(flex-end)"></a>시작점(flex-start)과 끝점(flex-end)</h3><ol>
<li>시작점(flex-start)과 끝점(flex-end)이라는 개념도 있습니다.</li>
<li>이는 주 축이나 교차 축의 시작하는 지점과 끝나는 지점을 지칭합니다.</li>
<li>역시 방향에 따라 시작점과 끝점이 달라집니다.</li>
</ol>
<p><a href="../../../../img/flex-start-end.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-start-end.jpg" alt="Image description"></a></p>
<h2 id="Container-Properties-1"><a href="#Container-Properties-1" class="headerlink" title="Container Properties"></a>Container Properties</h2><h3 id="flex-flow"><a href="#flex-flow" class="headerlink" title="flex-flow"></a>flex-flow</h3><p>The flex-flow property is a shorthand property for: <code>flex-direction</code> + <code>flex-wrap</code>.</p>
<blockquote>
<p>이 속성은 단축 속성으로 Flex Items의 주 축(main-axis)을 설정하고 Items의 여러 줄 묶음(줄 바꿈)도 설정합니다.</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">flex-flow</span>: 주축 여러줄묶음;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.flex-container</span> &#123;</span><br><span class="line">  <span class="attribute">flex-flow</span>: row-reverse wrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="flex-direction"><a href="#flex-direction" class="headerlink" title="flex-direction"></a>flex-direction</h3><p>The flex-direction property specifies the direction of the flexible items.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flex-direction: row|row-reverse|column|column-reverse|initial|inherit;</span><br></pre></td></tr></table></figure>

<p>Set the direction of the flexible items inside the &lt;div&gt; element in reverse order:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* Safari */</span></span><br><span class="line">  <span class="attribute">-webkit-flex-direction</span>: row-reverse; <span class="comment">/* Safari 6.1+ */</span></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-direction.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-direction.jpg" alt="Image description"></a></p>
<h4 id="flex-wrap"><a href="#flex-wrap" class="headerlink" title="flex-wrap"></a>flex-wrap</h4><p>The flex-wrap property specifies whether the flexible items should wrap or not.</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">flex-wrap: nowrap|wrap|wrap-reverse|initial|inherit;</span><br></pre></td></tr></table></figure>

<p>Make the flexible items wrap if necessary:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* Safari */</span></span><br><span class="line">  <span class="attribute">-webkit-flex-wrap</span>: wrap; <span class="comment">/* Safari 6.1+ */</span></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-wrap.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-wrap.jpg" alt="Image description"></a></p>
<h4 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content"></a>justify-content</h4><ol>
<li><code>justify-content</code> 속성은 플렉스 컨테이너의 현재 라인의 주축을 따라 플렉스 항목을 정렬한다.</li>
<li>flex items 사이, 그리고 주위에 공간을 분배하는 방법을 정의한다.</li>
<li>정렬은 유연한 길이와 자동 여백이 해결된 후에 수행된다.</li>
</ol>
<blockquote>
<p>The <code>justify-content</code> property aligns flex items along the main axis of the current line of the flex container. It defines how space is distributed between and around flex items. The alignment is done after any flexible lengths and any auto margins have been resolved.</p>
</blockquote>
<h5 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h5><p>만약 <code>flex-direction:row</code> 라면(default value), <em>justify-content</em> 가 수평으로 적용된다. 이때의 주 축은 수평축이기 때문이다.</p>
<blockquote>
<p>따라서 align-items는 수직이 된다.</p>
</blockquote>
<p>반대로 <code>flex-direction:column</code> 이 되면, <em>justify-content</em> 는 수직이 되고, <em>align-items</em> 는 수평이 된다.</p>
<blockquote>
<p>그래서 여기서 <code>align-items:center</code>라고 쓰면, 수평적으로 적용되어 가운데에 정렬된다.</p>
</blockquote>
<p><a href="../../../../img/flex-justify-content.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-justify-content.jpg" alt="Image description"></a></p>
<h4 id="align-content"><a href="#align-content" class="headerlink" title="align-content"></a>align-content</h4><p>The <code>align-content</code> property modifies the behavior of the flex-wrap property. It is similar to align-items, but instead of aligning flex items, it aligns flex lines.</p>
<blockquote>
<p>이 속성이 유효하려면 반드시 2줄 이상을 가져야 한다.</p>
</blockquote>
<p>Pack lines toward the center of the flex container:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#c3c3c3</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">align-content</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-align-content.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-align-content.jpg" alt="Image description"></a></p>
<h4 id="align-items"><a href="#align-items" class="headerlink" title="align-items"></a>align-items</h4><p>The <code>align-items</code> property specifies the default alignment for items inside the flexible container.</p>
<ol>
<li>교차 축(cross-axis)에서 Items의 정렬 방법을 설정합니다.</li>
<li>Items가 한 줄일 경우 많이 사용합니다.</li>
</ol>
<p>주의할 점은 Items가 <code>flex-wrap</code>을 통해 여러 줄(2줄 이상)일 경우에는 <code>align-content</code> 속성이 우선합니다.<br>따라서<code>align-items</code>를 사용하려면 <code>align-content</code> 속성을 기본값(stretch)으로 설정해야 합니다.</p>
<p><a href="../../../../img/flex-align-items.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-align-items.jpg" alt="Image description"></a></p>
<h5 id="CSS-align-self-Property"><a href="#CSS-align-self-Property" class="headerlink" title="CSS align-self Property"></a>CSS align-self Property</h5><p>The align-self property specifies the alignment for the selected item inside the flexible container.</p>
<table>
<thead>
<tr>
<th>NOTE: The <code>align-self</code> property overrides the flexible container’s <code>align-items</code> property.</th>
</tr>
</thead>
</table>
<ol>
<li>즉, <code>align-self</code>는 flex 설정된 부모 클래스 안의 자식 클래스에 선언하는 속성이다.</li>
<li>특정 자식 클래스의 정렬 방식을 설정하고 싶을 때 사용하면 된다.</li>
<li>주의할 점은 이 속성은 <code>align-items</code>속성을 무시, 즉, 덮어쓰기 때문에 이 점을 기억하자.</li>
</ol>
<p>Center the alignments for one of the items inside a flexible element:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#myBlueDiv</span> &#123;</span><br><span class="line">  <span class="attribute">align-self</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Example: <a href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss3_align-self" target="_blank" rel="noopener">W3schools.com</a></p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"father"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">id</span>=<span class="string">"Blue"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.father</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-start;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: nowrap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: orange;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#Blue</span> &#123;</span><br><span class="line">  <span class="attribute">align-self</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Result</strong></p>
<p><a href="../../../../img/flex.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex.jpg" alt="Image description"></a></p>
<hr>
<h2 id="Items-Properties-1"><a href="#Items-Properties-1" class="headerlink" title="Items Properties"></a>Items Properties</h2><h3 id="order"><a href="#order" class="headerlink" title="order"></a>order</h3><p>The <code>order</code> property specifies the order of a flexible item relative to the rest of the flexible items inside the same container.</p>
<ol>
<li>Item의 순서를 설정합니다.</li>
<li>Item에 숫자를 지정하고 숫자가 클수록 순서가 밀립니다.</li>
<li>음수가 허용됩니다.</li>
</ol>
<blockquote>
<p>HTML 구조와 상관없이 순서를 변경할 수 있기 때문에 유용합니다.</p>
</blockquote>
<p>Set the order of the flexible items:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>The order Property<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:coral;"</span> <span class="attr">id</span>=<span class="string">"myRedDIV"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:lightblue;"</span> <span class="attr">id</span>=<span class="string">"myBlueDIV"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:lightgreen;"</span> <span class="attr">id</span>=<span class="string">"myGreenDIV"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:pink;"</span> <span class="attr">id</span>=<span class="string">"myPinkDIV"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#c3c3c3</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Standard syntax */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#myRedDIV</span> &#123;</span><br><span class="line">  <span class="attribute">order</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#myBlueDIV</span> &#123;</span><br><span class="line">  <span class="attribute">order</span>: <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#myGreenDIV</span> &#123;</span><br><span class="line">  <span class="attribute">order</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#myPinkDIV</span> &#123;</span><br><span class="line">  <span class="attribute">order</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-order.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-order.jpg" alt="Image description"></a></p>
<h3 id="flex"><a href="#flex" class="headerlink" title="flex"></a>flex</h3><p>The flex property is a shorthand property for:</p>
<ul>
<li><code>flex-grow</code></li>
<li><code>flex-shrink</code></li>
<li><code>flex-basis</code></li>
</ul>
<p>The <code>flex</code> property sets the flexible length on flexible items.</p>
<blockquote>
<p>Item의 너비(증가, 감소, 기본)를 설정하는 단축 속성입니다.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flex: flex-grow flex-shrink flex-basis|auto|initial|inherit;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>Name</th>
<th align="left">Description</th>
<th align="left">Default</th>
</tr>
</thead>
<tbody><tr>
<td><code>flex-grow</code></td>
<td align="left">Item의 증가 너비 비율을 설정</td>
<td align="left"><code>0</code></td>
</tr>
<tr>
<td><code>flex-shrink</code></td>
<td align="left">Item의 감소 너비 비율을 설정</td>
<td align="left"><code>1</code></td>
</tr>
<tr>
<td><code>flex-basis</code></td>
<td align="left">Item의 (공간 배분 전) 기본 너비 설정</td>
<td align="left"><code>auto</code></td>
</tr>
</tbody></table>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">flex</span>: 증가너비 감소너비 기본너비;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">1</span> <span class="number">20px</span>; <span class="comment">/* 증가너비 감소너비 기본너비 */</span></span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">1</span>; <span class="comment">/* 증가너비 감소너비 */</span></span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">20px</span>; <span class="comment">/* 증가너비 기본너비 (단위를 사용하면 flex-basis가 적용됩니다) */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li><strong>flex-grow</strong> 를 제외한 개별 속성은 생략할 수 있습니다.</li>
<li><strong>flex: 1</strong> == <strong>flex-grow: 1</strong></li>
<li>그러면 나머지 속성은 생략했으니 기본값이 적용되어 <strong>flex-shrink:1</strong>, <strong>flex-basis:auto</strong>가 된다.</li>
<li>즉 <strong>flex:1</strong> 혹은 <strong>flex:1 1</strong> 은 <strong>flex: 1 1 auto</strong>와 같다고 볼 수 있습니다만 그렇지 않습니다.</li>
<li><code>flex-basis</code>의 기본값은 <code>auto</code>입니다만 단축 속성인 <strong>flex</strong> 에서 그 값을 생략할 경우 <strong>0</strong> 이 적용됩니다.</li>
<li>다시 정리하면 <code>flex: 1;</code> 혹은<code>flex: 1 1;</code>은 <code>flex: 1 1 0;</code>이 된다는 것입니다.</li>
</ol>
<p>Let all the flexible items be the same length, regardless of its content:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>The flex Property<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:coral;"</span>&gt;</span>RED<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:lightblue;"</span>&gt;</span>BLUE<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:lightgreen;"</span>&gt;</span>Green div with more content.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-item.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-item.jpg" alt="Image description"></a></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-zero-item.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-zero-item.jpg" alt="Image description"></a></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">1</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-one-one-auto-item.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-one-one-auto-item.jpg" alt="Image description"></a></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">1</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>OR,</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">flex-grow</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">flex-shrink</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-one-one-zero-item.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-one-one-zero-item.jpg" alt="Image description"></a></p>
<h3 id="flex-grow"><a href="#flex-grow" class="headerlink" title="flex-grow"></a>flex-grow</h3><p>The <code>flex-grow</code> property specifies how much the item will grow relative to the rest of the flexible items inside the same container.</p>
<ol>
<li>Item의 증가 너비 비율을 설정합니다.</li>
<li>숫자가 크면 더 많은 너비를 가집니다.</li>
<li>Item이 가변 너비가 아니거나, 값이 0일 경우 효과가 없습니다.</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">flex-grow</span>: 증가너비;</span><br></pre></td></tr></table></figure>

<ul>
<li>모든 Items의 총 증가 너비(flex-grow)에서 각 Item의 증가 너비의 비율 만큼 너비를 가질 수 있습니다.</li>
</ul>
<p>예를 들어 Item이 3개이고 증가 너비가 각각 <code>1, 2, 1</code>이라면,</p>
<ol>
<li>첫 번째 Item은 총 너비의 <code>25%</code>(1/4)을,</li>
<li>두 번째 Item은 총 너비의 <code>50%</code>(2/4)를,</li>
<li>세 번째 Item은 총 너비의 <code>25%</code>(1/4)을 가지게 됩니다.</li>
</ol>
<p><a href="../../../../img/flex-grow.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-grow.jpg" alt="Image description"></a></p>
<h3 id="flex-shrink"><a href="#flex-shrink" class="headerlink" title="flex-shrink"></a>flex-shrink</h3><ol>
<li>Item이 감소하는 너비의 비율을 설정합니다.</li>
<li>숫자가 크면 더 많은 너비가 감소합니다.</li>
<li>Item이 가변 너비가 아니거나, 값이 0일 경우 효과가 없습니다.</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">flex-shrink</span>: 감소너비;</span><br></pre></td></tr></table></figure>

<ul>
<li>감소 너비(<code>flex-shrink</code>)는 요소의 너비에 영향을 받기 때문에 계산하기 까다롭습니다.</li>
<li>영향을 받는다는 요소의 너비는 <code>width</code>, <code>height</code>, <code>flex-basis</code> 등으로 너비가 지정된 경우를 의미합니다.</li>
<li>Container의 너비가 줄어 Items의 너비에 영향을 미칠 경우, 영향을 미치기 시작한 지점부터 줄어든 거리 만큼 감소 너비 비율에 맞게 Item의 너비가 줄어듭니다.</li>
<li>예를 들어 Container의 너비가 줄어 Item의 너비에 영향을 미치기 시작한 지점부터 실제 줄어든 거리가 <code>90px</code>일 때, 요소 너비가 같은 Item이 2개이고 지정된 감소 너비가 각각 <code>2</code>와 <code>1</code>이라면, 감소 너비는 <code>2:1</code> 비율이며,</li>
</ul>
<h4 id="E-g"><a href="#E-g" class="headerlink" title="E.g"></a>E.g</h4><ol>
<li>첫 번째 Item은 90px의 <code>2/3</code>인 60px 만큼 너비가 감소하고,</li>
<li>두 번째 Item은 90px의 <code>1/3</code>인 30px 만큼 너비가 감소합니다.</li>
</ol>
<p><a href="../../../../img/flex-shrink.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-shrink.jpg" alt="Image description"></a></p>
<h3 id="flex-basis"><a href="#flex-basis" class="headerlink" title="flex-basis"></a>flex-basis</h3><p>The <code>flex-basis</code> property specifies the initial length of a flexible item.</p>
<ol>
<li>Item의 (공간 배분 전) 기본 너비(width)를 설정합니다.</li>
<li>값이 auto일 경우 width, height 등의 속성으로 Item의 너비를 설정할 수 있습니다.</li>
<li>하지만 단위 값이 주어질 경우 설정할 수 없습니다.</li>
</ol>
<table>
<thead>
<tr>
<th>Value</th>
<th align="left">Meaning</th>
<th align="left">Default</th>
</tr>
</thead>
<tbody><tr>
<td><code>auto</code></td>
<td align="left">가변 Item과 같은 너비</td>
<td align="left"><code>auto</code></td>
</tr>
<tr>
<td>단위</td>
<td align="left">px, em, cm 등 단위로 지정</td>
<td align="left"></td>
</tr>
</tbody></table>
<p><a href="../../../../img/flex-basis.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-basis.jpg" alt="Image description"></a></p>
<h3 id="align-self"><a href="#align-self" class="headerlink" title="align-self"></a>align-self</h3><p>교차 축(cross-axis)에서 개별 Item의 정렬 방법을 설정합니다.</p>
<ol>
<li><code>align-items</code>는 Container 내 모든 Items의 정렬 방법을 설정합니다.</li>
<li>필요에 의해 일부 Item만 정렬 방법을 변경하려고 할 경우 <code>align-self</code>를 사용할 수 있습니다.</li>
<li>이 속성은 <code>align-items</code> 속성보다 우선합니다.</li>
</ol>
<table>
<thead>
<tr>
<th>Value</th>
<th align="left">Description</th>
<th align="left">Default</th>
</tr>
</thead>
<tbody><tr>
<td><code>auto</code></td>
<td align="left">Container의 <code>align-items</code> 속성을 상속받음</td>
<td align="left"><code>auto</code></td>
</tr>
<tr>
<td><code>stretch</code></td>
<td align="left">Container의 교차 축을 채우기 위해 Item을 늘림</td>
<td align="left"></td>
</tr>
<tr>
<td><code>flex-start</code></td>
<td align="left">Item을 각 줄의 시작점(flex-start)으로 정렬</td>
<td align="left"></td>
</tr>
<tr>
<td><code>flex-end</code></td>
<td align="left">Item을 각 줄의 끝점(flex-end)으로 정렬</td>
<td align="left"></td>
</tr>
<tr>
<td><code>center</code></td>
<td align="left">Item을 가운데 정렬</td>
<td align="left"></td>
</tr>
<tr>
<td><code>baseline</code></td>
<td align="left">Item을 문자 기준선에 정렬</td>
<td align="left"></td>
</tr>
</tbody></table>
<p><a href="../../../../img/flex-align-self.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-align-self.jpg" alt="Image description"></a></p>
<hr>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ol>
<li>부모 컨테이너(parent)를 <code>flex</code>로 선언하면, 그 안에 종속된 자식 박스(child)들을 움직일 수 있다.<blockquote>
<p>그렇기 때문에 각각 박스에게 일일이 명령할 필요가 없다.</p>
</blockquote>
</li>
<li>또한 flexbox는 그 안의 element도 움직일 수 있다.</li>
</ol>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://webdir.tistory.com/349" target="_blank" rel="noopener">WEBDIR</a></li>
<li><a href="https://www.w3schools.com/css/css3_flexbox.asp" target="_blank" rel="noopener">W3schools.com</a></li>
<li><a href="https://heropy.blog/2018/11/24/css-flexible-box/" target="_blank" rel="noopener">CSS Flex(Flexible Box) 완벽 가이드</a></li>
<li><a href="http://flexboxfroggy.com/#ko" target="_blank" rel="noopener">Practice Flexbox</a></li>
<li><a href="https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Flexible_Box_Layout/Flexbox%EC%9D%98_%EA%B8%B0%EB%B3%B8_%EA%B0%9C%EB%85%90" target="_blank" rel="noopener">flexbox의 기본 개념</a></li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>CSS3</tag>
        <tag>Flexbox</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/12/28/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
  </entry>
  <entry>
    <title>C++ Primer Plus (6th Edition) [1/2]</title>
    <url>/2019/12/20/2019-12-26-cplusplus-note1/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<p>This site was built using <a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a>.</p>
<hr>
<h2 id="C와-C-언어의-역사와-철학"><a href="#C와-C-언어의-역사와-철학" class="headerlink" title="C와 C++언어의 역사와 철학"></a>C와 C++언어의 역사와 철학</h2><p>일반적으로 컴퓨터 언어는 데이터와 알고리즘이라는 두가지 개념을 다룬다.</p>
<ol>
<li>데이터(data): 프로그램이 사용하고 처리하는 정보</li>
<li>알고리즘(algorithm): 프로그램이 데이터를 처리하는 방법</li>
</ol>
<h3 id="C의-프로그래밍-철학"><a href="#C의-프로그래밍-철학" class="headerlink" title="C의 프로그래밍 철학"></a>C의 프로그래밍 철학</h3><p>C언어는 <code>절차적(procedural)</code>언어이다.</p>
<blockquote>
<p>절차적이라는 말은 프로그래밍에서 데이터보다 알고리즘을 더 치중한다는 뜻이다.</p>
</blockquote>
<p>절차적 프로그래밍은 컴퓨터가 수행해야 할 동작들을 명확히 구분하고, 그 구분된 동작들을 프로그래밍 언어로 구현하는 것이다.</p>
<p>원하는 결과를 얻기 위해 컴퓨터가 따라야 할 절차들을 규정해 놓은 것이 <code>절차적 프로그램</code>이다.</p>
<h4 id="하향식-top-down-설계"><a href="#하향식-top-down-설계" class="headerlink" title="하향식(top-down)설계"></a>하향식(top-down)설계</h4><ol>
<li>구조적 프로그래밍이 고수하는 또 하나의 철학</li>
<li>규모가 큰 프로그램을 작고 쉽게 다룰 수 있는 최소한의 단위로 더욱 잘게 쪼개는 것</li>
<li>전체 프로그램이 프로그래밍하기 쉬운 작은 모듈들의 집합이 될 때까지 계속해서 쪼개 나간다.</li>
</ol>
<hr>
<h3 id="Cpp의-프로그래밍-철학"><a href="#Cpp의-프로그래밍-철학" class="headerlink" title="Cpp의 프로그래밍 철학"></a>Cpp의 프로그래밍 철학</h3><p>구조적 프로그래밍 철학이 프로그램의 간결성과 신뢰성, 유지 보수의 용이성에 많은 향상을 가져온 것은 사실이나, 규모가 큰 프로그래밍은 여전히 어려운 문제로 남아 있었다.</p>
<p>이 문제의 해결책으로 객체 지향 프로그래밍 철학이 등장함.</p>
<table>
<thead>
<tr>
<th>절차적 프로그래밍</th>
<th>객체 지향 프로그래밍</th>
</tr>
</thead>
<tbody><tr>
<td>알고리즘 강조</td>
<td>데이터 강조</td>
</tr>
</tbody></table>
<p>객체 지향 프로그래밍은 해결해야 할 문제를 언어의 절차적 접근 방식에 억지로 끼워 맞추지 않고, 언어 자체를 해결해야 할 문제에 맞춘다.</p>
<blockquote>
<p>해결해야 할 문제의 특성에 맞게 데이터형 자체를 설계한다.</p>
</blockquote>
<h4 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h4><ol>
<li>C++에서는 클래스(Class) 가 그와 같은 목적으로 설계되는 새로운 데이터형이다.</li>
<li>객체(object) 는 그러한 클래스에 의해 만들어지는 특정한 데이터 구조이다.</li>
</ol>
<table>
<thead>
<tr>
<th>NOTE: OOP 환경에서는 모든 것을 <code>객체</code>로 표현하고, 이 객체의 형식을 갖는 변수를 <code>인스턴스(instance)</code>라고 한다.</th>
</tr>
</thead>
</table>
<h4 id="상향식-bottom-up-설계"><a href="#상향식-bottom-up-설계" class="headerlink" title="상향식(bottom-up)설계"></a>상향식(bottom-up)설계</h4><ol>
<li>저수준의 클래스를 먼저 설계한 후에 고수준의 프로그램 설계로 진행하는 것</li>
<li>객체 지향적으로 프로그램을 설계하라면 프로그램이 다루는 객체를 정확하게 서술하는 클래스를 먼저 설계해야 한다.</li>
<li>각 클래스에 해당하는 객체를 만들면서 프로그램 설계를 진행하는 것을 상향식(bottom-up)프로그래밍이라 한다.</li>
</ol>
<table>
<thead>
<tr>
<th>NOTE: <code>설계</code> 와 <code>구현</code> 을 분리하는 것은 OOP의 중요한 특징 중 하나이다.</th>
</tr>
</thead>
</table>
<hr>
<h3 id="이-외의-OOP의-장점"><a href="#이-외의-OOP의-장점" class="headerlink" title="이 외의 OOP의 장점"></a>이 외의 OOP의 장점</h3><p>OOP는 재활용이 가능한 소스 코드를 쉽게 작성할 수 있다.</p>
<h4 id="정보-은닉"><a href="#정보-은닉" class="headerlink" title="정보 은닉"></a>정보 은닉</h4><p>정보를 은닉할 수 있기 때문에 비인가된 접근으로부터 데이터를 안전하게 보호할 수 있음.</p>
<h4 id="다형성-polymorphism"><a href="#다형성-polymorphism" class="headerlink" title="다형성(polymorphism)"></a>다형성(polymorphism)</h4><p>다형성(polymorphism)을 이용하여 이름이 같은 연산자와 함수를 여러 벌 정의할 수 있기 때문에 상황에 따라 적당한 연산자나 함수를 프로그램이 스스로 선택하게 할 수 있다.</p>
<h4 id="상속-inheritance"><a href="#상속-inheritance" class="headerlink" title="상속(inheritance)"></a>상속(inheritance)</h4><p>상속을 이용하여 하나의 클래스로부터 새로운 클래스를 유도하는 등 절차적 프로그래밍과는 완전히 다른 접근 방식을 취할 수 있음.</p>
<hr>
<h2 id="Cpp와-일반화-프로그래밍"><a href="#Cpp와-일반화-프로그래밍" class="headerlink" title="Cpp와 일반화 프로그래밍"></a>Cpp와 일반화 프로그래밍</h2><ol>
<li>일반화 프로그래밍은 C++가 내걸고 있는 또 하나의 프로그래밍 철학이다.</li>
<li>일반화 프로그래밍과 OOP는 소스 코드의 재활용이라는 목표와, 포괄 개념의 추상화 기술을 서로 공유한다.</li>
<li>OOP는 데이터 를 강조하는 반면, 일반화 프로그래밍은 알고리즘 측면을 강조한다.</li>
</ol>
<table>
<thead>
<tr>
<th>객체 지향 프로그래밍</th>
<th>일반화 프로그래밍</th>
</tr>
</thead>
<tbody><tr>
<td><strong><code>데이터</code></strong> 를 강조</td>
<td><strong><code>알고리즘</code></strong> 를 강조</td>
</tr>
<tr>
<td>큰 프로젝트 진행시 좋음</td>
<td>데이터를 정렬(sort)하거나, 리스트를 병합(marge)하는 등의 일반적인 작업을 할 때 편리하다.</td>
</tr>
</tbody></table>
<blockquote>
<p>여기서 일반화(generic)이라는 말은 데이터형과 무관한 코드를 작성한다는 것을 의미한다.</p>
</blockquote>
<hr>
<h2 id="C-전처리기와-iostream-파일"><a href="#C-전처리기와-iostream-파일" class="headerlink" title="C++ 전처리기와 iostream 파일"></a>C++ 전처리기와 <code>iostream</code> 파일</h2><p>C와 마찬가지로 C++도 전처리기(preprocessor)를 사용한다.</p>
<blockquote>
<p>전처리기는 컴파일을 하기 전에 소스 파일에 대해 어떤 처리를 수행하는 프로그램이다.</p>
</blockquote>
<p>전처리기는 소스 파일을 컴파일할 때 자동으로 생성된다.<br>전처리 지시자(directive)는 이름이 <code>#</code>으로 시작하는 지시자이다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt; //전처리 지시자</span></span></span><br></pre></td></tr></table></figure>

<p><code>iostream</code>파일에는 C++의 몇 가지 입출력 기능이 정의되어 있다.<br>이 지시자는 전처리기에게 <code>iostream</code>파일의 내용을 프로그램에 추가하라고 지시한다.<br>컴파일되기 전에 소스 코드에 텍스트를 추가하거나 텍스트를 대체하는 것이 전처리기가 수행하는 기본적인 역할이다.</p>
<hr>
<h2 id="이름-공간-namespace"><a href="#이름-공간-namespace" class="headerlink" title="이름 공간(namespace)"></a>이름 공간(namespace)</h2><p><strong>이름 공간</strong>은 C++의 새로운 기능이다.<br>이름 공간은 프로그램을 작성할 때 여러 소프트웨어 개발업체들이 제공하는 코드를 사용할 수 있도록 도와준다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Microflop::wanda(<span class="string">"go dancing?"</span>); <span class="comment">//Microflop 이름 공간의 버전</span></span><br><span class="line">Piscine::wanda(<span class="string">"a fish named Desire"</span>); <span class="comment">//Piscine 이름 공간의 버전</span></span><br></pre></td></tr></table></figure>

<p>이러한 방식에 의해, C++ 컴파일러의 표준 구성 요소인 클래스, 함수, 변수는 <code>std</code>라는 이름 공간안에 담겨진다.<br>이와 같은 일은 <code>.h</code> 확장자가 없는 헤더 파일들 안에서 일어난다.</p>
<h3 id="using-지시자"><a href="#using-지시자" class="headerlink" title="using 지시자"></a>using 지시자</h3><p>다음과 같은 행을 소스 코드에 넣으면 <code>std::</code>접두어를 붙이지 않고도 std 이름 공간에 정의되어 있는 이름들을 사용할 수 있다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br></pre></td></tr></table></figure>

<p><code>using</code> 지시자는 std 이름 공간에 들어있는 모든 이름을 사용할 수 있게 해 준다.</p>
<hr>
<h2 id="C-소스-코드-스타일"><a href="#C-소스-코드-스타일" class="headerlink" title="C++ 소스 코드 스타일"></a>C++ 소스 코드 스타일</h2><ol>
<li>C++ 프로그램은 함수들의 집합이다.</li>
<li>이름 공간(namespace)은 프로그램을 작성할 때 여러 소프트웨어 개발업체들이 제공하는 코드를 사용할 수 있도록 도와준다.</li>
</ol>
<h2 id="cin과-cout클래스-맛보기"><a href="#cin과-cout클래스-맛보기" class="headerlink" title="cin과 cout클래스 맛보기"></a>cin과 cout클래스 맛보기</h2><p><code>클래스</code>는 사용자가 정의하는 자료형이다. 클래스를 정의하려면, 클래스로 표현 할 수 있는 정보의 종류가 무엇이고, 그것으로 수행할 수 있는 동작은 무엇인지 서술해야 한다.</p>
<p>클래스와 객체의 관계는 데이터형과 변수의 관계와 같다.</p>
<table>
<thead>
<tr>
<th></th>
<th>클래스</th>
<th>객체</th>
</tr>
</thead>
<tbody><tr>
<td>정의</td>
<td>데이터 형식과 그것이 사용되는 방법을 서술하는 것</td>
<td>클래스에 서술된 형식에 따라 실제로 생성되는 구체물</td>
</tr>
<tr>
<td>예시</td>
<td>유명 배우 (추상화적 개념)</td>
<td>제임스 딘 (클래스가 구체화된 객체)</td>
</tr>
</tbody></table>
<p>이러한 비유를 더 확장시킨다면, <code>배우</code>라는 클래스에는 그 배우의 활동까지도 포함시킬 수 있다.<br>예를 들어, 대사 외우기, 반항아 이미지 표현하기 등등이 <code>배우</code>클래스의 동작이 될 수 있다.</p>
<table>
<thead>
<tr>
<th>NOTE: <strong>클래스</strong>는 데이터 형식의 모든 속성을 서술한 것이고, <strong>객체</strong>는 그 서술에 따라 실제로 생성된 구체물이다.</th>
</tr>
</thead>
</table>
<hr>
<p>이제 <code>cout</code>을 살펴보자면,</p>
<blockquote>
<p><strong>iostream</strong></p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">__PURE_APPDOMAIN_GLOBAL <span class="keyword">extern</span> _CRTDATA2_IMPORT istream <span class="built_in">cin</span>, *_Ptr_cin;</span><br><span class="line">__PURE_APPDOMAIN_GLOBAL <span class="keyword">extern</span> _CRTDATA2_IMPORT ostream <span class="built_in">cout</span>, *_Ptr_cout;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p><strong>cout</strong>은 ostream 클래스의 속성을 가지고 생성된 객체이다.<br>ostream클래스는 iostream 파일에 정의되어 있다.</p>
<ul>
<li><p><strong>ostream</strong> 클래스 정의에는 ostream 객체가 표현할 수 있는 데이터 형식이나, 그 데이터 형식을 가지고 수행할 수 있는 동작, 예를 들어 문자열을 출력 스트림에 삽입하는 동작 등을 정의하고 있다.</p>
</li>
<li><p>마찬가지로 <strong>cin</strong>은 istream 클래스의 속성을 가지고 생성된 객체이며, 이것 역시 iostream 파일에 정의되어 있다.</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>NOTE: 주의해야 할 점은 <strong>cin</strong>은 C언어의 <code>scanf(&quot;%s&quot;, str);</code>와 같이 문자열을 공백문자로 구분하기 때문에 문자열 추출 시 항상 구문(phrase)나 전체 문장(sentence)가 아닌 하나의 단어(word)를 추출한다.</th>
</tr>
</thead>
</table>
<p>따라서 cin 으로부터 전체 문장을 받기 위해서는 <code>getline</code>함수를 사용한다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//C++ 11</span></span><br><span class="line"><span class="function">istream&amp; <span class="title">getline</span> <span class="params">(istream&amp; is, <span class="built_in">string</span>&amp; str, <span class="keyword">char</span> delim)</span></span>;</span><br><span class="line"><span class="function">istream&amp; <span class="title">getline</span> <span class="params">(istream&amp;&amp; is, <span class="built_in">string</span>&amp; str, <span class="keyword">char</span> delim)</span></span>;</span><br><span class="line"><span class="function">istream&amp; <span class="title">getline</span> <span class="params">(istream&amp; is, <span class="built_in">string</span>&amp; str)</span></span>;</span><br><span class="line"><span class="function">istream&amp; <span class="title">getline</span> <span class="params">(istream&amp;&amp; is, <span class="built_in">string</span>&amp; str)</span></span>;</span><br><span class="line"></span><br><span class="line">/_</span><br><span class="line">is: istream object from which characters are extracted.</span><br><span class="line">str: <span class="built_in">string</span> object where the extracted line is stored.</span><br><span class="line">The contents in the string before the call (if any) are discarded and replaced by the extracted line.</span><br><span class="line"></span><br><span class="line">Return value: The same as parameter is.</span><br><span class="line">_/</span><br><span class="line"></span><br><span class="line"><span class="comment">//Example</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// extract to string</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> name;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Please, enter your full name: "</span>;</span><br><span class="line"><span class="built_in">std</span>::getline (<span class="built_in">std</span>::<span class="built_in">cin</span>, name);</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello, "</span> &lt;&lt; name &lt;&lt; <span class="string">"!\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>Get line from stream into string.</li>
<li>Extract characters from <code>is</code> and stores them into <code>str</code> until the delimitation character <code>delim</code> is found. (or the new line, <code>\n</code>).</li>
</ol>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://isocpp.org/" target="_blank" rel="noopener">https://isocpp.org/</a></li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ Primer Plus (6th Edition) [2/2]</title>
    <url>/2019/12/20/2019-12-26-cplusplus-note2/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="데이터형"><a href="#데이터형" class="headerlink" title="데이터형"></a>데이터형</h2><p>데이터형(Data Type)은 일정 크기의 메모리에 저장된 정보를 해석하는 방법이다.</p>
<h3 id="C-에-내장된-데이터형"><a href="#C-에-내장된-데이터형" class="headerlink" title="C++에 내장된 데이터형"></a>C++에 내장된 데이터형</h3><p>C++에 내장된 데이터형에는 기본형과 복합형이 있으며, C와 비교해봤을 때 복합형을 제외한 기본형은 크게 다르지 않다.</p>
<div class="note no-icon">
            <ol><li><strong>기본형</strong><ul><li>정수를 포현할 수 있는 정수형</li><li>소수부가 있는 수를 표현할 수 있는 부동 소수점형<br>&nbsp;</li></ul></li><li><strong>복합형</strong><ul><li>배열, 문자열, 포인터, 구조체, 클래스</li></ul></li></ol>
          </div>

<p>C++11 표준에서는 몇몇 자료형이 새롭게 추가되었다.</p>
<table>
<thead>
<tr>
<th>자료형</th>
<th>설명</th>
</tr>
</thead>
<tbody><tr>
<td>long</td>
<td>64비트 정수(컴파일러에 따라 약간 다를 수 있음</td>
</tr>
<tr>
<td>char16_t</td>
<td>16비트 문자(ex. char16_t a = u’A’;)</td>
</tr>
<tr>
<td>char32_t</td>
<td>32비트 문자(ex. char32_t a = u’A’;)</td>
</tr>
<tr>
<td>auto</td>
<td>컴파일러가 자동으로 형식을 규정하는 자료형(ex. auto a = 10;)</td>
</tr>
<tr>
<td>decltype(expr)</td>
<td>expr과 동일한 자료형(ex.int a(10); decltype(a)y = 20;)</td>
</tr>
</tbody></table>
<h4 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h4><ol>
<li><code>char16_t</code> 와 <code>char32_t</code>는 유니코드 처리를 위한 자료형이다.</li>
<li><strong>auto</strong>의 경우 기존에 있던 자료형으로, 의미가 새롭게 바뀐 자료형이다.</li>
<li>초기값의 형식에 맞춰 선언하는 인스턴스의 형식이 자동으로 결정된다.</li>
</ol>
<blockquote>
<p>즉, auto나 decltype는 완전히 새로운 자료형이다.</p>
</blockquote>
<p>참고: <a href="http://www.cplusplus.com/doc/tutorial/variables/" target="_blank" rel="noopener">cplusplus.com</a></p>
<hr>
<h2 id="정수형"><a href="#정수형" class="headerlink" title="정수형"></a><strong>정수형</strong></h2><ol>
<li><code>정수형</code>은 2, 98 등과 같이 소수부가 없는 수를 말한다.</li>
<li>컴퓨터의 메모리용량에는 한계가 있으므로 컴퓨터 언어는 정수들의 부분 집합만을 나타낼 수 있다.</li>
</ol>
<h3 id="정수형의-종류"><a href="#정수형의-종류" class="headerlink" title="정수형의 종류"></a>정수형의 종류</h3><ol>
<li>C++에서는 프로그램에서 요구하는 특정 상황에 알맞은 정수형을 골라 사용할 수 있도록 여러 가지 정수형을 제공한다.</li>
<li><code>폭</code>(width, 정수 저장 시 사용되는 <strong>메모리 크기</strong>)에 따라 크기 순서대로 나열하자면 다음과 같다.</li>
</ol>
<div class="note no-icon">
            <p><strong>data type</strong></p><ul><li>char</li><li>short</li><li>int</li><li>long</li><li>long long (C++11)</li></ul>
          </div>

<h3 id="정수크기-계산-방법"><a href="#정수크기-계산-방법" class="headerlink" title="정수크기 계산 방법"></a>정수크기 계산 방법</h3><p>C++ 시스템의 정수 크기가 얼마인지 알고 싶으면, 데이터형의 크기를 알아내는 C++의 도구를 사용할 수 있다.</p>
<h4 id="1-sizeof-연산자"><a href="#1-sizeof-연산자" class="headerlink" title="1.sizeof 연산자"></a>1.sizeof 연산자</h4><p>sizeof 연산자를 사용하면 변수나 데이터형의 크기를 바이트 단위로 리턴받아 데이터형의 크기를 알 수 있다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n_int = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="keyword">int</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span> n_int &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure>

<p>sizeof 연산자는 int 와 같은 데이터형 이름에 사용할 때는 괄호를 사용해야 하며, n_int 와 같은 변수이름에는 괄호가 없어도 상관없다.</p>
<h4 id="2-climits-헤더파일"><a href="#2-climits-헤더파일" class="headerlink" title="2. climits 헤더파일"></a>2. climits 헤더파일</h4><p>2번째 방법은 여러 가지 정수형들의 범위에 대한 정보가 들어 있는 climits 헤더 파일을 열어 보는 것이다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n_int = INT_MAX;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; n_int &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"char의 비트수 = "</span> &lt;&lt; CHAR_BIT &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;   <span class="comment">//CHAR_BIT: char형의 비트수를 정의</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// INT_MIN, SHRT_MAX, LONG_MAX, LLONG_MAX.. 등 각 데이터형의 최대, 최소값 등이 들어 있음</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="초기화-방식"><a href="#초기화-방식" class="headerlink" title="초기화 방식"></a>초기화 방식</h3><p>C++에서 지역 변수등의 초기화는 기존 C에서 쓰던 방법부터 C++만의 초기화 문법이 존재한다.</p>
<p><strong>기존의 방식</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> owls = <span class="number">10</span>;</span><br></pre></td></tr></table></figure>

<p><strong>C++의 초기화 문법</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wrens</span><span class="params">(<span class="number">432</span>)</span></span>; <span class="comment">// C++의 새로운 초기화 문법, wrens를 432로 초기화</span></span><br></pre></td></tr></table></figure>

<p><strong>C++11에서의 초기화</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> hamburger = &#123;<span class="number">24</span>&#125;; <span class="comment">// hamburger를 24로 초기화</span></span><br><span class="line"><span class="keyword">int</span> emus&#123; <span class="number">7</span> &#125;;        <span class="comment">// =를 사용할 수도, 사용하지 않을 수도 있다.</span></span><br><span class="line"><span class="keyword">int</span> rheas = &#123; <span class="number">12</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> psychics&#123; &#125;; <span class="comment">// psychics를 0으로 초기화</span></span><br></pre></td></tr></table></figure>

<h3 id="Overflow-Underflow-In-C"><a href="#Overflow-Underflow-In-C" class="headerlink" title="Overflow/Underflow In C++"></a>Overflow/Underflow In C++</h3><ul>
<li>C++에서 자료형이 표현할 수 있는 한계를 벗어나면 그 표현 버위의 반대편에서부터 다시 시작한다.</li>
<li>Overflow/Underflow 발생 시 unsinged 의 경우 0 또는 최대값으로, signed 의 경우 최소값 또는 최대값으로 바뀐다.</li>
</ul>
<h3 id="상수"><a href="#상수" class="headerlink" title="상수"></a>상수</h3><ul>
<li>정수형 상수는 212, 116과 같이 프로그램에 직접 써 넣는 정수를 말한다.</li>
<li>C++에서 프로그램에 쓸 수 있는 상수는 크게 <strong>8진수</strong>, <strong>10진수</strong>, <strong>16진수</strong>가 있다.</li>
</ul>
<h4 id="정수값을-16진수나-8진수로-출력하려면"><a href="#정수값을-16진수나-8진수로-출력하려면" class="headerlink" title="정수값을 16진수나 8진수로 출력하려면?"></a>정수값을 16진수나 8진수로 출력하려면?</h4><ol>
<li>정수값을 16진수나 8진수로 출력하려면 <code>cout</code>의 특별한 기능을 사용해야 한다.</li>
<li><em>iostream</em> 헤더 파일은 정수를 8진수, 10진수, 16진수로 각각 출력하라는 메세지를 <code>cout</code>에 전달하는 dec, hex, oct 조정자를 제공한다. (10진수가 default이다.)</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//10진수</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="number">15</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8진수</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::oct;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="number">15</span> &lt;&lt; <span class="string">'\n'</span>;    <span class="comment">//17</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//16진수</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::hex;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="number">15</span> &lt;&lt; <span class="string">'\n'</span>;    <span class="comment">//f</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>std::cout &lt;&lt; std::oct</strong> 와 같은 코드는 화면에 아무것도 출력하지 않는다.</li>
<li>즉, 이 코드는 cout가 정수를 디스플레이하는 방식을 변경한다.</li>
</ul>
<h4 id="2진수-출력하는-방법"><a href="#2진수-출력하는-방법" class="headerlink" title="2진수 출력하는 방법"></a>2진수 출력하는 방법</h4><h5 id="lt-bitset-gt-헤더파일-이용"><a href="#lt-bitset-gt-헤더파일-이용" class="headerlink" title="&lt;bitset&gt; 헤더파일 이용"></a><code>&lt;bitset&gt;</code> 헤더파일 이용</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//변수 선언 후 출력</span></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">bitset</span>&lt;8&gt; ch_bits = <span class="number">15</span>;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ch_bits &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//형 변환 후 출력</span></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; (class <span class="built_in">std</span>::<span class="built_in">bitset</span>&lt;CHAR_BIT&gt;)<span class="number">15</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="직접-함수-만들기"><a href="#직접-함수-만들기" class="headerlink" title="직접 함수 만들기"></a>직접 함수 만들기</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dec_To_Bin</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">size_t</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = size - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> k = n &gt;&gt; i;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (k &amp; <span class="number">1</span>)</span><br><span class="line">			<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"1"</span>;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"0"</span>;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//space per 'x4'</span></span><br><span class="line">		<span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; !(i % <span class="number">4</span>))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="C-가-상수의-데이터형을-결정하는-방법"><a href="#C-가-상수의-데이터형을-결정하는-방법" class="headerlink" title="C++가 상수의 데이터형을 결정하는 방법"></a>C++가 상수의 데이터형을 결정하는 방법</h4><p>C++은 특별한 이유가 없다면 정수형 상수를 모두 <strong>int</strong>형으로 저장한다.<br>&nbsp;</p>
<p><strong>예외의 경우</strong></p>
<ol>
<li>특정 데이터형을 의미하는 접미어를 상수에 붙였을 때</li>
<li>값이 너무 커서 <code>int</code>형으로 저장할 수 없을 때<br>&nbsp;</li>
</ol>
<p><strong>접미어</strong><br>접미어가 없는 10진 정수는 <code>int</code>, <code>long</code>, <code>long long</code>형 중에서 크기가 가장 작은 것으로 나타낸다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">l, L    --&gt; <span class="keyword">long</span></span><br><span class="line">u, U    --&gt; <span class="keyword">unsigned</span> <span class="keyword">int</span></span><br><span class="line">ul      --&gt; <span class="keyword">unsigned</span> <span class="keyword">long</span></span><br><span class="line">ll, LL  --&gt; unsinged <span class="keyword">long</span> <span class="keyword">long</span></span><br></pre></td></tr></table></figure>


<h2 id="Char-형"><a href="#Char-형" class="headerlink" title="Char 형"></a><strong>Char 형</strong></h2><ol>
<li><strong>자료형(Data Type)</strong> 은 일정 크기의 메모리에 저장된 정보를 해석하는 방법이다.</li>
<li>Char 형은 문자와 숫자를 저장하기 위한 것이다.</li>
</ol>
<h3 id="ASCII와-UNICODE"><a href="#ASCII와-UNICODE" class="headerlink" title="ASCII와 UNICODE"></a>ASCII와 UNICODE</h3><p>프로그래밍 언어는 문자를 수치 코드로 나타냄으로써 컴퓨터가 문자를 저장할 수 있게 한다. 보통 이러한 수치 코드은 특정한 문자 세트(문자집합, 각 문자에 번호를 부여한 것 e.g.s, ASCII, EBCDIC, etc.)에 있는 각 문자에 대응된다.</p>
<p>미국에서 가장 많이 사용하는 문자세트는 <strong>ASCII</strong> 이다. 예를 들어 ASCII 문자 세트의 A 라는 문자는 수치 코드 65로 나타낼 수 있다. ASCII 같은 경우 국제적인 요구를 수용하지 못한다. 그래서 C++은 보다 넓은 범위의 값을 수용하는 Unicode 국제 문자 세트를 사용할 수 있는 확장 문자형을 지원한다.</p>
<hr>
<h4 id="문자집합과-인코딩-1-2"><a href="#문자집합과-인코딩-1-2" class="headerlink" title="문자집합과 인코딩 [1/2]"></a>문자집합과 인코딩 [1/2]</h4><p>컴퓨터는 수치 연산을 위해 설계되었다. 컴퓨터 발명 초기에는 문자를 표현해야 하는 요구가 없었다. 영어 단어 compute는 단순히 ‘계산하다’라는 뜻이고, 초창기의 컴퓨터와 ‘전자 계산기’는 동의어이기도 했다. 그러나 (너무나 당연하지만) 문자를 표현해야 하는 요구가 발생했다. 컴퓨터 간에 문자 데이터를 교환해야 할 일이 생기기도 했다.</p>
<p>이기종 컴퓨터끼리 문자 데이터를 교환하기 위해서는 표준이 필요하다. 이런 이유로 ASCII(American Standard Code for Information Interchange)와 같은 표준 문자 인코딩이 만들어졌다.</p>
<p>문자를 표현하기 위해서는 가장 먼저 <strong>문자 집합</strong> 을 정의해야 한다. 문자 집합은 표현해야 할 문자를 정하고 순서를 지정한 것이다. 영어라면 ‘A’, ‘B’, ‘C’에서 ‘Z’까지(소문자 a에서 z), 한글이라면 ‘가’, ‘각’, ‘간’에서 ‘힣’까지다. 물론 숫자나 특수 문자뿐만 아니라 인쇄와 통신을 제어하기 위한 제어 문자도 문자 집합에 포함되어야 한다.</p>
<p>이러한 문자 집합을 코드 형태(일반적으로 행렬)로 표기한 것을 <strong>코드화된 문자 집합</strong>(CCS, coded character set)이라고 한다.</p>
<p>예를 들어 ‘가’에는 10001, ‘각’에는 10002와 같이 코드를 할당하는 방식 말이다. 그리고 문자 집합을 컴퓨터에 저장하기 위해서 옥텟(octet, 8비트 단위) 형태로 표현한 것을 <strong>인코딩 방식</strong>(CES, character encoding scheme)이라고 한다.</p>
<p>출처: <a href="https://d2.naver.com/helloworld/19187" target="_blank" rel="noopener">한글 인코딩의 이해 1편: 한글 인코딩의 역사와 유니코드</a></p>
<hr>
<h4 id="문자집합과-인코딩-2-2"><a href="#문자집합과-인코딩-2-2" class="headerlink" title="문자집합과 인코딩 [2/2]"></a>문자집합과 인코딩 [2/2]</h4><p>유니코드를 설명하려면 <code>문자세트</code>와 <code>문자인코딩</code>이라는 용어를 구분해야 한다. 흔히 헷갈려 하는 용어다. 문자세트를 특별한 변화 없이 그대로 1:1로 나타내는 문자인코딩도 있고, 별도의 규칙에 의해 변경해서 표기하는 문자인코딩도 있다.</p>
<div class="note no-icon">
            <ol><li>문자세트는 그야말로 문자들의 집합이다. 문자들의 집합에 각 문자에 번호를 부여한 것이다.</li><li>문자인코딩 은 그런 문자들을 어떻게 코드를 할당하느냐를 나타낸 것이다.</li></ol>
          </div>

<p>출처: <a href="http://www.allofsoftware.net/2015/06/6.html" target="_blank" rel="noopener">유니코드는 어떻게 탄생했을까? (6) - All of Software</a></p>
<hr>
<h4 id="유니코드는-어떻게-탄생했을까"><a href="#유니코드는-어떻게-탄생했을까" class="headerlink" title="유니코드는 어떻게 탄생했을까?"></a>유니코드는 어떻게 탄생했을까?</h4><p>1950년대 최초로 컴퓨터가 탄생하고 초창기 컴퓨터에는 표준 문자세트이라는 것이 없었다. 즉, 컴퓨터마다 다른 문자세트를 사용하고 있었다. 그래서 1967년 미국에서 표준 문자세트를 제정한 것이 <code>ASCII</code>다. 미국에서 만들었기 때문에 알파벳과 숫자 등의 글자로 이루어졌다.</p>
<p>ASCII는 7비트 128글자를 사용하며 거의 모든 문자세트의 기본이 된다. 하지만 ASCII는 유럽글자를 표현 할 수 없었다. 그래서 유럽 사람들은 1980년대 중반 ASCII를 확장하여 <strong><code>ISO-8859</code></strong> 를 만들게 된다. ISO-8859의 특징은 기존 ASCII 영역을 건들지 않고 8비트 128글자 영역을 사용하여 미국에서 작성한 문서도 그대로 볼 수 있게 하였다.</p>
<ul>
<li><code>ISO-8859-1</code>은 네델란드어, 노르웨이어, 독일어 등 주로 서유럽의 언어를 지원한다.</li>
<li><code>ISO-8859-2</code>은 체코어, 폴란드어, 헝가리어 등 주로 중앙유럽의 언어를 지원한다.</li>
<li><code>ISO-8859-3</code>은 터키어 등 주로 남유럽의 언어를 지원한다. 이런 식으로 ISO-8859-16까지 추가되었는데 암기할 필요는 없다. ISO-8859를 사용해도 여러 유럽어를 동시에 표현할 수는 없었다.</li>
</ul>
<p>그 무렵 아시아에서는 문자세트 혼란의 시기가 도래하였다.</p>
<p>한국에서는 1980년대 초부터 여러 가지 한글 조합형 인코딩을 사용했다. 1987년 <code>KSC5601</code>(KSX1001)이라는 한글(한국어) 완성형 문자세트가 제정된 후 조합형과 완성형은 공존을 하다 조합형은 사라지게 된다. 조합형과 완성형의 팽팽한 균형이 무너진 시점은 윈도우95가 나오면서부터다. 그럼에도 불구하고 그 당시 똠방박하의 “똠”자를 윈도우에서 쓸 수 없다는 것은 많은 이슈가 되었다.</p>
<p>중국과 일본도 제 각각의 문자세트와 인코딩을 정의해서 전세계, 특히 아시아는 문자세트 춘추 전국시대가 되었다. 한나라 안에서도 수많은 문자세트와 인코딩이 넘쳐나고 있었다. 이는 <strong>전세계 컴퓨터, 소프트웨어가 서로 호환되지 않는다는 의미</strong> 를 얘기한다. 알파벳과 숫자를 제외하고는 깨져버리기 일쑤였다.</p>
<p>하나의 인코딩으로 영어와 한국어는 표시할 수 있고, 영어와 일본어도 표현을 할 수 있다. 하지만 영어, 한국어, 일본어, 중국어 이렇게 다양한 언어를 한꺼번에 표현할 수는 없었다. 그래서 탄생한 것이 <code>ISO2022</code>다. 중간에 특수한 문자를 만나면 문자세트가 바뀌는 것이다. ISO2022 인코딩의 문자열은 중간부터 읽을 경우 무슨 문자인지 알 수 없는 약점이 있었다.</p>
<p>80, 90년대 이런 춘추전국 시대에 개발을 해본 개발자라면 이런 혼란을 잘 알고 있을 것이다. 근래에 개발을 시작한 개발자들에게는 먼 옛날 얘기일 것이다.</p>
<p>그 당시에는 대부분의 소프트웨어가 나라별 버전을 따로 만들곤 했다.</p>
<blockquote>
<p>이러한 혼동 속에서 하나의 문자세트로 전세계 문자를 모두 표현하려는 움직임이 있었고, 썬마이크로시스템즈, 애플, MS, IBM, 볼랜드 등의 회사들이 유니코드컨소시엄을 만들어서 전세계 문자를 통합한 <strong>유니코드(Unicode)</strong> 를 만들기 시작했다.</p>
</blockquote>
<p>참여한 회사들을 보면 거의 미국 회사인 것을 알 수 있다. 미국 회사들이 전세계에 소프트웨어를 팔다보니 본인들이 힘들어서 통합의 필요성을 느낀 것이다. 그렇게 미국이 주도하여 1991년 유니코드 1.0이 탄생한다.</p>
<p>출처: <a href="http://www.allofsoftware.net/2015/06/6.html" target="_blank" rel="noopener">유니코드는 어떻게 탄생했을까? (6) - All of Software</a></p>
<hr>
<h4 id="클래스와-맴버함수"><a href="#클래스와-맴버함수" class="headerlink" title="클래스와 맴버함수"></a>클래스와 맴버함수</h4><p>클래스(class)는 데이터 형식과 그 데이터를 다루는 방법을 정의해 놓은 것이다. 맴버 함수는 클래스에 속하고, 클래스의 데이터를 다루는 방법을 정의한다. 예를 들어 ostream 클래스는 문자를 출력하도록 설계된 <code>put()</code> 이라는 맴버 함수를 가지고 있다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">ostream&amp; os = <span class="built_in">std</span>::<span class="built_in">cout</span>; <span class="comment">//os --&gt; ostream의 객체 cout의 참조자</span></span><br><span class="line">os.put(<span class="string">'!'</span>); <span class="comment">// cout.put()을 사용하여 문자 상수를 출력한다.</span></span><br></pre></td></tr></table></figure>

<ul>
<li>os.put()이 나타내는 의미는 클래스 객체인 os 를 통해 클래스 맴버 함수인 put()을 사용하겠다는 뜻이다.</li>
<li>put() 함수는 &lt;&lt; 연산자를 사용하여 문자를 출력하는 것에 대한 대안이다.</li>
</ul>
<hr>
<h4 id="유니버설-네임-코드"><a href="#유니버설-네임-코드" class="headerlink" title="유니버설 네임 코드"></a>유니버설 네임 코드</h4><p>C++ 표준은 기본적인 소스 문자 세트를 지원하면서 추가로 C++ 시스템이 확장 소스 문자 세트와 확장 실행 문자 세트를 제공하는 것을 허용한다. 즉, C++은 특정 키보드와는 무관한 국제 문자들을 표현하는 매커니즘을 가지고 있다, 이것이 <strong>유니버설 네임 코드</strong>(universal characters names)이다.</p>
<ol>
<li>유니버설 네임 코드는 이스케이프 시퀀스를 사용하는 것과 비슷하다.</li>
<li>만국 문자의 이름은 ＼u 또는 ＼U 중 어느 하나로 시작하게 된다. (뒤에는 16진수 숫자가 온다.)</li>
<li>이 숫자들은 ISO 10646 코드를 나타낸다.</li>
<li>지금도 개발 중인 ISO 10646 국제 표준 문자 세트는 전 세계의 다양한 문자들을 일관되게 나타낼 수 있는 수치 코드를 제공한다.</li>
<li>C++ 시스템이 확장 문자를 지원한다면, 유니버설 네임 코드를 문자 상수로 식별자 또는 문자열에 사용할 수 있다.</li>
</ol>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">//유니버설 네임 코드 (Universal character name) --&gt; 'wchar_t'의 부호와 길이는 가변이다.</span></span><br><span class="line"><span class="comment">////'가'의 유니버설 네임 코드</span></span><br><span class="line"><span class="keyword">wchar_t</span> wch&#123; <span class="string">L'가'</span> &#125;;</span><br><span class="line"><span class="keyword">wchar_t</span> wch_16&#123; <span class="string">L'\uAC00'</span> &#125;;  <span class="comment">// UTF-16, '\uAC00' --&gt; Unicode Character “가” (U+AC00)</span></span><br><span class="line">wchar_t wch_32&#123; L'\U0000AC00' &#125;; //UTF-32</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="유니코드와-ISO-10646-사이의-차이점은-무엇인가"><a href="#유니코드와-ISO-10646-사이의-차이점은-무엇인가" class="headerlink" title="유니코드와 ISO 10646 사이의 차이점은 무엇인가?"></a>유니코드와 ISO 10646 사이의 차이점은 무엇인가?</h4><p>유니코드 컨소시움이 공표한 유니코드 표준은 실제로 구현 레벨 3에서 기본 다중언어용 영역(BMP)을 포함한다. <strong>두 표준 공히 모든 문자들은 같은 위치를 가지며 같은 명칭을 사용한다.</strong></p>
<p>유니코드 표준은 부가적으로 몇몇 문자와 관련된 훨씬 많은 언어 체계를 정의하고 있으며 일반적으로 양질의 인쇄 출판 시스템 구현을 위한 더 나은 참고 자료가 된다. 유니코드는 예를 들어 라틴어와 유태어를 혼합하는 양 방향 텍스트를 취급하므로써, 몇몇 언어의 프리젠테이션 양식을 렌더링하기 위한 알고리즘과 문자열 비교를 위한 알 고리즘 및 그 외 많은 것을 명시하고 있다.</p>
<p>다른 한편 ISO 10646 표준은 잘 알려진 ISO 8859 표준과 비교했을 때 간단한 문자셋 테이블 그 이상은 아니다. 이것은 표준과 관련된 몇몇 기술들을 명시하고, 몇몇 인 코딩 대안들을 정의하며, ISO 6429와 ISO 2022와 같은 다른 ISO 표준과 관련된 UCS를 사용하는 방법에 관한 세부 사항을 포함한다. ISO 표준과 밀접하게 관련된 다른 것들 도 있다. 예를 들면, UCS 문자열의 정렬에 관한 ISO 14651이 있다. ISO 10646-1 표준의 훌륭한 특징으로는 그것이 다섯가지 다른 스타일로 변형시켜 한중일 국가의 glyph 예를 제공한다는 것이다. 반면 유니코드 표준은 한중일 국가의 한자를 단지 중국 식으 로만 보여준다.</p>
<p>출처: <a href="http://doc.kldp.org/Translations/html/UTF8-Unicode-KLDP/UTF8-Unicode-KLDP-6.html" target="_blank" rel="noopener">유니코드와 ISO 10646 사이의 차이점은 무엇인가?</a></p>
<hr>
<h4 id="확장-char형-wchar-t"><a href="#확장-char형-wchar-t" class="headerlink" title="확장 char형: wchar_t"></a>확장 char형: wchar_t</h4><p>때로는 프로그램이 1바이트로 표현할 수 없는 문자 세트(일본어, 중국어, 한국어 등..)를 처리해야 하는 경우가 있다.<br>C++은 이것을 두 가지 방법으로 처리한다.</p>
<ol>
<li>확장 문자 세트가 시스템의 기본 문자 세트면, 컴파일 개발 업체가 <strong>char</strong> 형을 처음부터 2바이트 또는 그 이상으로 만드는 방법</li>
<li>기본 문자 세트와 확장 문자 세트를 동시에 지원하는 방법</li>
</ol>
<p>즉, 2번째 방법의 의미는 <strong>char</strong> 형으로 기본 문자 세트를 나타내고, 확장 문자 세트는 <strong>wchar_t</strong> 형으로 나타내는 것이다. (Wide character type)</p>
<p>wchar_t형은 <strong>기초 데이터형(underlying type)</strong>이라고 부르는 정수형과 동일한 크기와 부호 속성을 가진다.</p>
<p>기초 데이터형은 시스템에 따라 다른데, 어떤 시스템에서는 unsinged short형일 수 있고, 다른 시스템에서는 int형이 될 수도 있다.</p>
<p><code>sourceannotations.h</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _WCHAR_T_DEFINED</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> short <span class="keyword">wchar_t</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _WCHAR_T_DEFINED</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span>  <span class="comment">/* _WCHAR_T_DEFINED */</span></span></span><br></pre></td></tr></table></figure>

<ol>
<li>위의 코드에 따르면 내 개발 환경은 2바이트 wchar_t형을 사용하는 시스템이므로, 만약 <code>wchar_t bob[] = L&quot;tall&quot;</code>와 같이 쓴다면, 각 문자에 2바이트 씩 대입하여 메모리에 저장할 것이다.</li>
<li>즉, 시스템에 따라 wchar_t의 부호와 길이는 변할 수 있다. (가변적)</li>
<li>cin과 cout은 입력과 출력을 <code>char</code>형 문자의 스트림으로 간주하기 때문에 <code>wchar_t</code>형을 처리하지 못한다.</li>
<li>최신 버전의 iostream헤더 파일은 wchar_t형 문자의 스트림을 처리하기 위해 <code>wcin</code>과 <code>wcout</code> 객체를 제공한다.</li>
<li>그리고 확장 문자 상수나 확장 문자 문자열은 그 앞에 <strong><code>L</code></strong> 을 붙여서 나타낸다.</li>
</ol>
<h4 id="새로운-C-11형-char16-t와-char32-t"><a href="#새로운-C-11형-char16-t와-char32-t" class="headerlink" title="새로운 C++11형: char16_t와 char32_t"></a>새로운 C++11형: char16_t와 char32_t</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//C++11 에서 추가된 데이터 형</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char16_t</span> ch1 = <span class="string">u'q'</span>; <span class="comment">//기본 16비트 문자</span></span><br><span class="line">char32_t ch2 = U'\U00022B'; //32비트 유니버설 문자 이름</span><br><span class="line"></span><br><span class="line"><span class="keyword">char16_t</span> ch_16 = <span class="string">u'\uAC00'</span>; <span class="comment">//char16_t 는 접두사 'u'를 사용</span></span><br><span class="line">char32_t ch_32 = U'\U0000AC00'; //char32_t는 접두사 'U'를 사용</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::hex;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ch_16 &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;	<span class="comment">//ac00</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ch_32 &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;	<span class="comment">//ac00</span></span><br></pre></td></tr></table></figure>

<p><code>wchar_t</code>, <code>char16_t</code>, <code>char32_t</code> 과 같이 <code>_</code>를 가지고 있는 형들은 정수형의 일종이지만, 시스템에 따라 다를 수 있다.</p>
<hr>
<h4 id="로케일-locale-이란"><a href="#로케일-locale-이란" class="headerlink" title="로케일(locale)이란?"></a>로케일(locale)이란?</h4><p><code>로케일</code>(locale [loukǽl] 로캘 / [loukάːl] 로칼)은 사용자의 언어, 국가뿐 아니라 사용자 인터페이스에서 사용자가 선호하는 사항을 지정한 매개 변수의 모임이다.</p>
<p><strong>일반 로케일 설정</strong></p>
<ul>
<li>표시 언어 설정</li>
<li>숫자 형식 설정</li>
<li>날짜/시간 형식 설정</li>
<li>시간대 설정</li>
<li>일광 절약 시간 (DST) 설정</li>
<li>통화 형식 설정</li>
</ul>
<hr>
<ol>
<li>세계 여러 나라들은 각자 다른 문화(언어, 날짜, 시간 등)을 갖고 있다. 프로그램의 국제화(Internationalization, 줄여서 i18n)는 사용자로 하여금 프로그램 수행시 로케일이란 것에 의해 입맛에 맞는 환경을 선택할 수 있도록 만든 것을 말한다.</li>
<li>예를 들어 어떤 프로그램의 메시지가 여러가지 언어로 주어져 있는 경우 이중에 어떤 언어의 것을 출력할 것인가를 사용자가 결정할 수 있는 것이다.</li>
<li>그것을 가능하게 해 주는 수단이 바로 <strong>로케일</strong>이다. 이것은 단순히 메시지 뿐만이 아니고 숫자표현법, 날짜 또는 시간표현법 등 여러가지에 사용될 수 있다.</li>
<li>그것 각각을 우리는 <strong>카테고리(category)</strong>라고 부른다.</li>
</ol>
<hr>
<h4 id="Set-Locale"><a href="#Set-Locale" class="headerlink" title="Set Locale"></a>Set Locale</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">setlocale</span><span class="params">(<span class="keyword">int</span> _Category, <span class="keyword">const</span> <span class="keyword">char</span>* _Locale)</span></span></span><br></pre></td></tr></table></figure>

<p><strong>_Category</strong></p>
<ul>
<li>프로그램의 로케일 정보의 어떤 부분을 변경할지 여부를 정수로 지정</li>
<li>언어 설정 카테고리<br>&nbsp;</li>
</ul>
<p><strong>_Locale</strong></p>
<ul>
<li>로케일을 지정</li>
<li>변경하려는 언어설정 명칭<br>&nbsp;</li>
</ul>
<p><strong>Return value</strong><br>함수는 유효한 로케일 및 카테고리를 지정하면, 로케일에 대한 문자열에 대한 포인터를 반환한다. 잘못된 경우 NULL 포인터를 반환하고 설정을 변경하지 않는다.<br>&nbsp;</p>
<p><strong>언어 설정 카테고리</strong></p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>LC_ALL</td>
<td>모든 카테고리</td>
</tr>
<tr>
<td>LC_COLLATE</td>
<td>strcoll(), _ stricoll(), wcscoll(), wcsicoll(), strxfrm()의 각 함수</td>
</tr>
<tr>
<td>LC_CTYPE</td>
<td>문자 처리 함수 (&lt;cctype&gt;의 함수들, isdigit, isxdigit 등 포함 x인 경우도 있음)</td>
</tr>
<tr>
<td>LC_MONETARY</td>
<td>localeconv() 함수가 반환하는 통화 형식 정보</td>
</tr>
<tr>
<td>LC_NUMERIC</td>
<td>형식이 지정된 출력 루틴 및 데이터 변환 루틴의 소수점 문자, localeconv() 함수가 반환하는 비화폐 형식 정보의 소수점 문자</td>
</tr>
<tr>
<td>LC_TIME</td>
<td>strftime() 함수와 wcsftime () 함수</td>
</tr>
</tbody></table>
<p>&nbsp;</p>
<p><strong>Example</strong></p>
<ol>
<li><em>setlocale(LC_ALL, nullptr);</em> 과 같이 작성한다면 아무런 언어 설정도 안했으므로 기본적인 언어 설정인 “C”로 리턴됨</li>
<li><em>setlocale(LC_ALL, “”);</em> 와 같이 작성한다면 OS를 기반으로 한 지역언어 설정을 적용하게 된다.</li>
</ol>
<blockquote>
<p>즉, 작성하고 있는 컴퓨터의 국가 설정 텍스트 모드로 변경됨.</p>
</blockquote>
<ul>
<li>한글 설정 방법</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">setlocale(LC_ALL, <span class="string">""</span>);</span><br><span class="line">setlocale(LC_ALL, <span class="string">"kor"</span>); <span class="comment">//"Korean" 또는 "korean" 등도 됌.</span></span><br></pre></td></tr></table></figure>

<p>&nbsp;</p>
<p><strong>NOTE</strong></p>
<ol>
<li>언어 설정을 원래대로 되돌리고 싶다면 이전 언어설정에 대한 문자열을 다시 setlocale을 통해서 설정해줘야 한다.</li>
<li>로케일 설정이 실제로 값 얻기 영향은 실행 환경에 따라 달라진다. 로케일 문자는 예를 들어 “korean”등 구현에 정의되어 있는 값 을 지정하여 언어를 한글로 설정할 수 있다. locale에 NULL 문자열을 지정하면 그 로케일은 처리계 정의의 네이티브 환경이다.</li>
<li>확실한 프로그램을 만들려면, <code>setlocale()</code> 함수의 반환 값을 확인하고, 로케일 설정이 실패했을 경우의 처리도 작성해야 한다.(실행하는 시스템이 한글를 지원하지 않으면 setlocale() 함수는 실패한다.)</li>
</ol>
<hr>
<h4 id="Source-Code-locale-개념-setlocale-등"><a href="#Source-Code-locale-개념-setlocale-등" class="headerlink" title="Source Code(locale 개념, setlocale 등)"></a>Source Code(locale 개념, <code>setlocale</code> 등)</h4><ol>
<li>10진수, 16진수, 8진수, 2진수 출력 방법</li>
<li>wchar_t, char16_t, char32_t 사용법</li>
<li><code>setlocale()</code> 함수 및 <code>std::locale()</code> 활용</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//C Standard Library</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Standard Library</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;locale.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//User-defined Library</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"TypeName.h"</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dec_To_Bin</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">size_t</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = size - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> k = n &gt;&gt; i;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (k &amp; <span class="number">1</span>)</span><br><span class="line">			<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"1"</span>;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"0"</span>;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//space per 'x4'</span></span><br><span class="line">		<span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; !(i % <span class="number">4</span>))</span><br><span class="line">			<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//참조자를 이용하여 출력</span></span><br><span class="line">	<span class="comment">//std::ostream&amp; os = std::cout;</span></span><br><span class="line">	<span class="comment">//std::istream&amp; is = std::cin;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//os.put('!');</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">////10진수</span></span><br><span class="line">	<span class="comment">//std::cout &lt;&lt; 15 &lt;&lt; '\n';</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">////8진수</span></span><br><span class="line">	<span class="comment">//std::cout &lt;&lt; std::oct;</span></span><br><span class="line">	<span class="comment">//std::cout &lt;&lt; 15 &lt;&lt; '\n';</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">////16진수</span></span><br><span class="line">	<span class="comment">//std::cout &lt;&lt; std::hex;</span></span><br><span class="line">	<span class="comment">//std::cout &lt;&lt; 15 &lt;&lt; '\n';</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">////2진수</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">////변수 선언 후 출력</span></span><br><span class="line">	<span class="comment">//std::bitset&lt;8&gt; ch_bits = 15;</span></span><br><span class="line">	<span class="comment">//std::cout &lt;&lt; ch_bits &lt;&lt; '\n';</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">////형 변환 후 출력</span></span><br><span class="line">	<span class="comment">//std::cout &lt;&lt; (class std::bitset&lt;CHAR_BIT&gt;)15 &lt;&lt; '\n';</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">////함수를 이용하여 출력</span></span><br><span class="line">	<span class="comment">//Dec_To_Bin(15, 16);</span></span><br><span class="line">	<span class="comment">//Dec_To_Bin(15, 32);</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//유니버설 네임 코드 (Universal character name) --&gt; 'wchar_t'의 부호와 길이는 가변이다.</span></span><br><span class="line">	<span class="comment">////'가'의 유니버설 네임 코드</span></span><br><span class="line">	<span class="keyword">wchar_t</span> wch&#123; <span class="string">L'가'</span> &#125;;</span><br><span class="line">	<span class="keyword">wchar_t</span> wch_16&#123; <span class="string">L'\uAC00'</span> &#125;;  <span class="comment">// UTF-16, '\uAC00' --&gt; Unicode Character “가” (U+AC00)</span></span><br><span class="line">	wchar_t wch_32&#123; L'\U0000AC00' &#125;; //UTF-32</span><br><span class="line"></span><br><span class="line">	<span class="comment">//C++11 에서 추가된 데이터 형</span></span><br><span class="line">	<span class="keyword">char16_t</span> ch_16 = <span class="string">u'\uAC00'</span>; <span class="comment">//char16_t 는 접두사 'u'를 사용</span></span><br><span class="line">	char32_t ch_32 = U'\U0000AC00'; //char32_t는 접두사 'U'를 사용</span><br><span class="line"></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::hex;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ch_16 &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;	<span class="comment">//ac00</span></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ch_32 &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;	<span class="comment">//ac00</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">wchar_t</span> kor_wch[]&#123; <span class="string">L"안녕하세요"</span> &#125;;</span><br><span class="line">	<span class="keyword">wchar_t</span> chi_wch[]&#123; <span class="string">L"为什么"</span> &#125;;</span><br><span class="line">	<span class="keyword">wchar_t</span> ja_wch[]&#123; <span class="string">L"こんにちは"</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> *_korean, *_chinese, * _japen;</span><br><span class="line"></span><br><span class="line">	_korean = strdup(setlocale(LC_ALL, <span class="string">"ko-KR"</span>));</span><br><span class="line">	_chinese = strdup(setlocale(LC_ALL, <span class="string">"zh-CN"</span>));</span><br><span class="line">	_japen = strdup(setlocale(LC_ALL, <span class="string">"ja-JP"</span>));</span><br><span class="line"></span><br><span class="line">	<span class="comment">//Set new locale</span></span><br><span class="line">	<span class="comment">//1. use setlocale (select the locale environment &amp; change or reset)</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//set locale to korean</span></span><br><span class="line">	setlocale(LC_ALL, _korean);</span><br><span class="line">	<span class="built_in">std</span>::wcout &lt;&lt; <span class="string">"result[_korean]: "</span> &lt;&lt; kor_wch &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//set locale to chinese</span></span><br><span class="line">	setlocale(LC_ALL, _chinese);</span><br><span class="line">	<span class="built_in">std</span>::wcout &lt;&lt; <span class="string">"result[_chinese]: "</span> &lt;&lt; chi_wch &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//set locale to japen</span></span><br><span class="line">	setlocale(LC_ALL, _japen);</span><br><span class="line">	<span class="built_in">std</span>::wcout &lt;&lt; <span class="string">"result[_japen]: "</span> &lt;&lt; ja_wch &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">free</span>(_korean);</span><br><span class="line">	<span class="built_in">free</span>(_chinese);</span><br><span class="line">	<span class="built_in">free</span>(_japen);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//1. use std locale (select the locale environment &amp; change or reset)</span></span><br><span class="line">	<span class="comment">//std::cout &lt;&lt; "Current local name: " &lt;&lt; std::locale().name() &lt;&lt; "\n\n";</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//std::locale::global(std::locale("ko-KR.UTF-8"));</span></span><br><span class="line">	<span class="comment">//std::wcout &lt;&lt; "Result[_korean]: " &lt;&lt; kor_wch &lt;&lt; '\n';</span></span><br><span class="line">	<span class="comment">//std::cout &lt;&lt; '\n';</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//std::locale::global(std::locale("zh-CN.UTF-8"));</span></span><br><span class="line">	<span class="comment">//std::wcout &lt;&lt; "Result[_chinese]: " &lt;&lt; chi_wch &lt;&lt; '\n';</span></span><br><span class="line">	<span class="comment">//std::cout &lt;&lt; '\n';</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//std::locale::global(std::locale("ja-JP.UTF-8"));</span></span><br><span class="line">	<span class="comment">//std::wcout &lt;&lt; "Result[_japen]: " &lt;&lt; ja_wch &lt;&lt; '\n';</span></span><br><span class="line">	<span class="comment">//std::cout &lt;&lt; '\n';</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://isocpp.org/" target="_blank" rel="noopener">https://isocpp.org/</a></li>
<li><a href="http://www.cplusplus.com/doc/tutorial/variables/" target="_blank" rel="noopener">cplusplus.com</a></li>
<li><a href="https://d2.naver.com/helloworld/19187" target="_blank" rel="noopener">한글 인코딩의 이해 1편: 한글 인코딩의 역사와 유니코드</a></li>
<li><a href="http://www.allofsoftware.net/2015/06/6.html" target="_blank" rel="noopener">유니코드는 어떻게 탄생했을까? (6) - All of Software</a></li>
<li><a href="http://doc.kldp.org/Translations/html/UTF8-Unicode-KLDP/UTF8-Unicode-KLDP-6.html" target="_blank" rel="noopener">유니코드와 ISO 10646 사이의 차이점은 무엇인가?</a></li>
<li><a href="https://ko.wikipedia.org/wiki/%EB%A1%9C%EC%BC%80%EC%9D%BC" target="_blank" rel="noopener">wikipedia</a></li>
<li><a href="http://coffeenix.net/doc/misc/locale.html" target="_blank" rel="noopener">로케일(Locale)에 관하여…</a></li>
<li><a href="https://ko.wikipedia.org/wiki/%EB%A1%9C%EC%BC%80%EC%9D%BC" target="_blank" rel="noopener">wikipedia</a></li>
<li><a href="https://araikuma.tistory.com/599" target="_blank" rel="noopener">프로그램 개발 지식 공유</a></a></li>
<li><a href=""https://m.blog.naver.com/PostView.nhn?blogId=assortrockp&logNo=220764067554&proxyReferer=https%3A%2F%2Fwww.google.com%2F"">c++ 및 api 언어설정에 대하여 알아보자.</a></li>
<li><a href="https://m.blog.naver.com/PostView.nhn?blogId=tipsware&logNo=221235708158&proxyReferer=https%3A%2F%2Fwww.google.com%2F" target="_blank" rel="noopener">멀티 바이트 문자와 지역(국가)코드</a></li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
</search>
