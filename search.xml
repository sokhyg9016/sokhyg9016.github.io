<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Neural Networks</title>
    <url>/2020/05/02/2020-05-02-csci343-challenge-final/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Objective"><a href="#Objective" class="headerlink" title="Objective"></a>Objective</h2><ul>
<li>Learn the basics of Neural Networks</li>
<li>Have fun!</li>
</ul>
<h2 id="Assignment"><a href="#Assignment" class="headerlink" title="Assignment"></a>Assignment</h2><p>게임을 해봅시다. 저는 종종 기술과 기회가 결합된 보드게임을 즐겨합니다. 이 보드 게임들은 보통 주사위라고 하는 난수 발생기가 존재한다는 공통점이 있습니다.</p>
<p>당신은 보드 게임 회사인 HasBoard, Inc.에 고용되었습니디. 그들은 이제 로봇의 세계로 뛰어들고 있고 아무도 원하지 않을 때 사람들과 보드 게임을 할 수 있는 로봇을 만들고 있답니다! 하지만, 그들은 주사위 굴림을 보고 어떤 숫자가 나오는지 알 수 있는 로봇이 필요하다고 합니다.</p>
<p>당신은 회사로부터 주사위 굴림을 해석할 신경망을 작성하라는 일을 받았습니다. 구체적으로는 주사위의 흑백 영상을 분석하게 될 겁니다.</p>
<p>주사위 이미지는 10 x 10 그리드(grid)에서 1과 0을 사용하여 지정됩니다. 주사위는 이 중 5x5 면적을 차지할 것 입니다. 주사위는 10 x 10 그리드 내의 어디에도 있을 수 있지만, 항상 완전히 보여야 합니다.</p>
<p>이미지의 배경은 검은색(0s)이고 주사위 표면은 흰색(1s)에 검은 점(0s)입니다. (below)</p>
<p>당신의 신경망은 주사위의 이미지를 나타내는 100개의 1과 0의 목록을 받아들여야 합니다. 당신의 신경망을 위한 샘플 이미자와 그것을 인코딩하는 방법은 아래와 같습니다.</p>
<p><a href="../../../../img/csci343-final/sample.JPG" title="example" class="gallery-item"><img src="../../../../img/csci343-final/sample.JPG" alt="example"></a></p>
<h3 id="About-DATA"><a href="#About-DATA" class="headerlink" title="About DATA"></a>About DATA</h3><ul>
<li>당신은 10 x 10 그리드 내의 많은 위치에서 주사위의 이미지로 당신의 신경망을 훈련시켜야 합니다.</li>
<li>신경망에 대한 입력은 100개의 실수 값 리스트가 됩니다. (when casting values for this assignment be sure to use <code>float()</code> instead of <code>np.float32()</code>)</li>
<li>네트워크가 표면 값을 10으로 나눈 값(1 = 0.1, 2 = 0.2, 3 = 0.3 등)을 반환하도록 출력(및 대상)을 인코딩해야 합니다.</li>
<li>신경망은 0.1에서 0.6 사이의 예측 값을 반환해야 합니다.</li>
<li>값은 소수점 첫째 자리보다 작을 수 있으며 반올림되어야 합니다. (예: 0.475는 0.5로 반올림).</li>
</ul>
<h3 id="Score-Evaluation"><a href="#Score-Evaluation" class="headerlink" title="Score Evaluation"></a>Score Evaluation</h3><ul>
<li>저장된 신경 네트워크 파일을 <a href="https://john.cs.olemiss.edu/~jones/343NeuralNetwork.html" target="_blank" rel="noopener">테스트 웹 사이트</a>에 업로드하여 제출된 데이터에 대하여 테스트되고 점수가 매겨집니다.</li>
<li>당신의 해답은 무작위로 생성된 주사위 1,000개에 대해 시험될 것입니다.</li>
<li>테스트 케이스의 절반은 “정상” 난이도가 될 것 입니다. 나머지 절반은 까다로운 난이도일 것이며 회전되는 주사위를 포함할 수 있습니다. ( 보통 난이도의 케이스는 항상 위아래로 향하게 될 것입니다.)</li>
<li>신경망을 얼마나 잘 훈련하느냐에 따라 기능 포인트가 부여됩니다.</li>
<li>당신의 성적은 “정상적인” 난이도 시험만을 기준으로 부여됩니다. (까다로운 테스트 케이스들은 당신의 놀라운 신경망 기술을 뽐내는 데에 사용될 입니다.)</li>
</ul>
<h3 id="Score-Evaluation-Detail"><a href="#Score-Evaluation-Detail" class="headerlink" title="Score Evaluation (Detail)"></a>Score Evaluation (Detail)</h3><ul>
<li>이 과제에 대한 점수를 받으려면 네트워크가 20% 이상 정확해야 합니다.</li>
<li>이 임계값 (20%) 을 초과하면 40XP가 주어집니다. 10% 마다 20XP를 추가로 받게 됩니다. 예를 들어, 81.2%의 정확도 점수는 162.4가 됩니다.</li>
<li>솔루션을 제출할 때 클래스 리더보드(상위 10개 솔루션 표시)에 참여하도록 선택할 수 있습니다.</li>
<li>리더보드 참여는 엄격히 자발적입니다. 1, 2, 3위 리더보드 솔루션에는 각각 20XP, 10XP, 5XP의 보너스가 지급될 것입니다.</li>
</ul>
<h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul>
<li>데이터 배포 사이트에서 사용 가능한 <code>neuro.py</code> 패키지를 사용해야 합니다.</li>
<li><code>neuro.writeNetworkToFile (filename)</code>함수를 사용하여 훈련 된 신경망을 파일로 저장해야합니다.</li>
<li>이 과제의 주요 목적은 좋은 테스트 데이터를 생성하여 신경망을 훈련시키는 방법을 배우는 것입니다.</li>
<li><ins>이 과제에 대한 크레딧을 받으려면 신경망 파일을 TESTING WEBSITE에 업로드하고 코드와 트레이닝 데이터를 모두 BLACKBOARD에 업로드해야합니다.</ins></li>
<li>또한 위에 링크 된 테스트 웹 사이트를 사용하여 신경망을 테스트해야합니다.</li>
<li>웹 사이트를 통해 네트워크를 테스트하지 않으면 이 과제에서 0점을 받습니다.</li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 343</category>
      </categories>
      <tags>
        <tag>CSCI 343</tag>
      </tags>
  </entry>
  <entry>
    <title>Trees</title>
    <url>/2020/04/28/2020-04-28-csci356-lec6/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Topics"><a href="#Topics" class="headerlink" title="Topics"></a>Topics</h2><ul>
<li><a href="./#Examples-of-Trees">Examples of Trees</a></li>
<li><a href="./#Vocabulary-and-Definitions">Vocabulary and Definitions</a></li>
<li>Implementation</li>
<li>Binary Tree Applications</li>
<li>Priority Queue with Binary Heaps</li>
<li>Binary Search Trees</li>
</ul>
<h2 id="Examples-of-Trees"><a href="#Examples-of-Trees" class="headerlink" title="Examples of Trees"></a>Examples of Trees</h2><p>The difference between a tree in computer science and a tree in nature is that a tree data structure has its root at the top and its leaves on the bottom.</p>
<h3 id="Properties-of-trees"><a href="#Properties-of-trees" class="headerlink" title="Properties of trees"></a>Properties of trees</h3><ul>
<li>Trees are <strong>hierarchical</strong>, they are structured in layers with the more general things near the top and the more specific things near the bottom.</li>
<li>The children of one node are independent of the children of another node.</li>
<li>Each leaf node is unique.</li>
</ul>
<h3 id="Examples-of-Trees-Cont’d"><a href="#Examples-of-Trees-Cont’d" class="headerlink" title="Examples of Trees (Cont’d)"></a>Examples of Trees (Cont’d)</h3><p>Taxonomy of some common animals shown as a tree:</p>
<a href="https://runestone.academy/runestone/books/published/cppds/_images/biology.png" title="axonomy of Some Common Animals Shown as a Tree" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/cppds/_images/biology.png" class="" width="500" alt="axonomy of Some Common Animals Shown as a Tree"></a>

<p>A small part of the Unix file system hierarchy:</p>
<a href="https://runestone.academy/runestone/books/published/cppds/_images/directory.png" title="Small Part of the Unix File System Hierarchy" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/cppds/_images/directory.png" class="" alt="Small Part of the Unix File System Hierarchy"></a>

<h2 id="Vocabulary-and-Definitions"><a href="#Vocabulary-and-Definitions" class="headerlink" title="Vocabulary and Definitions"></a>Vocabulary and Definitions</h2><table>
<thead>
<tr>
<th align="left">Vocabulary</th>
<th align="left">Definitions</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Node</td>
<td align="left">fundamental part of a tree, it can have a name, which we call the <strong>“key”</strong>.</td>
</tr>
<tr>
<td align="left">Edge</td>
<td align="left">connects two nodes to show that there is a relationship between them.</td>
</tr>
<tr>
<td align="left">Root</td>
<td align="left">the only node in the tree that has no incoming edges.</td>
</tr>
<tr>
<td align="left">Path</td>
<td align="left">an ordered list of nodes that are connected by edges.</td>
</tr>
<tr>
<td align="left">Children</td>
<td align="left">the set of nodes that have incoming edges from the same node.</td>
</tr>
<tr>
<td align="left">Parent</td>
<td align="left">a node is the parent of all the nodes it connects to with outgoing edges.</td>
</tr>
<tr>
<td align="left">Sibling</td>
<td align="left">nodes in the tree that are children of the same parent.</td>
</tr>
<tr>
<td align="left">Subtree</td>
<td align="left">a set of nodes and edges comprised of a parent and all the descendants of that parent.</td>
</tr>
<tr>
<td align="left">Leaf node</td>
<td align="left">a node that has no children.</td>
</tr>
<tr>
<td align="left">Level</td>
<td align="left">the level of a node n is the number of edges on the path from the root node to n. The level of the root node is 0.</td>
</tr>
<tr>
<td align="left">Height</td>
<td align="left">the maximum level of any node in the tree.</td>
</tr>
</tbody></table>
<h2 id="Definition-of-a-Tree"><a href="#Definition-of-a-Tree" class="headerlink" title="Definition of a Tree"></a>Definition of a Tree</h2><blockquote><p>A tree consists of a set of nodes and a set of edges that connect pairs of nodes.</p>
</blockquote>

<ul>
<li>One node of the tree is designated as the root node.</li>
<li>Every node $n$, except the root node, is connected by an edge from exactly one other node $p$, where $p$ is the parent of $n$.</li>
<li>A unique path traverses from the root to each node.</li>
<li>If each node in the tree has a maximum of <strong>two</strong> children, we say that the tree is a <strong>binary tree</strong>.</li>
</ul>
<h3 id="Definition-of-a-Tree-Cont’d"><a href="#Definition-of-a-Tree-Cont’d" class="headerlink" title="Definition of a Tree (Cont’d)"></a>Definition of a Tree (Cont’d)</h3><p>A tree consisting of a set of nodes and edges:</p>
<a href="https://runestone.academy/runestone/books/published/cppds/_images/treedef1.png" title="A Tree Consisting of a Set of Nodes and Edges" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/cppds/_images/treedef1.png" class="" alt="A Tree Consisting of a Set of Nodes and Edges"></a>

<p>&nbsp;</p>
<blockquote><p>A tree is either empty or consists of a root and zero or more subtrees, each of which is also a tree. This is a <strong>recursive</strong> definition of a tree.</p>
</blockquote>

<a href="https://runestone.academy/runestone/books/published/cppds/_images/TreeDefRecursive.png" title="A recursive Definition of a tree" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/cppds/_images/TreeDefRecursive.png" class="" alt="A recursive Definition of a tree"></a>

<h2 id="Implementation-of-a-Binary-Tree"><a href="#Implementation-of-a-Binary-Tree" class="headerlink" title="Implementation of a Binary Tree"></a>Implementation of a Binary Tree</h2><table>
<thead>
<tr>
<th align="left">Functions</th>
<th align="left">Definitions</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>BinaryTree()</code></td>
<td align="left">creates a new instance of a binary tree.</td>
</tr>
<tr>
<td align="left"><code>getLeftChild()</code></td>
<td align="left">returns the binary tree corresponding to the left child of the current node.</td>
</tr>
<tr>
<td align="left"><code>getRightChild()</code></td>
<td align="left">returns the binary tree corresponding to the right child of the current node.</td>
</tr>
<tr>
<td align="left"><code>setRootVal(val)</code></td>
<td align="left">stores the object in parameter <strong>val</strong> in the current node.</td>
</tr>
<tr>
<td align="left"><code>getRootVal()</code></td>
<td align="left">returns the object stored in the current node.</td>
</tr>
<tr>
<td align="left"><code>insertLeft(val)</code></td>
<td align="left">creates a new binary tree and installs it as the left child of the current node.</td>
</tr>
<tr>
<td align="left"><code>insertRight(val)</code></td>
<td align="left">creates a new binary tree and installs it as the right child of the current node.</td>
</tr>
</tbody></table>
<h3 id="Implementation-Cont’d-1-2"><a href="#Implementation-Cont’d-1-2" class="headerlink" title="Implementation (Cont’d) [1/2]"></a>Implementation (Cont’d) [1/2]</h3><p><strong>List of lists</strong> representation of a tree:</p>
<ul>
<li>Store the value of the root node as the 1<sup>st</sup> element of the list;</li>
<li>The 2<sup>nd</sup> element of the list will itself be a list that represents the left subtree;</li>
<li>And the 3<sup>rd</sup> element of the list will be another list that represents the right subtree.</li>
</ul>
<p>Representing a tree as a list of lists:</p>
<a href="https://runestone.academy/runestone/books/published/cppds/_images/treerecs.png" title="A Simple Tree Using a Nodes and References Approach" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/cppds/_images/treerecs.png" class="" alt="A Simple Tree Using a Nodes and References Approach"></a>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">myTree = [</span><br><span class="line">    [<span class="string">'a'</span>,  <span class="comment"># root</span></span><br><span class="line"></span><br><span class="line">     [<span class="string">'b'</span>,  <span class="comment"># left subtree</span></span><br><span class="line">      [<span class="string">'d'</span>, [], []],</span><br><span class="line">      [<span class="string">'e'</span>, [], []]</span><br><span class="line">     ],</span><br><span class="line">     </span><br><span class="line">     [<span class="string">'c'</span>,  <span class="comment"># right subtree</span></span><br><span class="line">      [<span class="string">'f'</span>, [], []],</span><br><span class="line">      []</span><br><span class="line">     ]</span><br><span class="line"></span><br><span class="line">    ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt; myTree = [[<span class="string">'a'</span>, [<span class="string">'b'</span>, [<span class="string">'d'</span>, [], []],[<span class="string">'e'</span>, [], []]],\</span><br><span class="line">             [<span class="string">'c'</span>, [<span class="string">'f'</span>, [], []],[]] ]]</span><br><span class="line"></span><br><span class="line">&gt;&gt; myTree[<span class="number">0</span>] <span class="comment"># Print the loop</span></span><br><span class="line"><span class="string">'a'</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; myTree[<span class="number">1</span>] <span class="comment"># Print the left subtree</span></span><br><span class="line">[<span class="string">'b'</span>, [<span class="string">'d'</span>, [], []],[<span class="string">'e'</span>, [], []]]</span><br><span class="line"></span><br><span class="line">&gt;&gt; myTree[<span class="number">2</span>] <span class="comment"># Print the right subtree</span></span><br><span class="line">[<span class="string">'c'</span>, [<span class="string">'f'</span>, [], []],[] ]]</span><br></pre></td></tr></table></figure>

<hr>
<ul>
<li>To create Binary Tree, return the root and empty left and right sub tree.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''Create a binary tree'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BinaryTree</span><span class="params">(r)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> [r, [], []]</span><br></pre></td></tr></table></figure>

<ul>
<li>To <strong>add a left subtree</strong> to the root of a tree, we need to insert a new list onto the 2<sup>nd</sup> position of the root list:</li>
<li>If the list already has something in the 2<sup>nd</sup> position, we need to push it down the tree as the left child of the list we are adding.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insertLeft</span><span class="params">(root, newBrench)</span>:</span></span><br><span class="line">    t = root.pop(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(t) &gt; <span class="number">1</span>:</span><br><span class="line">        root.insert(<span class="number">1</span>, [newBrench, t, []])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        root.insert(<span class="number">1</span>, [newBrench, [], []])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> root</span><br></pre></td></tr></table></figure>

<hr>
<ul>
<li>To <strong>add a right subtree</strong> to the root of a tree, we need to insert a new list onto the 3rd position of the root list:</li>
<li>If the list already has something in the 3<sup>rd</sup> position, we need to push it down the tree as the right child of the list we are adding.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insertLeft</span><span class="params">(root, newBrench)</span>:</span></span><br><span class="line">    t = root.pop(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(t) &gt; <span class="number">1</span>:</span><br><span class="line">        root.insert(<span class="number">2</span>, [newBrench, [], t])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        root.insert(<span class="number">2</span>, [newBrench, [], []])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> root</span><br></pre></td></tr></table></figure>

<hr>
<ul>
<li>Access functions for parts of the tree:</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getRootVal</span><span class="params">(root)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> root[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setRootVal</span><span class="params">(root, newVal)</span>:</span></span><br><span class="line">    root[<span class="number">0</span>] = newVal</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getLeftVal</span><span class="params">(root)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> root[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getRightVal</span><span class="params">(root)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> root[<span class="number">2</span>]</span><br></pre></td></tr></table></figure>

<h3 id="Implementation-Cont’d-2-2"><a href="#Implementation-Cont’d-2-2" class="headerlink" title="Implementation (Cont’d) [2/2]"></a>Implementation (Cont’d) [2/2]</h3><p><strong>Nodes and references</strong> representation of a tree:</p>
<ul>
<li>Define a class that has attributes for the root value, as well as the left and right subtrees.</li>
<li>A simple tree using nodes and references representation:</li>
</ul>
<hr>
<ul>
<li>A simple class definition:<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BinaryTree</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, rootObj)</span>:</span></span><br><span class="line">        self.key = rootObj</span><br><span class="line">        self.left = <span class="literal">None</span></span><br><span class="line">        self.right = <span class="literal">None</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<hr>
<ul>
<li>To <strong>insert a left child</strong> and <strong>a right child</strong>, we push the existing child down one level in the tree:</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insertLeft</span><span class="params">(self, newNode)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> self.left == <span class="literal">None</span>:</span><br><span class="line">        self.left = BinaryTree(newNode)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        t = BinaryTree(newNode)</span><br><span class="line">        t.left = self.left</span><br><span class="line">        self.left = t</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insertRight</span><span class="params">(self, newNode)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> self.right == <span class="literal">None</span>:</span><br><span class="line">        self.right = BinaryTree(newNode)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        t = BinaryTree(newNode)</span><br><span class="line">        t.right = self.right</span><br><span class="line">        self.right = t</span><br></pre></td></tr></table></figure>

<hr>
<ul>
<li>Access methods for the BinaryTree class:</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getRootVal</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> self.key</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setRootVal</span><span class="params">(self, obj)</span>:</span></span><br><span class="line">    self.key = obj</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getLeftChild</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> self.left</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getRightChild</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> self.right</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="Binary-Tree-in-Python"><a href="#Binary-Tree-in-Python" class="headerlink" title="Binary Tree in Python"></a>Binary Tree in Python</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BinaryTree</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,rootObj)</span>:</span> <span class="comment"># initializer function expects to get some kind of object to store in the root</span></span><br><span class="line">        self.key = rootObj</span><br><span class="line">        self.leftChild = <span class="literal">None</span>  <span class="comment"># reference other instances of the binary tree the BinaryTree class</span></span><br><span class="line">        self.rightChild = <span class="literal">None</span> <span class="comment"># reference other instances of the binary tree the BinaryTree class</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insertLeft</span><span class="params">(self,newNode)</span>:</span> <span class="comment"># Handles insertion if there is no left child simply adds a node to the tree.</span></span><br><span class="line">        <span class="keyword">if</span> self.leftChild == <span class="literal">None</span>:</span><br><span class="line">            self.leftChild = BinaryTree(newNode)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            t = BinaryTree(newNode) <span class="comment"># handles insertion if there is a left child pushes the existing child down one level in the tree.</span></span><br><span class="line">            t.leftChild = self.leftChild</span><br><span class="line">            self.leftChild = t</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insertRight</span><span class="params">(self,newNode)</span>:</span> <span class="comment"># Handles insertion if there is no right child simply adds a node to the tree</span></span><br><span class="line">        <span class="keyword">if</span> self.rightChild == <span class="literal">None</span>:</span><br><span class="line">            self.rightChild = BinaryTree(newNode)</span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># handles insertion if there is a right child pushes the existing child down one level in the tree.</span></span><br><span class="line">            t = BinaryTree(newNode)</span><br><span class="line">            t.rightChild = self.rightChild</span><br><span class="line">            self.rightChild = t</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getRightChild</span><span class="params">(self)</span>:</span> <span class="comment"># accessor method</span></span><br><span class="line">        <span class="keyword">return</span> self.rightChild</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getLeftChild</span><span class="params">(self)</span>:</span> <span class="comment"># accessor method</span></span><br><span class="line">        <span class="keyword">return</span> self.leftChild</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setRootVal</span><span class="params">(self,obj)</span>:</span> <span class="comment"># accessor method</span></span><br><span class="line">        self.key = obj</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getRootVal</span><span class="params">(self)</span>:</span> <span class="comment"># accessor method</span></span><br><span class="line">        <span class="keyword">return</span> self.key</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    r = BinaryTree(<span class="string">'a'</span>)</span><br><span class="line">    print(r.getRootVal())</span><br><span class="line">    print(r.getLeftChild())</span><br><span class="line">    r.insertLeft(<span class="string">'b'</span>)</span><br><span class="line">    print(r.getLeftChild())</span><br><span class="line">    print(r.getLeftChild().getRootVal())</span><br><span class="line">    r.insertRight(<span class="string">'c'</span>)</span><br><span class="line">    print(r.getRightChild())</span><br><span class="line">    print(r.getRightChild().getRootVal())</span><br><span class="line">    r.getRightChild().setRootVal(<span class="string">'d'</span>)</span><br><span class="line">    print(r.getRightChild().getRootVal())</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>

<h2 id="Binary-Tree-Applications"><a href="#Binary-Tree-Applications" class="headerlink" title="Binary Tree Applications"></a>Binary Tree Applications</h2><ul>
<li><strong>Parse trees</strong> can be used to represent real-world constructions like sentences or mathematical expressions.</li>
<li>A parse tree for a simple sentence:</li>
</ul>
<a href="https://runestone.academy/runestone/books/published/cppds/_images/nlParse.png" title="A Parse Tree for a Simple Sentence" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/cppds/_images/nlParse.png" class="" alt="A Parse Tree for a Simple Sentence"></a>

<h3 id="Applications-Cont’d-1-2"><a href="#Applications-Cont’d-1-2" class="headerlink" title="Applications (Cont’d) [1/2]"></a>Applications (Cont’d) [1/2]</h3><ul>
<li>How to build a parse tree from a fully parenthesized mathematical expression and how to evaluate the expression?</li>
<li>Parse tree for $((7 + 3) * (5 – 2))$:</li>
</ul>
<a href="https://runestone.academy/runestone/books/published/cppds/_images/meParse.png" title="Parse Tree for ((7+3)∗(5−2))" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/cppds/_images/meParse.png" class="" alt="Parse Tree for ((7+3)∗(5−2))"></a>

<ul>
<li>Applying this replacement procedure gives us the simplified tree shown as below</li>
</ul>
<a href="https://runestone.academy/runestone/books/published/cppds/_images/meSimple.png" title="A Simplified Parse Tree for ((7+3)∗(5−2))" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/cppds/_images/meSimple.png" class="" alt="A Simplified Parse Tree for ((7+3)∗(5−2))"></a>

<h3 id="Applications-Cont’d-2-2"><a href="#Applications-Cont’d-2-2" class="headerlink" title="Applications (Cont’d) [2/2]"></a>Applications (Cont’d) [2/2]</h3><ul>
<li>There are four different kinds of tokens to consider:<ul>
<li>left parentheses</li>
<li>right parentheses</li>
<li>operators</li>
<li>operands</li>
</ul>
</li>
<li>Operands will be the leaf nodes and children of their operators.</li>
<li>Every operator will have two children.</li>
</ul>
<hr>
<p>We define four rules as follows:</p>
<ol>
<li>If the current token is a <code>&#39;(&#39;</code>, add a new node as the left child of the current node, and descend to the left child.</li>
<li>If the current token is in the vector <code>[&#39;+&#39;,&#39;-&#39;,&#39;/&#39;,&#39;*&#39;]</code>, set the root value of the current node to the operator represented by the current token. Add a new node as the right child of the current node and descend to the right child.</li>
<li>If the current token is a number, set the root value of the current node to the number and return to the parent.</li>
<li>If the current token is a <code>&#39;)&#39;</code>, go to the parent of the current node.</li>
</ol>
<hr>
<p>Use the expression <code>(3 + (4 * 5))</code> as an example,<br>below is a trace for parse tree construction:</p>
<div class="note no-icon">
            <p>Follow the link <a href="https://runestone.academy/runestone/books/published/cppds/Trees/ParseTree.html" target="_blank" rel="noopener">here</a></p>
          </div>

<ol>
<li>Create an empty tree.</li>
<li>Read <code>&#39;(&#39;</code> as the first token. By rule 1, create a new node as the left child of the root. Make the current node this new child.</li>
<li>Read <code>&#39;3&#39;</code> as the next token. By rule 3, set the root value of the current node to 3 and go back up the tree to the parent.</li>
<li>Read <code>&#39;+&#39;</code> as the next token. By rule 2, set the root value of the current node to + and add a new node as the right child. The new right child becomes the current node.</li>
<li>Read <code>&#39;(&#39;</code> as the next token. By rule 1, create a new node as the left child of the current node. The new left child becomes the current node.</li>
<li>Read <code>&#39;4&#39;</code> as the next token. By rule 3, set the value of the current node to 4. Make the parent of 4 the current node.</li>
<li>Read <code>&#39;*&#39;</code> as the next token. By rule 2, set the root value of the current node to * and create a new right child. The new right child becomes the current node.</li>
<li>Read <code>&#39;5&#39;</code> as the next token. By rule 3, set the root value of the current node to 5. Make the parent of 5 the current node.</li>
<li>Read <code>&#39;)&#39;</code> as the next token. By rule 4 we make the parent of <code>&#39;*&#39;</code> the current node.</li>
<li>Read <code>&#39;)&#39;</code> as the next token. By rule 4 we make the parent of + the current node. At this point there is no parent for + so we are done.</li>
</ol>
<h2 id="Tree-Traversals"><a href="#Tree-Traversals" class="headerlink" title="Tree Traversals"></a>Tree Traversals</h2><ul>
<li><strong>Tree Traversals:</strong> visiting all the nodes of a tree</li>
<li>There are three commonly used patterns for a tree traversal.</li>
<li>The difference between these patterns is the <strong>order</strong> in which each node is visited.</li>
<li>Three traversals:<ul>
<li>Preorder</li>
<li>Inorder</li>
<li>Postorder</li>
</ul>
</li>
</ul>
<h3 id="Preorder-ROOT-L-R"><a href="#Preorder-ROOT-L-R" class="headerlink" title="Preorder (ROOT-L-R)"></a>Preorder (ROOT-L-R)</h3><ul>
<li>In this traversal, we visit the <strong>root</strong> node first, then recursively do a preorder traversal of the <strong>left</strong> subtree, followed by a recursive preorder traversal of the right subtree.</li>
<li>Below is the code to implement preorder traversal:</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">preorder</span><span class="params">(tree)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> tree:</span><br><span class="line">        print(tree.getRootVal())</span><br><span class="line">        preorder(tree.getLeftChild())</span><br><span class="line">        preorder(tree.getRightChild())</span><br></pre></td></tr></table></figure>

<h3 id="Inorder-L-ROOT-R"><a href="#Inorder-L-ROOT-R" class="headerlink" title="Inorder (L-ROOT-R)"></a>Inorder (L-ROOT-R)</h3><ul>
<li>In this traversal, we recursively do an inorder traversal on the <strong>left subtree</strong>, visit the <strong>root</strong> node, and finally do a recursive inorder traversal of the <strong>right subtree</strong>.</li>
</ul>
<h3 id="Postorder-L-R-ROOT"><a href="#Postorder-L-R-ROOT" class="headerlink" title="Postorder (L-R-ROOT)"></a>Postorder (L-R-ROOT)</h3><ul>
<li>In this traversal, we recursively do a postorder traversal on the <strong>left subtree</strong> and the <strong>right subtree</strong> followed by a visit to the <strong>root</strong> node.</li>
</ul>
<hr>
<p>Below is the code to implement inorder and postorder traversals:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inorder</span><span class="params">(tree)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> tree:</span><br><span class="line">        inorder(tree.getLeftChild())</span><br><span class="line">        print(tree.getRootVal())</span><br><span class="line">        inorder(tree.getRightChild())</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">postorder</span><span class="params">(tree)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> tree:</span><br><span class="line">        postorder(tree.getLeftChild())</span><br><span class="line">        postorder(tree.getRightChild())</span><br><span class="line">        print(tree.getRootVal())</span><br></pre></td></tr></table></figure>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 356</category>
      </categories>
      <tags>
        <tag>CSCI 356</tag>
      </tags>
  </entry>
  <entry>
    <title>Searching and Sorting [2/2]</title>
    <url>/2020/04/28/2020-04-28-csci356-lec5-2/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Sorting"><a href="#Sorting" class="headerlink" title="Sorting"></a>Sorting</h2><ul>
<li><strong>Sorting</strong> is the process of placing elements from a collection in order.</li>
<li>We’ll discuss several sorting algorithms and compare them with respect to their running time.</li>
<li>The total number of <strong>comparisons</strong> will be considered to evaluate the overall efficiency of a sorting algorithm.</li>
</ul>
<h2 id="Selection-sort"><a href="#Selection-sort" class="headerlink" title="Selection sort"></a>Selection sort</h2><p>looks for the smallest item and places it first, then finds the smallest in the remaining and puts it next, and so on.</p>
<ul>
<li>After the 1<sup>st</sup> pass, the smallest item is in the correct place.</li>
<li>After the 2<sup>nd</sup> pass, the next smallest is in place.</li>
<li>On each pass the smallest remaining item is selected and then placed in its proper location.</li>
<li>This process requires (n – 1) passes to sort n items.</li>
</ul>
<h3 id="Selection-sort-Cont’d-1-2"><a href="#Selection-sort-Cont’d-1-2" class="headerlink" title="Selection sort (Cont’d) [1/2]"></a>Selection sort (Cont’d) [1/2]</h3><ul>
<li><p>The exchange operation (“swap”) is slightly different in Python.</p>
</li>
<li><p>Most programming languages requires a temp variable to store one of the values.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br></pre></td></tr></table></figure>
</li>
<li><p>In Python, multiple assignment is allowed.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a, b = b, a</span><br></pre></td></tr></table></figure>
</li>
<li><p>Here is the code for selection sort:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">selection_sort</span><span class="params">(alist)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(alist)):</span><br><span class="line">        min_value = alist[i]</span><br><span class="line">        min_index = i</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, len(alist)):</span><br><span class="line">            <span class="keyword">if</span> min_value &gt; alist[j]:</span><br><span class="line">                min_value = alist[j]</span><br><span class="line">                min_index = j</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> min_index != i:</span><br><span class="line">            alist[min_index], alist[i] = alist[i], alist[min_index]</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="Selection-sort-Cont’d-2-2"><a href="#Selection-sort-Cont’d-2-2" class="headerlink" title="Selection sort (Cont’d) [2/2]"></a>Selection sort (Cont’d) [2/2]</h3><ul>
<li>To analyze the selection sort:</li>
</ul>
<table>
<thead>
<tr>
<th align="left">Pass</th>
<th align="left">Comparisions</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left">n - 1</td>
</tr>
<tr>
<td align="left">2</td>
<td align="left">n - 2</td>
</tr>
<tr>
<td align="left">3</td>
<td align="left">n - 3</td>
</tr>
<tr>
<td align="left">…</td>
<td align="left">…</td>
</tr>
<tr>
<td align="left">n - 1</td>
<td align="left">1</td>
</tr>
</tbody></table>
<ul>
<li>The sum of $ 1 + 2 + 3 + … + (n-1) = \frac{n \cdot (n - 1)}{2}$</li>
<li>The complexity is $O(n^{2})$</li>
</ul>
<h2 id="Bubble-Sort"><a href="#Bubble-Sort" class="headerlink" title="Bubble Sort"></a>Bubble Sort</h2><ul>
<li>Compares adjacent items and exchanges each pair that are out of order.</li>
<li>Each pass through the list places the next largest value in its proper place.</li>
<li>In essence, each item “bubbles” up to the location where it belongs.</li>
</ul>
<h3 id="Bubble-Sort-Cont’d-1-2"><a href="#Bubble-Sort-Cont’d-1-2" class="headerlink" title="Bubble Sort (Cont’d) [1/2]"></a>Bubble Sort (Cont’d) [1/2]</h3><ul>
<li>At the start of the 2<sup>nd</sup> pass, the largest value is now in place.</li>
<li>There are n – 1 items left to sort.</li>
<li>The total number of passes necessary will be n – 1.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(alist)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(alist)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, len(alist) - i):</span><br><span class="line">            <span class="keyword">if</span> alist[j] &lt; alist[j<span class="number">-1</span>]:</span><br><span class="line">                alist[j<span class="number">-1</span>], alist[j] = alist[j], alist[j<span class="number">-1</span>]</span><br></pre></td></tr></table></figure>

<h3 id="Bubble-Sort-Cont’d-2-2"><a href="#Bubble-Sort-Cont’d-2-2" class="headerlink" title="Bubble Sort (Cont’d) [2/2]"></a>Bubble Sort (Cont’d) [2/2]</h3><p>Generally speaking, the bubble sort makes the same number of comparisons as the selection sort and is therefore also $O(n^{2})$</p>
<h2 id="Insertion-sort"><a href="#Insertion-sort" class="headerlink" title="Insertion sort"></a>Insertion sort</h2><ul>
<li>each new item is “inserted” into the sub-list to make the sorted sublist is one item larger.</li>
<li>We begin by assuming that a list with one item (position 0, list[0]) is already sorted.</li>
<li>On each pass, one for each item 1 through n – 1, the current item is checked against those in the already sorted list. Shift those items that are greater to the right; when we reach a smaller item or the end of the sublist, the current item can be inserted.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(alist)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(alist)):</span><br><span class="line">        current_value = alist[i]</span><br><span class="line">        pos = i</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> pos &gt; <span class="number">0</span> <span class="keyword">and</span> pos[i<span class="number">-1</span>] &gt; current_value:</span><br><span class="line">            alist[pos] = alist[pos<span class="number">-1</span>]</span><br><span class="line">            pos -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        alist[pos] = current_value</span><br></pre></td></tr></table></figure>

<h2 id="Insertion-sort-Cont’d"><a href="#Insertion-sort-Cont’d" class="headerlink" title="Insertion sort (Cont’d)"></a>Insertion sort (Cont’d)</h2><ul>
<li>The maximum number of comparisons for an insertion sort is the sum of the first n – 1 integers.</li>
<li>Again, this is $O(n^{2})$</li>
</ul>
<h2 id="Merge-sort"><a href="#Merge-sort" class="headerlink" title="Merge sort"></a>Merge sort</h2><ul>
<li>A recursive algorithm that continually splits a list in half.</li>
<li>If the list is empty or has one item, it is sorted (the base case).</li>
<li>If the list has more than one item, we split the list and recursively invoke a merge sort on both halves. Once the two halves are sorted, the fundamental operation, called a merge, is performed.</li>
<li>Merging is the process of combining two smaller sorted lists into a single sorted list.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge_sort</span><span class="params">(alist)</span>:</span></span><br><span class="line">	print(<span class="string">f"Splitting: <span class="subst">&#123;alist&#125;</span>"</span>)</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> len(alist) &gt; <span class="number">1</span>:</span><br><span class="line">		mid = len(alist) // <span class="number">2</span></span><br><span class="line">		left_half = alist[:mid]</span><br><span class="line">		right_half = alist[mid:]</span><br><span class="line">		</span><br><span class="line">		merge_sort(left_half)</span><br><span class="line">		merge_sort(right_half)</span><br><span class="line">		</span><br><span class="line">		i = <span class="number">0</span></span><br><span class="line">		j = <span class="number">0</span></span><br><span class="line">		k = <span class="number">0</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">while</span> i &lt; len(left_half) <span class="keyword">and</span> j &lt; len(right_half):</span><br><span class="line">			<span class="keyword">if</span> left_half[i] &lt; right_half[j]:</span><br><span class="line">				alist[k] = left_half[i]</span><br><span class="line">				i += <span class="number">1</span></span><br><span class="line">				k += <span class="number">1</span></span><br><span class="line">			<span class="keyword">else</span>:</span><br><span class="line">				alist[k] = right_half[j]</span><br><span class="line">				j += <span class="number">1</span></span><br><span class="line">				k += <span class="number">1</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">while</span> i &lt; len(left_half):</span><br><span class="line">			alist[k] = left_half[i]</span><br><span class="line">			i += <span class="number">1</span></span><br><span class="line">			k += <span class="number">1</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">while</span> j &lt; len(right_half):</span><br><span class="line">			alist[k] = right_half[j]</span><br><span class="line">			j += <span class="number">1</span></span><br><span class="line">			k += <span class="number">1</span></span><br><span class="line">		</span><br><span class="line">	print(<span class="string">f"Merging: <span class="subst">&#123;alist&#125;</span>"</span>)</span><br></pre></td></tr></table></figure>

<h3 id="Merge-sort-Cont’d"><a href="#Merge-sort-Cont’d" class="headerlink" title="Merge sort (Cont’d)"></a>Merge sort (Cont’d)</h3><ul>
<li>Merge sort has two distinct processes: splitting and merging.</li>
<li>Splitting a list into halves can be done: $O(\log n)$</li>
<li>Merging: each item in the list will be processed and placed in the sorted list, this is $O(n)$</li>
<li>Thus, merge sort is an $O(n\log n)$ algorithm.</li>
</ul>
<h2 id="Quick-sort"><a href="#Quick-sort" class="headerlink" title="Quick sort"></a>Quick sort</h2><ul>
<li>This sort first selects a value (called the <strong>pivot</strong> value, we will use the 1<sup>st</sup> item as the pivot value).</li>
<li>The role of the pivot value is to assist with <ins>splitting</ins> the list.</li>
<li>The actual position where the pivot value belongs in the final sorted list (called the split point) will be used to divide the list for subsequent calls to the quick sort.</li>
<li>The partition process finds the split point and move other items to the appropriate side of the list, either less than or greater than the pivot value.</li>
<li>Partitioning begins by locating two position markers (leftMark and rightMark) at the beginning and end of the remaining items in the list.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort</span><span class="params">(alist)</span>:</span></span><br><span class="line">    quick_sort_helper(alist, <span class="number">0</span>, len(alist)<span class="number">-1</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort_helper</span><span class="params">(alist, first, last)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> first &lt; last:</span><br><span class="line">    split_point = partition(alist, first, last)</span><br><span class="line">    quick_sort_helper(alist, first, split_point<span class="number">-1</span>)</span><br><span class="line">    quick_sort_helper(alist, split_point + <span class="number">1</span>, last)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">partition</span><span class="params">(alist, first, last)</span>:</span></span><br><span class="line">    pivot_value = alist[first]</span><br><span class="line"></span><br><span class="line">    left_mark = first + <span class="number">1</span></span><br><span class="line">    right_mark = last</span><br><span class="line">    done = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> done:</span><br><span class="line">        <span class="keyword">while</span> left_mark &lt;= right_mark <span class="keyword">and</span> alist[left_mark] &lt;= pivot_value:</span><br><span class="line">            left_mark += <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> left_mark &lt;= right_mark <span class="keyword">and</span> alist[right_mark] &gt;= pivot_value:</span><br><span class="line">            right_mark -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> right_mark &lt; left_mark:</span><br><span class="line">            done = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            alist[left_mark], alist[right_mark] = alist[right_mark], alist[left_mark]</span><br><span class="line"></span><br><span class="line">    alist[first], alist[right_mark] = alist[right_mark], alist[first]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> right_mark</span><br></pre></td></tr></table></figure>

<h3 id="Quick-sort-Cont’d"><a href="#Quick-sort-Cont’d" class="headerlink" title="Quick sort (Cont’d)"></a>Quick sort (Cont’d)</h3><ul>
<li>For quick sort, if the partition occurs in the middle of the list, there will be $\log n$ divisions.</li>
<li>In order to find the split point, each of the $n$ items need to be checked against the pivot value.</li>
<li>Thus, quick sort is an $O(n\log n)$ algorithm.</li>
</ul>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ul>
<li>A sequential search is $O(n)$.</li>
<li>A binary search of an ordered list is $O(\log n)$.</li>
<li>Hash tables can provide constant time searching $O(1)$.</li>
<li>A selection sort, a bubble sort, and an insertion sort are $O(n^{2})$ algorithms.</li>
<li>A merge sort and a quick sort are $O(n\log n)$ algorithms.</li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 356</category>
      </categories>
      <tags>
        <tag>CSCI 356</tag>
      </tags>
  </entry>
  <entry>
    <title>Searching and Sorting [1/2]</title>
    <url>/2020/04/28/2020-04-28-csci356-lec5-1/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Topics"><a href="#Topics" class="headerlink" title="Topics"></a>Topics</h2><ul>
<li>Searching Algorithms</li>
<li>Sorting Algorithms</li>
</ul>
<h2 id="Searching"><a href="#Searching" class="headerlink" title="Searching"></a>Searching</h2><ul>
<li><strong>Searching</strong> is the process of finding a particular item in a collection of items.</li>
<li>A search typically finds out whether the item is present (<ins>membership</ins>).</li>
<li>In Python, we can use the <code>in</code> operator to check whether an item is in a list of items.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">3</span> <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>

<h2 id="Sequential-Search"><a href="#Sequential-Search" class="headerlink" title="Sequential Search"></a>Sequential Search</h2><ul>
<li>When items are stored in an ordered collection such as a list, we say that they have a linear or sequential relationship.</li>
<li><strong>Sequential search:</strong> start at the 1<sup>st</sup> item, move from item to item, following the sequential order until we either find the item we are looking for (present) or run out of items (not present).</li>
</ul>
<a href="https://media.geeksforgeeks.org/wp-content/cdn-uploads/Linear-Search.png" title="Sequential Search" class="gallery-item"><img src="https://media.geeksforgeeks.org/wp-content/cdn-uploads/Linear-Search.png" class="" width="500" title="Sequential Search" alt="Sequential Search"></a>

<h3 id="Sequential-Search-Cont’d"><a href="#Sequential-Search-Cont’d" class="headerlink" title="Sequential Search (Cont’d)"></a>Sequential Search (Cont’d)</h3><p>The search needs the list and the item we are looking for and returns a Boolean value as to whether the item is present in the list.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sequential_search</span><span class="params">(aList, item)</span>:</span></span><br><span class="line">    found = <span class="literal">False</span></span><br><span class="line">    pos = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> pos &lt; len(aList) <span class="keyword">and</span> <span class="keyword">not</span> found:</span><br><span class="line">        <span class="keyword">if</span> aList[pos] == item:</span><br><span class="line">            found = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            pos += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> found</span><br></pre></td></tr></table></figure>

<h2 id="Binary-Search"><a href="#Binary-Search" class="headerlink" title="Binary Search"></a>Binary Search</h2><ul>
<li>If the list of items is <strong>ordered</strong>, is there a better way to do the search?</li>
<li>Instead of searching the list in sequence, a binary search will start by examine the <strong>middle</strong> item.</li>
<li>If the middle item is <strong>equal to</strong> the item we are searching for, we are done.</li>
<li>If the item is <strong>less than</strong> the middle element, we only need to search the item in the first half of the list.</li>
<li>If the item is <strong>greater than</strong> the middle element, we only need to search the item in the second half of the list.</li>
</ul>
<h3 id="Binary-Search-Cont’d"><a href="#Binary-Search-Cont’d" class="headerlink" title="Binary Search (Cont’d)"></a>Binary Search (Cont’d)</h3><p>Assume an ordered list of integers as below, we can quickly find 54 in the list using binary search:</p>
<a href="https://www.geeksforgeeks.org/wp-content/uploads/Binary-Search.png" title="Binary Search" class="gallery-item"><img src="https://www.geeksforgeeks.org/wp-content/uploads/Binary-Search.png" class="" width="500" title="Binary Search" alt="Binary Search"></a>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_search</span><span class="params">(alist, item)</span>:</span></span><br><span class="line">  first = <span class="number">0</span></span><br><span class="line">  last = len(alist) - <span class="number">1</span></span><br><span class="line">  idx = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> first &lt;= last <span class="keyword">and</span> alist[idx] != item:</span><br><span class="line">    mid = (last + first) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> alist[mid] &lt;center item:</span><br><span class="line">      first = mid + <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> alist[mid] == item:</span><br><span class="line">      idx = mid</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      last = mid - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> idx</span><br></pre></td></tr></table></figure>

<h2 id="Analysis-of-Searching-Algorithms"><a href="#Analysis-of-Searching-Algorithms" class="headerlink" title="Analysis of Searching Algorithms"></a>Analysis of Searching Algorithms</h2><p>Big-O efficiency of the searching algorithms:</p>
<table>
<thead>
<tr>
<th>Searching Algorithms</th>
<th>Big-O Efficiency</th>
</tr>
</thead>
<tbody><tr>
<td>Sequential Search</td>
<td>$O(n)$</td>
</tr>
<tr>
<td>Binary Search</td>
<td>$O(\log n)$</td>
</tr>
</tbody></table>
<h2 id="Hashing"><a href="#Hashing" class="headerlink" title="Hashing"></a>Hashing</h2><ul>
<li>A <strong>hash table</strong> is used to store a collection of items so that they can be easily found later.</li>
<li>Each position of the hash table, called a <strong>slot</strong>, can hold an item and is named by an integer value starting at <code>0</code>.</li>
<li>Initially, the hash table contains no items so every slot is empty (<strong>None</strong>).</li>
</ul>
<h3 id="Hashing-Cont’d-1-3"><a href="#Hashing-Cont’d-1-3" class="headerlink" title="Hashing (Cont’d) [1/3]"></a>Hashing (Cont’d) [1/3]</h3><p>Below is a hash table with 11 empty slots:</p>
<a href="https://runestone.academy/runestone/books/published/pythonds/_images/hashtable.png" title="Hash Table" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/pythonds/_images/hashtable.png" class="" title="Hash Table" alt="Hash Table"></a>

<ul>
<li><p>The mapping between an item and the slot where that item belongs in the hash table is done by the <strong>hash function</strong>.</p>
</li>
<li><p>The hash function will take any item in the collection and return an integer in the range of slot names, between <strong>0</strong> and <strong>m-1</strong> (there are <strong>m</strong> slots in the table).</p>
</li>
<li><p>Our first hash function is referred to as the <strong>“remainder method”</strong>.</p>
</li>
<li><p>The method takes an item and divides it by the table size, returning the remainder as its hash value: </p>
</li>
</ul>
<p>$$ h(item) = item \bmod 11 $$</p>
<table>
<thead>
<tr>
<th align="left">Item</th>
<th align="left">Hash Value</th>
</tr>
</thead>
<tbody><tr>
<td align="left">54</td>
<td align="left">10</td>
</tr>
<tr>
<td align="left">26</td>
<td align="left">4</td>
</tr>
<tr>
<td align="left">93</td>
<td align="left">5</td>
</tr>
<tr>
<td align="left">17</td>
<td align="left">6</td>
</tr>
<tr>
<td align="left">77</td>
<td align="left">0</td>
</tr>
<tr>
<td align="left">31</td>
<td align="left">9</td>
</tr>
</tbody></table>
<ul>
<li>Hash table with six items:</li>
</ul>
<a href="https://runestone.academy/runestone/books/published/pythonds/_images/hashtable2.png" title="Hash Table" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/pythonds/_images/hashtable2.png" class="" title="Hash Table" alt="Hash Table"></a>

<ul>
<li><strong>Load factor</strong> is an indicator of how many keys are mapped to an average bucket on a hashtable.</li>
<li>In this example, the load factor is $\frac{6}{11}$.</li>
</ul>
<center>load factor = #OfItems / tableSize</center>

<h3 id="Hashing-Cont’d-2-3"><a href="#Hashing-Cont’d-2-3" class="headerlink" title="Hashing (Cont’d) [2/3]"></a>Hashing (Cont’d) [2/3]</h3><ul>
<li>Now when we want to search for an item, we simply use the hash function to compute the slot number for the item, and then check the hash table to see if it is present.</li>
<li>This searching operation is $O(1)$; if everything is where is should be, we have found a <strong>constant time</strong> search algorithm.</li>
<li>The problem is: what if two or more items need to be in the same slot? This is referred to as a <strong>collision</strong> (or a clash).</li>
</ul>
<h4 id="Perfect-hash-function"><a href="#Perfect-hash-function" class="headerlink" title="Perfect hash function"></a>Perfect hash function</h4><ul>
<li>A hash function that maps each item into a unique slot is called a <strong>perfect hash function</strong>.</li>
<li>One solution to the collision problem is to <strong>increase the size</strong> of the hash table so that each possible value in the range can be accommodated (i.e. each item has a unique slot).</li>
<li>If we have a large number of items, then this solution will require an enormous amount of memory.</li>
</ul>
<h3 id="Hashing-Cont’d-3-3"><a href="#Hashing-Cont’d-3-3" class="headerlink" title="Hashing (Cont’d) [3/3]"></a>Hashing (Cont’d) [3/3]</h3><p>Are there other methods to construct hash functions?</p>
<ul>
<li><strong>Folding method:</strong> divide the item into equal-size pieces, these pieces are added together to give the resulting hash value.</li>
</ul>
<div class="note no-icon">
            <p>E.g., given a phone number: <strong>662-915-1234</strong>, we would divide them into (66, 29, 15, 12, 34), add them up, we get 156. If the hash table has 11 slots, then <code>156 % 11 = 2</code>, so the phone number hashes to slot 2.</p>
          </div>

<ul>
<li><strong>Mid-square method:</strong> first square the item, then extract some portion of the resulting digits.</li>
</ul>
<div class="note no-icon">
            <p>E.g., given a number 44, compute <code>44^2 = 1936</code>. By extracting the middle two digits, <code>93</code>, perform the remainder step, <code>93 % 11 = 5</code>, so the number hashes to slot 5.</p>
          </div>

<h2 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h2><div class="tabs" id="second-hashing_quiz-unique-names"><ul class="nav-tabs"><li class="tab active"><a href="#second-hashing_quiz-unique-names-1">Quiz contents</a></li><li class="tab"><a href="#second-hashing_quiz-unique-names-2">Quiz Solution</a></li></ul><div class="tab-content"><div class="tab-pane active" id="second-hashing_quiz-unique-names-1"><p>The table below shows items under the three methods, assuming our hash table has 11 slots.</p>
<table>
<thead>
<tr>
<th align="left">Item</th>
<th align="left">Remainder</th>
<th align="left">Folding</th>
<th align="left">Mid-Square</th>
</tr>
</thead>
<tbody><tr>
<td align="left">54</td>
<td align="left">10</td>
<td align="left">9</td>
<td align="left">3</td>
</tr>
<tr>
<td align="left">26</td>
<td align="left">4</td>
<td align="left">8</td>
<td align="left">7</td>
</tr>
<tr>
<td align="left">93</td>
<td align="left">5</td>
<td align="left">1</td>
<td align="left">9</td>
</tr>
<tr>
<td align="left">77</td>
<td align="left">0</td>
<td align="left">3</td>
<td align="left">4</td>
</tr>
<tr>
<td align="left">31</td>
<td align="left">9</td>
<td align="left">4</td>
<td align="left">6</td>
</tr>
</tbody></table></div><div class="tab-pane" id="second-hashing_quiz-unique-names-2"><p><strong>Item and Remainder:</strong><br>$$54 \bmod 11 = 10$$<br>$$26 \bmod 11 = 4$$<br>$$93 \bmod 11 = 5$$<br>$$…$$<br>$$31 \bmod 11 = 9$$</p>
<p><strong>Folding Method:</strong><br>$$54 \rightarrow 5 + 4 = 9  \bmod 11 = 9$$<br>$$26 \rightarrow 2 + 6 = 8  \bmod 11 = 8$$<br>$$93 \rightarrow 9 + 3 = 12 \bmod 11 = 1$$<br>$$…$$</p>
<p><strong>Square Method:</strong></p>
<p>$$54^{2} = 2,916 \rightarrow 91 \bmod 11 = 3$$<br>$$26^{2} =   676 \rightarrow  7 \bmod 11 = 7$$<br>$$94^{2} = 8,649 \rightarrow 64 \bmod 11 = 9$$<br>$$…$$</p></div></div></div>

<h3 id="Hashing-Cont’d-4-5"><a href="#Hashing-Cont’d-4-5" class="headerlink" title="Hashing (Cont’d) [4/5]"></a>Hashing (Cont’d) [4/5]</h3><ul>
<li>We can also create hash functions for characterbased items such as strings.</li>
<li>A string can be thought of as a sequence of ordinal values.</li>
</ul>
<div class="note no-icon">
            <p>E.g. “cat”<br>ord(‘c’) -&gt; 99<br>ord(‘a’) -&gt; 97<br>ord(‘t’) -&gt; 116</p><p>99 + 97 + 116 = 312 % 11 = 4</p>
          </div>

<h3 id="Hashing-Cont’d-5-5"><a href="#Hashing-Cont’d-5-5" class="headerlink" title="Hashing (Cont’d) [5/5]"></a>Hashing (Cont’d) [5/5]</h3><p>Now write a function called <strong>hashString</strong> that takes a string and a table size, and returns the hash value of the string.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash_string</span><span class="params">(string, tableSize)</span>:</span></span><br><span class="line">    s = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> string:</span><br><span class="line">        s += ord(ch)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> s % tableSize</span><br></pre></td></tr></table></figure>

<h3 id="Hashing-Cont’d-6-6"><a href="#Hashing-Cont’d-6-6" class="headerlink" title="Hashing (Cont’d) [6/6]"></a>Hashing (Cont’d) [6/6]</h3><ul>
<li>What about anagrams (words with the same letters)? They will have the same hash value based on the previous function.</li>
<li>To remedy this, we can use the position of the character as a weighting factor.</li>
</ul>
<div class="note no-icon">
            <table><thead><tr><th align="center">1</th><th align="center">2</th><th align="center">3</th></tr></thead><tbody><tr><td align="center">c</td><td align="center">a</td><td align="center">t</td></tr></tbody></table><p>$$<br>ord(c) \cdot 1 + ord(a) \cdot 2 + ord(t) \cdot 3 = 641 \pmod{11} = 2<br>$$</p><p>-&gt; 99 + 97 + 116 = 312 % 11 = 4</p>
          </div>

<h3 id="Hashing-Cont’d-7-7"><a href="#Hashing-Cont’d-7-7" class="headerlink" title="Hashing (Cont’d) [7/7]"></a>Hashing (Cont’d) [7/7]</h3><ul>
<li>There are a number of other methods to construct hash functions for items in a collection.</li>
<li>The important thing to remember is that the hash function has to be <strong>efficient</strong>.</li>
<li>If the hash function is too complex, then it becomes more work to compute the slot number than it would be simply do a basic sequential or binary search.</li>
</ul>
<h3 id="Hashing-Cont’d-8-8"><a href="#Hashing-Cont’d-8-8" class="headerlink" title="Hashing (Cont’d) [8/8]"></a>Hashing (Cont’d) [8/8]</h3><ul>
<li>When two items hash to the same slot (collision), we must have a systematic way for placing the 2<sup>nd</sup> item in the hash table. This process is called <strong>collision resolution</strong>.</li>
<li><strong>Linear probing:</strong> start at the original hash position, move one slot at a time until we find an empty slot.</li>
</ul>
<h3 id="Hashing-Cont’d-9-9"><a href="#Hashing-Cont’d-9-9" class="headerlink" title="Hashing (Cont’d) [9/9]"></a>Hashing (Cont’d) [9/9]</h3><ul>
<li>One problem for linear probing is the tendency of <strong>clustering</strong>: items become clustered in the table.</li>
<li>If collisions occur at the same hash value, a number of surrounding slots will be filled, this will have an impact on other items that are being added.</li>
<li>A cluster of items for slot 0 (below pic.)</li>
<li>This will have an impact on other items that are being inserted, as we saw when we tried to add the item 20 above.</li>
<li>A cluster of values hashing to 0 had to be skipped to finally find an open position. This cluster is shown below.</li>
</ul>
<a href="https://runestone.academy/runestone/books/published/pythonds/_images/clustering.png" title="A Cluster of Items for Slot 0" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/pythonds/_images/clustering.png" class="" title="A Cluster of Items for Slot 0" alt="A Cluster of Items for Slot 0"></a>

<ul>
<li>One way to deal with clustering is to <ins>extend the linear probing</ins>: instead of checking sequentially, we use a “plus 3” probe (i.e., look at every third slot until we find an empty one). (54, 26, 93, 17, 77, 31, <strong>44, 55, 20</strong>)</li>
</ul>
<a href="https://runestone.academy/runestone/books/published/pythonds/_images/hashtable2.png" title="Hash Table with Six Items" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/pythonds/_images/hashtable2.png" class="" title="Hash Table with Six Items" alt="Hash Table with Six Items"></a>

<ul>
<li>Collision resolution using “plus 3” (below)</li>
</ul>
<a href="https://runestone.academy/runestone/books/published/pythonds/_images/linearprobing2.png" title="Collision Resolution Using “Plus 3”" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/pythonds/_images/linearprobing2.png" class="" title="Collision Resolution Using “Plus 3”" alt="Collision Resolution Using “Plus 3”"></a>

<ul>
<li>This will potentially reduce the clustering that occurs.</li>
<li>Top image shows the items when collision resolution is done with a “plus 3” probe.</li>
<li>This means that once a collision occurs, we will look at every third slot until we find one that is empty.</li>
</ul>
<h3 id="Hashing-Cont’d-10-10"><a href="#Hashing-Cont’d-10-10" class="headerlink" title="Hashing (Cont’d) [10/10]"></a>Hashing (Cont’d) [10/10]</h3><ul>
<li>The process of looking for another slot after a collision is generally called <strong>rehashing</strong>.</li>
<li>With <strong>simple linear probing</strong>, the rehash function is:</li>
</ul>
<p>$$newHashValue = rehash(oldHashValue) \text{  where   } rehash(pos)$$<br>$$ = (pos+1) \bmod tableSize$$</p>
<ul>
<li>With “plus 3” linear probing, the rehash function is:</li>
</ul>
<p>$$<br>rehash(pos) = (pos+3) \bmod tableSize<br>$$</p>
<h2 id="HashTable-implementation-in-Python"><a href="#HashTable-implementation-in-Python" class="headerlink" title="HashTable implementation in Python"></a>HashTable implementation in Python</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HashTable</span>:</span></span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, size)</span>:</span></span><br><span class="line">          self.slots = [<span class="literal">None</span>] * size</span><br><span class="line">          self.data = [<span class="literal">None</span>] * size</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">store</span><span class="params">(self, key, data)</span>:</span></span><br><span class="line">          hashValue = self.hashFunction(key, len(self.slots))</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> self.slots[hashValue] == <span class="literal">None</span>:</span><br><span class="line">              self.slots[hashValue] = key</span><br><span class="line">              self.data[hashValue] = data</span><br><span class="line">          <span class="keyword">else</span>:</span><br><span class="line">              nextSlot = self.rehash(hashValue, len(self.slots))</span><br><span class="line"></span><br><span class="line">              <span class="keyword">while</span> self.slots[nextSlot] != <span class="literal">None</span>:</span><br><span class="line">                 nextSlot = self.rehash(nextSlot, len(self.slots))</span><br><span class="line">              </span><br><span class="line">              self.slots[hashValue] = key</span><br><span class="line">              self.data[hashValue] = data</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">hashFunction</span><span class="params">(self, key, size)</span>:</span></span><br><span class="line">          <span class="keyword">return</span> key % size</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">rehash</span><span class="params">(self, oldHash, size)</span>:</span></span><br><span class="line">          <span class="keyword">return</span> (oldHash + <span class="number">1</span>) % size</span><br></pre></td></tr></table></figure>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 356</category>
      </categories>
      <tags>
        <tag>CSCI 356</tag>
      </tags>
  </entry>
  <entry>
    <title>File I/O</title>
    <url>/2020/04/19/2020-04-19-csci259-lec5-3/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Using-Files-for-Data-Storage"><a href="#Using-Files-for-Data-Storage" class="headerlink" title="Using Files for Data Storage"></a>Using Files for Data Storage</h2><ul>
<li>Can use files instead of keyboard, monitor, screen for program input, output</li>
<li>3 Steps:<ul>
<li>Open the file</li>
<li>Use the file (read, write, both)</li>
<li>Close the file</li>
</ul>
</li>
</ul>
<h2 id="File-What-is-Needed"><a href="#File-What-is-Needed" class="headerlink" title="File: What is Needed"></a>File: What is Needed</h2><ul>
<li>Use <code>fstream</code> header file for file access</li>
<li>File stream types:<ul>
<li><code>ifstream</code> for input from a file</li>
<li><code>ofstream</code> for output from a file</li>
</ul>
</li>
<li>Define file stream objects:<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">ifstream infile;</span><br><span class="line">ofstream outfile;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="What-a-Stream-Is"><a href="#What-a-Stream-Is" class="headerlink" title="What a Stream Is"></a>What a Stream Is</h3><p>The iostream library is an object-oriented library that provides input and output functionality using streams.</p>
<a href="http://www.cplusplus.com/img/iostream.gif" title="iostream" class="gallery-item"><img src="http://www.cplusplus.com/img/iostream.gif" class="" width="705" height="203" title="iostream" alt="iostream"></a>

<blockquote><p>A stream is an abstraction that represents a device on which input and ouput operations are performed. A stream can basically be represented as a source or destination of characters of indefinite length.</p>
<footer><strong>@cplusplus.com - Input/Output</strong><cite><a href="http://www.cplusplus.com/reference/iolibrary/" target="_blank" rel="noopener">www.cplusplus.com/reference/iolibrary</a></cite></footer></blockquote>

<h2 id="Opening-Files"><a href="#Opening-Files" class="headerlink" title="Opening Files"></a>Opening Files</h2><ul>
<li>Create a link between file name (outside the program) and file stream object (inside the program)</li>
<li>Use the <code>open</code> function:<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">infile.open(<span class="string">"Test.txt"</span>); <span class="comment">// must exist for open to work.</span></span><br><span class="line">outfile.open(<span class="string">"Results.txt"</span>);</span><br></pre></td></tr></table></figure></li>
<li>Filename may include drive, path info.</li>
<li>Input file must exist for open to work</li>
<li>Output file will be created if necessary; existing file will be erased first.</li>
</ul>
<h3 id="Testing-for-File-Open-Errors"><a href="#Testing-for-File-Open-Errors" class="headerlink" title="Testing for File Open Errors"></a>Testing for File Open Errors</h3><ul>
<li><strong>strerror</strong> Defined in header &lt;cstring&gt;.<ul>
<li>Returns a pointer to the textual description of the system error code errnum, identical to the description that would be printed by <code>std::perror()</code>.</li>
</ul>
</li>
<li><strong>errno</strong> is a preprocessor macro used for error indication.</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cerrno&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::ifstream infile;</span><br><span class="line">  infile.open(<span class="string">"Test.txt"</span>);  <span class="comment">// must exist for open to work.</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Can also use the fail function</span></span><br><span class="line">  <span class="keyword">if</span> (infile.fail()) &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">"Error: "</span> &lt;&lt; <span class="built_in">std</span>::strerror(errno);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Program Output:</span></span><br><span class="line"><span class="comment">// Error: No such file or directory</span></span><br></pre></td></tr></table></figure>

<h2 id="Using-Files"><a href="#Using-Files" class="headerlink" title="Using Files"></a>Using Files</h2><ul>
<li><p>Can use output file object and &lt;&lt; to send data to a file:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">outfile &lt;&lt; <span class="string">"Inventory report"</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Can use input file object and &gt;&gt; to copy data from file to variables:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">infile &gt;&gt; partNum;</span><br><span class="line">infile &gt;&gt; qtyInStock &gt;&gt; qtyOnOrder;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="Closing-Files"><a href="#Closing-Files" class="headerlink" title="Closing Files"></a>Closing Files</h2><p>Use the <code>close</code> function:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">infile.close();</span><br><span class="line">outfile.close();</span><br></pre></td></tr></table></figure>

<p>Don’t wait for operating system to close files at program end:</p>
<ul>
<li>may be limit on number of open files</li>
<li>may be buffered output data waiting to send to file</li>
</ul>
<h2 id="Letting-the-User-Specify-a-FileName"><a href="#Letting-the-User-Specify-a-FileName" class="headerlink" title="Letting the User Specify a FileName"></a>Letting the User Specify a FileName</h2><ul>
<li>In many cases, you will want the user to specify the name of a file for the program to open.</li>
<li>You can pass a <code>string</code> object as an argument to a file stream object’s <code>open</code> function.</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">std</span>::ifstream inputFile;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> filename;</span><br><span class="line"><span class="keyword">int</span> number;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Get the filename from the user</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter the filename: "</span>;</span><br><span class="line"><span class="built_in">std</span>::getline(<span class="built_in">std</span>::<span class="built_in">cin</span>, filename);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open the file</span></span><br><span class="line">inputFile.open(filename);</span><br><span class="line"></span><br><span class="line"><span class="comment">//If the file successfully opened, process it.</span></span><br><span class="line"><span class="keyword">if</span> (inputFile) &#123;</span><br><span class="line">    <span class="comment">// Read the numbers from the file and display.</span></span><br><span class="line">    <span class="keyword">while</span> (inputFile &gt;&gt; number) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; number &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Close the file.</span></span><br><span class="line">    inputFile.close();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//Display an error message.</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Error opening the file\n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Using-Loops-to-Detect-End-of-File"><a href="#Using-Loops-to-Detect-End-of-File" class="headerlink" title="Using Loops to Detect End of File"></a>Using Loops to Detect End of File</h2><ul>
<li>The stream extraction operator &gt;&gt; returns true when a value was successfully read, false otherwise</li>
<li>Can be tested in a while loop to continue execution as long as values are read from the file:</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (inputFile &gt;&gt; number)</span><br></pre></td></tr></table></figure>

<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">std</span>::ifstream inputFile;</span><br><span class="line"><span class="keyword">int</span> number;</span><br><span class="line"></span><br><span class="line">inputFile.open(“ListOfNumbers.txt”); <span class="comment">//open the file</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (inputFile &gt;&gt; number) &#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; number &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// read numbers from file</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Or we can replace,</span></span><br><span class="line"><span class="comment">while (inputFile.peek() != EOF) &#123;</span></span><br><span class="line"><span class="comment">    inputFile &gt;&gt; number;</span></span><br><span class="line"><span class="comment">    cout &lt;&lt; number &lt;&lt; endl; // read numbers from file</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">inputFile.close(); <span class="comment">// close the file</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<h2 id="Programming-Exercise"><a href="#Programming-Exercise" class="headerlink" title="Programming Exercise"></a>Programming Exercise</h2><div class="tabs" id="third-ex1-unique_names"><ul class="nav-tabs"><li class="tab active"><a href="#third-ex1-unique_names-1">Explain</a></li><li class="tab"><a href="#third-ex1-unique_names-2">Code</a></li><li class="tab"><a href="#third-ex1-unique_names-3">Program Output</a></li></ul><div class="tab-content"><div class="tab-pane active" id="third-ex1-unique_names-1"><p>Add line numbers to an existing text file.</p></div><div class="tab-pane" id="third-ex1-unique_names-2"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="function">ifstream <span class="title">infile</span><span class="params">(<span class="string">"Test.txt"</span>)</span></span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="function">ofstream <span class="title">outfile</span><span class="params">(<span class="string">"Results.txt"</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">string</span> lineContent;</span><br><span class="line">  <span class="keyword">int</span> lineNumber = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">std</span>::getline(infile, lineContent)) &#123;</span><br><span class="line">    outfile &lt;&lt; (lineNumber++) &lt;&lt; '. ' &lt;&lt; lineContent &lt;&lt; '\n';</span><br><span class="line">  &#125;</span><br><span class="line">  outfile.close();</span><br><span class="line">  infile.close();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="third-ex1-unique_names-3"><p>Test.txt</p>
<blockquote><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.<br>Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.<br>It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.<br>It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>
</blockquote>

<p>Result.txt</p>
<blockquote><ol>
<li>Lorem Ipsum is simply dummy text of the printing and typesetting industry. </li>
<li>Lorem Ipsum has been the industry’s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</li>
<li>It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. </li>
<li>It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</li>
</ol>
</blockquote></div></div></div>

<div class="tabs" id="third-ex2-unique_names"><ul class="nav-tabs"><li class="tab active"><a href="#third-ex2-unique_names-1">Explain</a></li><li class="tab"><a href="#third-ex2-unique_names-2">Code</a></li><li class="tab"><a href="#third-ex2-unique_names-3">Program Output</a></li></ul><div class="tab-content"><div class="tab-pane active" id="third-ex2-unique_names-1"><p>Write the program get filename from user and store the contents and display them.</p>
<ul>
<li>Get only filenames (not include <code>.txt</code> format.)</li>
<li>If file content is integer it should be stored the integer type variable</li>
<li>Character type content should be stored limited size array.</li>
</ul></div><div class="tab-pane" id="third-ex2-unique_names-2"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cerrno&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">constexpr</span> <span class="keyword">int</span> STR_SIZE = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">string</span> filename;</span><br><span class="line">  <span class="built_in">std</span>::ifstream infile;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> partNum;</span><br><span class="line">  <span class="keyword">char</span> partCh[STR_SIZE];</span><br><span class="line"></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter the filename: "</span>;</span><br><span class="line">  <span class="built_in">std</span>::getline(<span class="built_in">std</span>::<span class="built_in">cin</span>, filename);</span><br><span class="line">  </span><br><span class="line">  filename += <span class="string">".txt"</span>;</span><br><span class="line">  infile.open(filename);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Check if the file is exist or not.</span></span><br><span class="line">  <span class="keyword">if</span> (infile.fail()) &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">"Error: "</span> &lt;&lt; <span class="built_in">std</span>::strerror(errno);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    infile &gt;&gt; partNum;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"partNum: "</span> &lt;&lt; partNum &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (infile &gt;&gt; partCh[i] &amp;&amp; i &lt; STR_SIZE) &#123;</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Current Step: "</span> &lt;&lt; partCh[i++] &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    partCh[i] = <span class="string">'\0'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"partCh: "</span> &lt;&lt; partCh &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">    infile.close();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="third-ex2-unique_names-3"><p>Enter the filename: Test<br>partNum: 100<br>Current Step: a<br>Current Step: b<br>Current Step: c<br>Current Step: d<br>Current Step: e<br>Current Step: f<br>Current Step: g<br>Current Step: h<br>Current Step: i<br>Current Step: j<br>partCh: abcdefghij</p></div></div></div>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 259</category>
      </categories>
      <tags>
        <tag>CSCI 259</tag>
      </tags>
  </entry>
  <entry>
    <title>Single-Dimensional Arrays</title>
    <url>/2020/04/15/2020-04-15-csci259-lec7/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h2><ul>
<li>Array is a data structure that represents a collection of the same types of data.</li>
<li>Declared using [] operator.</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> tests[<span class="number">5</span>] = &#123;<span class="number">0</span>,&#125;;</span><br></pre></td></tr></table></figure>

<ul>
<li>Each element in an array is assigned a unique subscript (or index)</li>
<li>Subscripts start at 0</li>
<li>The last element’s subscript is <strong>n-1</strong> where n is the number of elements in the array.</li>
</ul>
<table>
<thead>
<tr>
<th>test[0]</th>
<th>test[1]</th>
<th>test[2]</th>
<th>test[3]</th>
<th>test[4]</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
</tr>
</tbody></table>
<h2 id="Partial-Array-Initialization"><a href="#Partial-Array-Initialization" class="headerlink" title="Partial Array Initialization"></a>Partial Array Initialization</h2><p>If array is initialized with fewer initial values than the size, the<br>remaining elements will be set to 0:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> numbers[<span class="number">7</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>&#125;;</span><br><span class="line"></span><br><span class="line">| [<span class="number">0</span>] | [<span class="number">1</span>] | [<span class="number">2</span>] | [<span class="number">3</span>] | [<span class="number">4</span>] | [<span class="number">5</span>] | [<span class="number">6</span>] |</span><br><span class="line">| --- | --- | --- | --- | --- | --- | --- |</span><br><span class="line">| <span class="number">1</span>   | <span class="number">2</span>   | <span class="number">4</span>   | <span class="number">8</span>   | <span class="number">0</span>   | <span class="number">0</span>   | <span class="number">0</span>   |</span><br></pre></td></tr></table></figure>

<h2 id="Length-of-Array"><a href="#Length-of-Array" class="headerlink" title="Length of Array"></a>Length of Array</h2><ul>
<li>Once an array is created, its length/size is fixed.</li>
<li>The sizeof function in C++ is used to find the total number of bytes allocated for the array.</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> quizzes[] = &#123;<span class="number">12</span>,<span class="number">17</span>,<span class="number">15</span>,<span class="number">11</span>&#125;;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"length is "</span> &lt;&lt; <span class="keyword">sizeof</span>(quizzes) /<span class="keyword">sizeof</span>(quizzes[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure>

<h2 id="Enhanced-for-loop"><a href="#Enhanced-for-loop" class="headerlink" title="Enhanced for loop"></a>Enhanced for loop</h2><ul>
<li>It also called as range-based for loop.</li>
<li>A new for loop that enables you to traverse the complete array sequentially without using a counter</li>
</ul>
<p>In general, the syntax is</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (elementDataType value : arrayName) &#123;</span><br><span class="line">    <span class="comment">// Process the value</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>For example, the following code displays all elements in the array myList:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> myList[<span class="number">5</span>] = &#123;<span class="number">1.0</span>, <span class="number">2.0</span>, <span class="number">3.0</span>, <span class="number">4.0</span>, <span class="number">5.0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">double</span> value : myList) &#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; value &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Passing-Arrays-to-Functions"><a href="#Passing-Arrays-to-Functions" class="headerlink" title="Passing Arrays to Functions"></a>Passing Arrays to Functions</h2><ul>
<li>To pass an array to a function, just use the array name</li>
<li>When passing an array to a function, it is common to pass array size so that function knows how many elements to process:</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">showScores(tests, ARRAY_SIZE); <span class="comment">// function call</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Array size must also be reflected in prototype, header:</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showScores</span><span class="params">(<span class="keyword">int</span> [], <span class="keyword">int</span>)</span></span>; <span class="comment">// function prototype</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showScores</span><span class="params">(<span class="keyword">int</span> tests[], <span class="keyword">int</span> size)</span> <span class="comment">// // function header</span></span></span><br></pre></td></tr></table></figure>

<h2 id="Arrays-are-Passed-by-Reference"><a href="#Arrays-are-Passed-by-Reference" class="headerlink" title="Arrays are Passed by Reference"></a>Arrays are Passed by Reference</h2><p>C++ uses pass by value to pass arguments to a function. There are important differences between passing a value of variables of primitive data types and passing arrays</p>
<h3 id="Passing-primitive-data-type"><a href="#Passing-primitive-data-type" class="headerlink" title="Passing primitive data type"></a>Passing primitive data type</h3><ul>
<li>For a parameter of a primitive type value, the actual value is passed.</li>
<li>Changing the value of the local parameter inside the function does <ins><strong>not</strong></ins> affect the value of the variable outside the function.</li>
</ul>
<h3 id="Passing-array"><a href="#Passing-array" class="headerlink" title="Passing array"></a>Passing array</h3><ul>
<li>For a parameter of an array type, the value of the parameter contains a <strong>reference</strong> to an array; this reference is passed to the function.</li>
<li>Any changes to the array that occur inside the function body will  <ins><strong>affect</strong></ins> the original array that was passed as the argument.</li>
</ul>
<h4 id="Passing-an-array-by-reference"><a href="#Passing-an-array-by-reference" class="headerlink" title="Passing an array by reference"></a>Passing an array by reference</h4><p>These three are different ways of declaring the same function. They’re all treated as taking an <code>int *</code> parameter, you can pass any size array to them.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//These are pointer to an element</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo</span><span class="params">(<span class="keyword">int</span> * x)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo</span><span class="params">(<span class="keyword">int</span> x[<span class="number">100</span>])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo</span><span class="params">(<span class="keyword">int</span> x[])</span></span>;</span><br></pre></td></tr></table></figure>

<p>But, These are not reference-to-array parameter. These are <strong>“decayed”</strong> approach.</p>
<p>The “decayed” approach should be normally reserved for arrays of run-time size and is normally accompanied by the actual size of the array in a separate parameter</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">unsigned</span> n)</span></span>; <span class="comment">// pointer to an element</span></span><br><span class="line"><span class="comment">// Passing a run-time sized array</span></span><br></pre></td></tr></table></figure>

<p>The reference-to-array parameter does not allow array type to decay to pointer type. i.e. the exact array type remains preserved inside the function. (For example, you can use the <code>sizeof arr / sizeof *arr</code> trick on the parameter and get the element count).</p>
<div class="tabs" id="second-difference_between_pointer_and_reference-unique-names"><ul class="nav-tabs"><li class="tab active"><a href="#second-difference_between_pointer_and_reference-unique-names-1">Code</a></li><li class="tab"><a href="#second-difference_between_pointer_and_reference-unique-names-2">Program Output</a></li></ul><div class="tab-content"><div class="tab-pane active" id="second-difference_between_pointer_and_reference-unique-names-1"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constexpr</span> <span class="keyword">int</span> SIZE = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintSizeByPointer</span><span class="params">(<span class="keyword">int</span>* arr)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"SIZE: "</span></span><br><span class="line">        &lt;&lt; (<span class="keyword">sizeof</span> arr / <span class="keyword">sizeof</span> *arr) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintSizeByReference</span><span class="params">(<span class="keyword">int</span> (&amp;arr)[SIZE])</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"SIZE: "</span></span><br><span class="line">        &lt;&lt; (<span class="keyword">sizeof</span> arr / <span class="keyword">sizeof</span> *arr) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* I write this code on environment</span></span><br><span class="line"><span class="comment">which address size is 8byte. */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[SIZE] = &#123;<span class="number">0</span>,&#125;;</span><br><span class="line">    PrintSizeByPointer(arr);</span><br><span class="line">    PrintSizeByReference(arr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="second-difference_between_pointer_and_reference-unique-names-2"><p>TEST: 8<br>SIZE: 2<br>SIZE: 10</p></div></div></div>

<p>This (below) is reference to an array. This only accepts arrays of 100 integers. You can safely use <strong>sizeof</strong> on x.</p>
<p>And this is the correct way to pass an array of compile-time size to a function</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo</span><span class="params">(<span class="keyword">int</span> (&amp;x)[<span class="number">100</span>])</span></span>; <span class="comment">// reference to an array</span></span><br></pre></td></tr></table></figure>

<p>In fact, in situations when the array size is fixed at compile-time, using a reference-to-array (or pointer-to-array) parameter declarations can be preceived as the primary, preferred way to pass an array.</p>
<p>The other variant (when the array type is allowed to decay to pointer type) are reserved for situations when it is necessary to pass arrays of run-time size.</p>
<hr>
<p>This from stackoverflow</p>
<ul>
<li><a href="https://stackoverflow.com/a/5724184/10584779" target="_blank" rel="noopener">Passing an array by reference</a></li>
<li><a href="https://stackoverflow.com/a/2189018/10584779" target="_blank" rel="noopener">what is useful about a reference to array parameter</a></li>
</ul>
<h2 id="Dynamic-Memory-Allocation"><a href="#Dynamic-Memory-Allocation" class="headerlink" title="Dynamic Memory Allocation"></a>Dynamic Memory Allocation</h2><ul>
<li>Can allocate storage for a variable while program is running</li>
<li>Computer returns address of newly allocated variable</li>
<li>Uses <strong>new</strong> operator to allocate memory:</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span>* sales = <span class="literal">nullptr</span>;</span><br><span class="line">sales = <span class="keyword">new</span> <span class="keyword">double</span>[numDays];</span><br></pre></td></tr></table></figure>

<p><strong>new</strong> returns address of memory location</p>
<h2 id="Releasing-Dynamic-Memory"><a href="#Releasing-Dynamic-Memory" class="headerlink" title="Releasing Dynamic Memory"></a>Releasing Dynamic Memory</h2><ul>
<li>Use delete to free dynamic memory, use [] to free dynamic array.</li>
<li>Only use delete with dynamic memory!</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> [] sales;</span><br><span class="line">sales = <span class="literal">nullptr</span>;</span><br></pre></td></tr></table></figure>

<h2 id="Searching-Arrays"><a href="#Searching-Arrays" class="headerlink" title="Searching Arrays"></a>Searching Arrays</h2><p>Searching is the process of looking for a specific element in an array; for example, discovering whether a certain score is<br>included in a list of scores.</p>
<ul>
<li>Searching is a common task in computer programming. There are many algorithms and data structures devoted to searching</li>
<li>In this section, two commonly used approaches are discussed.<ul>
<li>linear search</li>
<li>binary search</li>
</ul>
</li>
</ul>
<h3 id="Linear-Search"><a href="#Linear-Search" class="headerlink" title="Linear Search"></a>Linear Search</h3><ul>
<li>The linear search approach compares the key element, key, sequentially with each element in the array list.</li>
<li>The function continues to do so until the key matches an element in the list or the list is exhausted without a match being found.<ul>
<li>If a match is made, the linear search returns the index of the element in the array that matches the key.</li>
<li>If no match is found, the search returns -1.</li>
</ul>
</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Linear Search</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">linearSearch</span><span class="params">(<span class="keyword">int</span> <span class="built_in">list</span>[], <span class="keyword">int</span> numElems, <span class="keyword">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numElems; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (key == <span class="built_in">list</span>[i])</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Trace the function:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> <span class="built_in">list</span>[] = &#123;<span class="number">1</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">-3</span>, <span class="number">6</span>, <span class="number">2</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = linearSearch(<span class="built_in">list</span>, <span class="number">7</span>, <span class="number">4</span>); <span class="comment">// returns 1</span></span><br><span class="line"><span class="keyword">int</span> j = linearSearch(<span class="built_in">list</span>, <span class="number">7</span>, <span class="number">-4</span>); <span class="comment">// returns -1</span></span><br><span class="line"><span class="keyword">int</span> k = linearSearch(<span class="built_in">list</span>, <span class="number">7</span>, <span class="number">-3</span>); <span class="comment">// returns 4</span></span><br></pre></td></tr></table></figure>

<h2 id="Binary-Search"><a href="#Binary-Search" class="headerlink" title="Binary Search"></a>Binary Search</h2><p>For binary search to work, the elements in the array must <strong>already be ordered</strong>. Without loss of generality, assume that the array is in ascending order.</p>
<p>e.g., 2 4 7 10 11 45 50 59 60 66 69 70 79</p>
<p>The binary search first compares the key with the element in the <strong>middle</strong> of the array.</p>
<ul>
<li>The binarySearch function returns the index of the element in the list that matches the search key if it is contained in the list. Otherwise, it returns - 1.</li>
<li>For the <strong>binarySearch</strong> function to work, the array must be <ins>pre-sorted</ins> in increasing order.</li>
</ul>
<p><strong>Consider the following three cases:</strong></p>
<ol>
<li>If the key is less than the middle element, you only need to search the key in the first half of the array.</li>
<li>If the key is equal to the middle element, the search ends with a match.</li>
<li>If the key is greater than the middle element, you only need to search the key in the second half of the array.</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Use binary search to find the key in the list</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span> <span class="built_in">list</span>[], <span class="keyword">int</span> numElems, <span class="keyword">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> high = numElems - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (high &gt;= low) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (low + high) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (key &lt; <span class="built_in">list</span>[mid])</span><br><span class="line">            high = mid - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (key == <span class="built_in">list</span>[mid])</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            low = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//high &lt; low, key not found</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Opening-Problem"><a href="#Opening-Problem" class="headerlink" title="Opening Problem"></a>Opening Problem</h2><div class="tabs" id="second-nums_of_average_above-unique-names"><ul class="nav-tabs"><li class="tab active"><a href="#second-nums_of_average_above-unique-names-1">Problem</a></li><li class="tab"><a href="#second-nums_of_average_above-unique-names-2">Code</a></li><li class="tab"><a href="#second-nums_of_average_above-unique-names-3">Program Output</a></li></ul><div class="tab-content"><div class="tab-pane active" id="second-nums_of_average_above-unique-names-1"><p>Read 10 positive integers, compute their average, and find out how many integers are above the average.</p></div><div class="tab-pane" id="second-nums_of_average_above-unique-names-2"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">constexpr</span> <span class="keyword">int</span> SIZE = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[SIZE];</span><br><span class="line">    srand(time(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SIZE; i++) &#123;</span><br><span class="line">      arr[i] = <span class="number">1</span> + rand() % SIZE;</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"arr["</span> &lt;&lt; i &lt;&lt; <span class="string">"]: "</span> </span><br><span class="line">        &lt;&lt; arr[i] &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> average;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">int</span> arrVal : arr) &#123;</span><br><span class="line">      sum += arrVal;</span><br><span class="line">    &#125;</span><br><span class="line">    average = sum / <span class="keyword">double</span>(SIZE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> numsAbove = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">int</span> arrVal: arr) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arrVal &gt; average) &#123;</span><br><span class="line">        numsAbove++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"The average is "</span> &lt;&lt; average &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"The "</span> &lt;&lt; numsAbove</span><br><span class="line">        &lt;&lt; <span class="string">" students is higher than average.\n"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="second-nums_of_average_above-unique-names-3"><p>arr[0]: 3<br>arr[1]: 9<br>arr[2]: 5<br>arr[3]: 1<br>arr[4]: 1<br>arr[5]: 2<br>arr[6]: 8<br>arr[7]: 1<br>arr[8]: 2<br>arr[9]: 9<br>The average is 4.1<br>The 4 students is higher than average.</p></div></div></div>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 259</category>
      </categories>
      <tags>
        <tag>CSCI 259</tag>
      </tags>
  </entry>
  <entry>
    <title>Functions</title>
    <url>/2020/04/14/2020-04-14-csci259-lec6/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="What-is-Funciton"><a href="#What-is-Funciton" class="headerlink" title="What is Funciton"></a>What is Funciton</h2><p>A function is a collection of statements that are grouped together to perform an operation.</p>
<h2 id="Benefit-of-Using-Function"><a href="#Benefit-of-Using-Function" class="headerlink" title="Benefit of Using Function"></a>Benefit of Using Function</h2><ul>
<li>Functions can be used to reduce redundant coding and enable code reuse.</li>
<li>Functions can also be used to modularize code and improve the quality of the program.</li>
<li>Information hiding: Hide the implementation from the user.</li>
<li>You can think of the function body as a black box that contains the detailed implementation for the function.</li>
<li>Reduce complexity.</li>
</ul>
<h2 id="Overloading-Function"><a href="#Overloading-Function" class="headerlink" title="Overloading Function"></a>Overloading Function</h2><p>Overloading functions enables you to define the functions with the same name as long as their signatures are different (i.e. they have different parameter list).</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">max</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a &gt; b) ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">max</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b, <span class="keyword">double</span> c)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (a &gt; b) ? ((a &gt; c) ? a : c) : ((b &gt; c) ? b : c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Ambiguous-Invocation"><a href="#Ambiguous-Invocation" class="headerlink" title="Ambiguous Invocation"></a>Ambiguous Invocation</h2><ul>
<li>Sometimes there may be two or more possible matches for an invocation of a function, but the compiler cannot determine the most specific match.</li>
<li>This is referred to as <strong>ambiguous invocation</strong>.</li>
<li>Ambiguous invocation causes a compile error.</li>
<li>Or it can get unexpected result.</li>
</ul>
<div class="tabs" id="second-ambiguous-invocation-unique_names"><ul class="nav-tabs"><li class="tab active"><a href="#second-ambiguous-invocation-unique_names-1">Code</a></li><li class="tab"><a href="#second-ambiguous-invocation-unique_names-2">Result</a></li></ul><div class="tab-content"><div class="tab-pane active" id="second-ambiguous-invocation-unique_names-1"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">double</span> b)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (a &gt; b) ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">max</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (a &gt; b) ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// This statement is ambiguous call to function.</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"max(1, 2): "</span> &lt;&lt; max(<span class="number">1</span>, <span class="number">2</span>) &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"max(1.0, 2): "</span> &lt;&lt; max(<span class="number">1.0</span>, <span class="number">2</span>) &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"max(1, 2.0): "</span> &lt;&lt; max(<span class="number">1</span>, <span class="number">2.0</span>) &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="second-ambiguous-invocation-unique_names-2"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">clang++-7 -pthread -std&#x3D;c++17 -o main main.cpp</span><br><span class="line">main.cpp:16:35: error: call to &#39;max&#39; is ambiguous</span><br><span class="line">    std::cout &lt;&lt; &quot;max(1, 2): &quot; &lt;&lt; max(1, 2) &lt;&lt; &#39;\n&#39;;</span><br><span class="line">                                  ^~~</span><br><span class="line">main.cpp:3:8: note: candidate function</span><br><span class="line">double max(int a, double b) &#123;</span><br><span class="line">       ^</span><br><span class="line">main.cpp:8:8: note: candidate function</span><br><span class="line">double max(double a, int b) &#123;</span><br><span class="line">       ^</span><br><span class="line">1 error generated.</span><br><span class="line">compiler exit status 1</span><br></pre></td></tr></table></figure></div></div></div>

<h2 id="Pass-by-Value"><a href="#Pass-by-Value" class="headerlink" title="Pass by Value"></a>Pass by Value</h2><ul>
<li>When you invoke a function with an argument, the value of the argument is passed to the parameter.</li>
<li>This is referred to as pass by value.</li>
<li>The value of the argument is <strong>not</strong> affected, regardless of the changes made to the parameter inside the function.</li>
</ul>
<h2 id="Pass-by-Reference-1-2"><a href="#Pass-by-Reference-1-2" class="headerlink" title="Pass by Reference[1/2]"></a>Pass by Reference[1/2]</h2><p>Defined with an ampersand (&amp;)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getDimensions</span><span class="params">(<span class="keyword">int</span>&amp;, <span class="keyword">int</span>&amp;)</span></span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>Changes to a reference variable are made to the variable it refers to</li>
<li>Use reference variables to implement passing parameters by reference.</li>
</ul>
<h2 id="Pass-by-Reference-2-2"><a href="#Pass-by-Reference-2-2" class="headerlink" title="Pass by Reference[2/2]"></a>Pass by Reference[2/2]</h2><ul>
<li>Each reference parameter must contain <strong>&amp;</strong>.</li>
<li>Must use &amp; in both prototype and header.</li>
<li>Argument passed to reference parameter must be a variable – cannot be an expression or constant.</li>
<li>Use when appropriate – don’t use when argument should not be changed by function.</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Function prototype</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DoubleNum</span><span class="params">(<span class="keyword">int</span>&amp;)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> value = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"In main, value is "</span> &lt;&lt; value &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"Now calling the function.."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  DoubleNum(value);</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"Now back in main, value is "</span> &lt;&lt; value &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DoubleNum</span><span class="params">(<span class="keyword">int</span>&amp; refVar)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  refVar *= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Generating-Random-Characters"><a href="#Generating-Random-Characters" class="headerlink" title="Generating Random Characters"></a>Generating Random Characters</h2><ul>
<li>Now let us consider how to generate a random lowercase letter.</li>
<li>The Unicode for lowercase letters are consecutive integers starting from the Unicode for ‘a’, then for ‘b’, ‘c’, …, and ‘z’. </li>
<li>The Unicode for ‘a’ is (int)’a’</li>
</ul>
<p>So, a random lower case letter is</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">char</span>)(<span class="string">'a'</span> + rand() % (<span class="string">'z'</span> - <span class="string">'a'</span> + <span class="number">1</span>))</span><br></pre></td></tr></table></figure>

<ul>
<li>To generalize the foregoing discussion, a random character between any two characters ch1 and ch2 with ch1 &lt; ch2 can be generated as follows:</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">char</span>)(ch1 + rand( ) % (ch2 – ch1 + <span class="number">1</span>))</span><br></pre></td></tr></table></figure>

<div class="tabs" id="third-random-alphabet-unique_names"><ul class="nav-tabs"><li class="tab active"><a href="#third-random-alphabet-unique_names-1">Problem</a></li><li class="tab"><a href="#third-random-alphabet-unique_names-2">Code</a></li><li class="tab"><a href="#third-random-alphabet-unique_names-3">Result</a></li></ul><div class="tab-content"><div class="tab-pane active" id="third-random-alphabet-unique_names-1"><ul>
<li>Write an alphabetical matching program.</li>
<li>Get input from user, and compare whether the input value matches the alphabet of the program.</li>
<li>In this case, the alphabet of program should be generated randomly before each input step.</li>
<li>The program should be get only one alphabet each input step.</li>
</ul></div><div class="tab-pane" id="third-random-alphabet-unique_names-2"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  srand(time(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">char</span> alpha;</span><br><span class="line">  <span class="keyword">char</span> randAlpha;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    randAlpha = <span class="keyword">char</span>(<span class="string">'a'</span> + rand() % (<span class="string">'z'</span> - <span class="string">'a'</span> + <span class="number">1</span>));</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"[rand: "</span> &lt;&lt; randAlpha &lt;&lt; <span class="string">"]Guess the alpha: "</span>;</span><br><span class="line">    alpha = <span class="built_in">cin</span>.get();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (randAlpha == alpha) &#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; <span class="string">"Corret!\n"</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; <span class="string">"Incorret! Try again! [Your Input: "</span> &lt;&lt; alpha &lt;&lt; <span class="string">"]\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Extracts characters from the input sequence and discards them, </span></span><br><span class="line"><span class="comment">    until either n characters have been extracted */</span></span><br><span class="line">    <span class="built_in">cin</span>.ignore(numeric_limits&lt;streamsize&gt;::max(), <span class="string">'\n'</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="third-random-alphabet-unique_names-3"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[rand: j]Guess the alpha: hello wr</span><br><span class="line">Incorret! Try again! [Your Input: h]</span><br><span class="line">[rand: d]Guess the alpha: sdljflsjlfjlsdfj lsdiofj weoh fowejio fjweiofj weiojf o    wejfo jweio wef w w  </span><br><span class="line">Incorret! Try again! [Your Input: s]</span><br><span class="line">[rand: z]Guess the alpha: z</span><br><span class="line">Corret!</span><br></pre></td></tr></table></figure></div></div></div>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 259</category>
      </categories>
      <tags>
        <tag>CSCI 259</tag>
      </tags>
  </entry>
  <entry>
    <title>배열, 구조체, 포인터</title>
    <url>/2020/04/01/2020-04-01-data-structure-1/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Polynomial-Program"><a href="#Polynomial-Program" class="headerlink" title="Polynomial Program"></a>Polynomial Program</h2><div class="tabs" id="fourth-poly-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fourth-poly-unique-name-1">Problem</a></li><li class="tab"><a href="#fourth-poly-unique-name-2">C</a></li><li class="tab"><a href="#fourth-poly-unique-name-3">Python</a></li></ul><div class="tab-content"><div class="tab-pane active" id="fourth-poly-unique-name-1"><p>C와 Python으로 아래 다항식을 구현해보자.</p>
<div class="note no-icon">
            <p>$$p1 = 3x^{5} + 6x^{4} + 10$$<br>$$p2 = 7x^{4} + 5x^{2} + 1$$<br>$$p1 + p2 = ?$$</p>
          </div></div><div class="tab-pane" id="fourth-poly-unique-name-2"><div class="tabs" id="second-c_poly-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#second-c_poly-unique-name-1">Method1</a></li><li class="tab"><a href="#second-c_poly-unique-name-2">Method2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="second-c_poly-unique-name-1"><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX(a, b) ((a &gt; b) ? (a) : (b))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_DEGREE (101)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">  <span class="keyword">int</span> degree;</span><br><span class="line">  <span class="keyword">float</span> coef[MAX_DEGREE];</span><br><span class="line">&#125; polynomial;</span><br><span class="line"></span><br><span class="line"><span class="function">polynomial <span class="title">add_poly</span><span class="params">(polynomial A, polynomial B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    polynomial C;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a_pos = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> b_pos = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> c_pos = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> a_degree = A.degree;</span><br><span class="line">    <span class="keyword">int</span> b_degree = B.degree;</span><br><span class="line">    </span><br><span class="line">    C.degree = MAX(A.degree, B.degree);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (a_pos &lt;= A.degree &amp;&amp; b_pos &lt;= B.degree) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a_degree &gt; b_degree) &#123;</span><br><span class="line">            C.coef[c_pos++] = A.coef[a_pos++];</span><br><span class="line">            a_degree--;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a_degree == b_degree) &#123;</span><br><span class="line">            C.coef[c_pos++] = A.coef[a_pos++] + B.coef[b_pos++];</span><br><span class="line">            a_degree--;</span><br><span class="line">            b_degree--;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            C.coef[c_pos++] = B.coef[b_pos++];</span><br><span class="line">            b_degree--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    polynomial p1 = &#123;<span class="number">5</span>, &#123;<span class="number">3</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>&#125;&#125;;</span><br><span class="line">    polynomial p2 = &#123;<span class="number">4</span>, &#123;<span class="number">7</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">1</span>&#125;&#125;;</span><br><span class="line">    polynomial result = add_poly(p1, p2);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Result-Degree: %d\n"</span>, result.degree);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= result.degree; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Result-Coef: %.2f\n"</span>, result.coef[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="second-c_poly-unique-name-2"><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_TERMS (101)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">float</span> coef;</span><br><span class="line">    <span class="keyword">int</span> expon;</span><br><span class="line">&#125; polynomial;</span><br><span class="line"></span><br><span class="line">polynomial g_terms[MAX_TERMS] = &#123;</span><br><span class="line">    &#123;<span class="number">3</span>,<span class="number">5</span>&#125;,&#123;<span class="number">6</span>,<span class="number">4</span>&#125;,&#123;<span class="number">10</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">7</span>,<span class="number">4</span>&#125;,&#123;<span class="number">5</span>,<span class="number">2</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> g_avail = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// compare two integer value</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&gt;'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a == b) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'='</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// append new term in Polynomial.</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">attach</span><span class="params">(<span class="keyword">float</span> coef, <span class="keyword">int</span> expon)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (g_avail &gt; MAX_TERMS) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Too many terms\n"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    g_terms[g_avail].coef = coef;</span><br><span class="line">    g_terms[g_avail].expon = expon;</span><br><span class="line">    g_avail++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//C = A + B</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_poly</span><span class="params">(<span class="keyword">int</span> a_start, <span class="keyword">int</span> a_end, <span class="keyword">int</span> b_start, <span class="keyword">int</span> b_end, <span class="keyword">int</span>* <span class="keyword">const</span> out_c_start, <span class="keyword">int</span>* <span class="keyword">const</span> out_c_end)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    assert(out_c_start != <span class="literal">NULL</span>);</span><br><span class="line">    assert(out_c_end != <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> tmp_coef;</span><br><span class="line"></span><br><span class="line">    *out_c_start = g_avail;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (a_start &lt;= a_end &amp;&amp; b_start &lt;= b_end) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (compare(g_terms[a_start].expon, g_terms[b_start].expon)) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'&gt;'</span>:</span><br><span class="line">            <span class="built_in">attach</span>(g_terms[a_start].coef, g_terms[a_start].expon);</span><br><span class="line">            a_start++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'='</span>:</span><br><span class="line">            tmp_coef = g_terms[a_start].coef + g_terms[b_start].coef;</span><br><span class="line">            <span class="keyword">if</span> (tmp_coef != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">attach</span>(tmp_coef, g_terms[a_start].expon);</span><br><span class="line">            &#125;</span><br><span class="line">            a_start++;</span><br><span class="line">            b_start++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'&lt;'</span>:</span><br><span class="line">            <span class="built_in">attach</span>(g_terms[b_start].coef, g_terms[b_start].expon);</span><br><span class="line">            b_start++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Unexpected Result on compare function."</span>);</span><br><span class="line">            assert(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Move to A's left terms to Polynomial</span></span><br><span class="line">    <span class="keyword">while</span> (a_start &lt;= a_end) &#123;</span><br><span class="line">        <span class="built_in">attach</span>(g_terms[a_start].coef, g_terms[a_start].expon);</span><br><span class="line">        a_start++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Move to B's left terms to Polynomial</span></span><br><span class="line">    <span class="keyword">while</span> (b_start &lt;= b_end) &#123;</span><br><span class="line">        <span class="built_in">attach</span>(g_terms[b_start].coef, g_terms[b_start].expon);</span><br><span class="line">        b_start++;</span><br><span class="line">    &#125;</span><br><span class="line">    *out_c_end = g_avail - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c_start, c_end;</span><br><span class="line">    add_poly(<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, &amp;c_start, &amp;c_end);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = c_start; i &lt;= c_end; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.2fx^%d + "</span>, g_terms[i].coef, g_terms[i].expon);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div></div><div class="tab-pane" id="fourth-poly-unique-name-3"><div class="tabs" id="third-python_poly-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#third-python_poly-unique-name-1">Method1</a></li><li class="tab"><a href="#third-python_poly-unique-name-2">Method2</a></li><li class="tab"><a href="#third-python_poly-unique-name-3">Method3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="third-python_poly-unique-name-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Polynomial</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, degree = None, coeffs = [])</span>:</span></span><br><span class="line">        self.degree = degree</span><br><span class="line">        self.coeffs = coeffs</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Polynomial degree: &#123;&#125;, coeffs: &#123;&#125;"</span>.format(self.degree, self.coeffs)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__add__</span><span class="params">(self, other)</span>:</span></span><br><span class="line">        self_pos = <span class="number">0</span></span><br><span class="line">        other_pos = <span class="number">0</span></span><br><span class="line">        self_degree = self.degree</span><br><span class="line">        other_degree = other.degree</span><br><span class="line">        </span><br><span class="line">        result_degree = max(self_degree, other_degree)</span><br><span class="line">        result_coeffs = []</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> self_pos &lt;= self.degree <span class="keyword">and</span> other_pos &lt;= other.degree:</span><br><span class="line">            <span class="keyword">if</span> self_degree &gt; other_degree:</span><br><span class="line">                result_coeffs.append(self.coeffs[self_pos])</span><br><span class="line">                self_pos += <span class="number">1</span></span><br><span class="line">                self_degree -= <span class="number">1</span></span><br><span class="line">                    </span><br><span class="line">            <span class="keyword">elif</span> self_degree == other_degree:</span><br><span class="line">                result_coeffs.append(self.coeffs[self_pos] + other.coeffs[other_pos])</span><br><span class="line">                self_pos += <span class="number">1</span></span><br><span class="line">                other_pos += <span class="number">1</span></span><br><span class="line">                self_degree -= <span class="number">1</span></span><br><span class="line">                other_degree -= <span class="number">1</span></span><br><span class="line">                </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result_coeffs.append(self.coeffs[other_pos])</span><br><span class="line">                other_pos += <span class="number">1</span></span><br><span class="line">                other_degree -= <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> Polynomial(result_degree, result_coeffs)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Call the Add Method.</span></span><br><span class="line">p1 = Polynomial(<span class="number">5</span>, [<span class="number">3</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>])</span><br><span class="line">p2 = Polynomial(<span class="number">4</span>, [<span class="number">7</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">1</span>])</span><br><span class="line">print(p1 + p2)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="third-python_poly-unique-name-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Term</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, coef, expon)</span>:</span></span><br><span class="line">        self.coef = coef</span><br><span class="line">        self.expon = expon</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Term_List</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, terms=[])</span>:</span></span><br><span class="line">        self.terms = terms</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__len__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> len(self.terms)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">append</span><span class="params">(self, coef, expon)</span>:</span></span><br><span class="line">        self.terms.append(Term(coef, expon))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_term</span><span class="params">(self, index)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.terms[index]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_coef</span><span class="params">(self, index)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.terms[index].coef</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_expon</span><span class="params">(self, index)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.terms[index].expon</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_polynomial_size</span><span class="params">(self, start)</span>:</span></span><br><span class="line">        curr = self.terms</span><br><span class="line">        <span class="keyword">while</span> curr[start].expon:</span><br><span class="line">            start += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_terms</span><span class="params">(self, term1=<span class="number">0</span>, term2=<span class="number">1</span>)</span>:</span></span><br><span class="line">        std_idx = [<span class="number">0</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> index, term <span class="keyword">in</span> enumerate(self.terms):</span><br><span class="line">            <span class="keyword">if</span> term.expon == <span class="number">0</span>:</span><br><span class="line">                std_idx.append(index+<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        a_start = std_idx[term1]</span><br><span class="line">        b_start = std_idx[term2]</span><br><span class="line">        </span><br><span class="line">        a_end = self.find_polynomial_size(start=a_start)</span><br><span class="line">        b_end = self.find_polynomial_size(start=b_start)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> a_start, a_end, b_start, b_end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_terms</span><span class="params">(self, start=<span class="number">0</span>)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> start:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(start, len(self.terms)):</span><br><span class="line">                print(<span class="string">"&#123;&#125;x^&#123;&#125;"</span>.format(self.terms[i].coef, self.terms[i].expon), end = <span class="string">" + "</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> term <span class="keyword">in</span> self.terms:</span><br><span class="line">                print(<span class="string">"&#123;&#125;x^&#123;&#125;"</span>.format(term.coef, term.expon), end = <span class="string">" + "</span>)</span><br><span class="line">                </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">poly_add</span><span class="params">(self, terms)</span>:</span></span><br><span class="line">        a_start, a_end, b_start, b_end = terms</span><br><span class="line">        c_start = len(self.terms)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> a_start &lt;= a_end <span class="keyword">and</span> b_start &lt;= b_end:</span><br><span class="line">        </span><br><span class="line">            a = self.get_term(a_start)</span><br><span class="line">            b = self.get_term(b_start)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> a.expon &gt; b.expon:</span><br><span class="line">                self.append(a.coef, a.expon)</span><br><span class="line">                a_start += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> a.expon == b.expon:</span><br><span class="line">                tmp_coef = a.coef + b.coef</span><br><span class="line">                <span class="keyword">if</span> tmp_coef:</span><br><span class="line">                    self.append(tmp_coef, a.expon)</span><br><span class="line">               </span><br><span class="line">                a_start += <span class="number">1</span></span><br><span class="line">                b_start += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.append(b.coef, b.expon)</span><br><span class="line">                b_start += <span class="number">1</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">while</span> a_start &lt;= a_end:</span><br><span class="line">            a = self.get_term(a_start)</span><br><span class="line">            self.append(a.coef, a.expon)</span><br><span class="line">            a_start += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> a_start &lt;= a_end:</span><br><span class="line">            b = self.get_term(b_start)</span><br><span class="line">            self.append(b.coef, b.expon)</span><br><span class="line">            b_start += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> c_start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">terms = Term_List()</span><br><span class="line">terms.append(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">terms.append(<span class="number">6</span>, <span class="number">4</span>)</span><br><span class="line">terms.append(<span class="number">10</span>, <span class="number">0</span>)</span><br><span class="line">terms.append(<span class="number">7</span>, <span class="number">4</span>)</span><br><span class="line">terms.append(<span class="number">5</span>, <span class="number">2</span>)</span><br><span class="line">terms.append(<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">terms.append(<span class="number">2</span>, <span class="number">5</span>)</span><br><span class="line">terms.append(<span class="number">10</span>, <span class="number">4</span>)</span><br><span class="line">terms.append(<span class="number">5</span>, <span class="number">3</span>)</span><br><span class="line">terms.append(<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">c_start = terms.poly_add(terms.get_terms(<span class="number">0</span>, <span class="number">2</span>))</span><br><span class="line">terms.print_terms(start = c_start)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="third-python_poly-unique-name-3"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Polynomial</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, *coeffs)</span>:</span></span><br><span class="line">    self.coeffs = coeffs</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Polynomial (*&#123;!r&#125;)"</span>.format(self.coeffs)</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__add__</span><span class="params">(self, other)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> Polynomial(*(x + y <span class="keyword">for</span> x, y <span class="keyword">in</span> zip(self.coeffs, other.coeffs)))</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__sub__</span><span class="params">(self, other)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> Polynomial(*(x - y <span class="keyword">for</span> x, y <span class="keyword">in</span> zip(self.coeffs, other.coeffs)))</span><br><span class="line"></span><br><span class="line">  <span class="comment"># return the degrees</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__len__</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> len(self.coeffs)</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__call__</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">p1 = Polynomial(<span class="number">3</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">p2 = Polynomial(<span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">print(p1)</span><br><span class="line">print(p2)</span><br><span class="line">print(p1 + p2)</span><br><span class="line">print(p1 - p2)</span><br><span class="line">print(len(p1))</span><br></pre></td></tr></table></figure></div></div></div></div></div></div>

<h2 id="자체-참조-구조체"><a href="#자체-참조-구조체" class="headerlink" title="자체 참조 구조체"></a>자체 참조 구조체</h2><p><code>자체 참조 구조체</code>(self-referential structure)는 특별한 구조체로서 구성 요소 중에 자기 자신을 가리키는 포인터가 1개 이상 존재하는 구조체를 말한다.</p>
<p>자체 참조 구조체는 연결 리스트나 트리를 구성할 때 많이 등장한다. 일반적으로 항목의 개수를 미리 예측할 수 없는 경우에 자체 참조 구조체를 정의해 놓고 동적으로 기억장소를 할당받아서 이를 포인터로 연결하여 자료구조를 구성한다.</p>
<p>아래의 ListNode 구조체에서 link 필드가 ListNode를 가리키므로 그 구조체는 자체 참조 구조체이다.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> data[<span class="number">10</span>];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;ListNode;</span><br></pre></td></tr></table></figure>

<h2 id="다양한-포인터"><a href="#다양한-포인터" class="headerlink" title="다양한 포인터"></a>다양한 포인터</h2><p>포인터는 다음과 같이 여러 가지 타입의 대상에 대하여 선언될 수 있다.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span>* p;    <span class="comment">// p는 아무것도 가리키지 않는 포인터</span></span><br><span class="line"><span class="keyword">int</span>* pi;    <span class="comment">// p는 함수 변수를 가리키는 포인터</span></span><br><span class="line"><span class="keyword">float</span>* pi;  <span class="comment">// p는 실수 변수를 가리키는 포인터</span></span><br><span class="line"><span class="keyword">char</span>* pc;   <span class="comment">// p는 문자 변수를 가리키는 포인터</span></span><br><span class="line"><span class="keyword">int</span>** pp;   <span class="comment">// pp는 포인터를 가리키는 포인터</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">test</span>* <span class="title">ps</span>;</span>    <span class="comment">// ps는 구조체를 가리키는 포인터</span></span><br><span class="line"><span class="keyword">void</span> (*f) <span class="keyword">int</span>;  <span class="comment">// f는 매개변수를 갖고 반환 값을 갖지 않는 함수를 가리키는 포인터</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Function Pointer Example</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">foo</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"foo: %d\n"</span>, a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> (*f)(<span class="keyword">int</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//아래 3 코드는 완전히 동일한 표현이다.</span></span><br><span class="line">    f = foo;</span><br><span class="line">    f(<span class="number">10</span>); <span class="comment">//=foo(10)</span></span><br><span class="line">    (*f)(<span class="number">10</span>); <span class="comment">//=f(10)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="배열과-포인터"><a href="#배열과-포인터" class="headerlink" title="배열과 포인터"></a>배열과 포인터</h3><p>함수의 매개변수로 배열이 전달되면 함수 안에서 배열의 내용을 변경할 수 있었다. 배열의 이름이 시작 부분을 가리키는 포인터이기 때문이다.</p>
<div class="note no-icon">
            <p><strong>배열의 이름은 포인터인가요?</strong><br>배열은 배열이고 포인터는 포인터이다. 배열은 배열 형식으로 선언한 변수이며 일정한 공간을 가지고 있지만 포인터는 단지 메모리의 주소를 담는 변수일 뿐이다.</p><p>단, 배열은 수식에서 사용될 때 포인터로 변환된다. 정확하게는 배열이 포인터로 퇴화(Decay)한다고 표현한다.</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> numArr[<span class="number">10</span>] = &#123; <span class="number">0</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> *numPtr;</span><br><span class="line"></span><br><span class="line"><span class="comment">//[]를 사용하면 numArr은 배열의 첫번째 요소를 가리키는 포인터로 변환됨</span></span><br><span class="line">num_arr[<span class="number">3</span>] = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>마찬가지로 배열 이름을 포인터에 할당하는 것도 수식이므로 배열 이름이 포인터로 변환됩니다.</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">num_arr = numArr;<span class="comment">// 수식에서 numArr은 배열의 첫번째 요소를 가리키는 포인터로 변환됨</span></span><br></pre></td></tr></table></figure><p>또한 C++의 참조의 경우는 같은 메모리의 이름을 하나 더 부여하여 메모리에 접근하는 방식이기 때문에 타입을 그대로 가져올 수 있다고 한다. 배열이 부식(decay)되지 않는다는 뜻이다.</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;typeinfo&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span> &#125;;</span><br><span class="line">    <span class="keyword">int</span> (&amp;refArr)[<span class="number">4</span>] = arr;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="keyword">typeid</span>(arr).name() &lt;&lt; <span class="built_in">endl</span>;     <span class="comment">// int [4]</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="keyword">typeid</span>(refArr).name() &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">//int [4]</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>배열과 포인터에 관한 자세한 내용의 참조는 아래의 사이트들을 추천한다. 나중에 정리하여 업로드 예정</p><ul><li><a href="http://cinsk.github.io//cfaqs/html/node8.html" target="_blank" rel="noopener">C Programing FAQs - 6. Arrays and Pointers</a></li><li><a href="https://stackoverflow.com/questions/39021998/is-there-a-reason-why-an-array-name-is-not-an-lvalue" target="_blank" rel="noopener">Stack Overflow - Is there a reason why an array name is not an lvalue?</a></li><li><a href="https://stackoverflow.com/questions/1641957/is-an-array-name-a-pointer" target="_blank" rel="noopener">Stack Overflow - Is an array name a pointer?</a></li></ul>
          </div>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Data Structure</category>
      </categories>
      <tags>
        <tag>Data Structure</tag>
      </tags>
  </entry>
  <entry>
    <title>Loops and Files [2/2]</title>
    <url>/2020/03/31/2020-03-31-csci259-lec5-2/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Exercises-for-Nested-Loops"><a href="#Exercises-for-Nested-Loops" class="headerlink" title="Exercises for Nested Loops"></a>Exercises for Nested Loops</h2><div class="tabs" id="third-ex1-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#third-ex1-unique-name-1">Problem</a></li><li class="tab"><a href="#third-ex1-unique-name-2">Answer</a></li><li class="tab"><a href="#third-ex1-unique-name-3">Result</a></li></ul><div class="tab-content"><div class="tab-pane active" id="third-ex1-unique-name-1"><h3 id="Diamond"><a href="#Diamond" class="headerlink" title="Diamond"></a>Diamond</h3><p>Write a nested for-loop to print out the following:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">     *</span><br><span class="line">    ***</span><br><span class="line">   *****</span><br><span class="line">  *******</span><br><span class="line"> *********</span><br><span class="line">***********</span><br><span class="line"> *********</span><br><span class="line">  *******</span><br><span class="line">   *****</span><br><span class="line">    ***</span><br><span class="line">     *</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="third-ex1-unique-name-2"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ROW_SIZE =  <span class="number">6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> DIA_ROWSIZ = (<span class="number">2</span> * ROW_SIZE - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = DIA_ROWSIZ; i &gt;= -DIA_ROWSIZ; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="built_in">abs</span>(i); j++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span> * (DIA_ROWSIZ - <span class="built_in">abs</span>(i)) + <span class="number">1</span>; j++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">'*'</span>;</span><br><span class="line">    </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="third-ex1-unique-name-3"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">     *</span><br><span class="line">    ***</span><br><span class="line">   *****</span><br><span class="line">  *******</span><br><span class="line"> *********</span><br><span class="line">***********</span><br><span class="line"> *********</span><br><span class="line">  *******</span><br><span class="line">   *****</span><br><span class="line">    ***</span><br><span class="line">     *</span><br></pre></td></tr></table></figure></div></div></div>

<div class="tabs" id="third-ex2-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#third-ex2-unique-name-1">Problem</a></li><li class="tab"><a href="#third-ex2-unique-name-2">Answer</a></li><li class="tab"><a href="#third-ex2-unique-name-3">Result</a></li></ul><div class="tab-content"><div class="tab-pane active" id="third-ex2-unique-name-1"><h3 id="Finding-out-whether-a-word-is-a-palindrome"><a href="#Finding-out-whether-a-word-is-a-palindrome" class="headerlink" title="Finding out whether a word is a palindrome"></a>Finding out whether a word is a palindrome</h3><p>Write a program that prompts the user to enter a word and decide whether that word is a palindrome</p></div><div class="tab-pane" id="third-ex2-unique-name-2"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> word;</span><br><span class="line">    <span class="keyword">size_t</span> i, length;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter the string: "</span>;</span><br><span class="line">    getline(<span class="built_in">cin</span>, word);</span><br><span class="line">    </span><br><span class="line">    length = word.length();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length/<span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (word[i] != word[length - i - <span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (flag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"palindrome\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Not palindrome\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="third-ex2-unique-name-3"><p>Enter the string: racecar<br>palindrome</p></div></div></div>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 259</category>
      </categories>
      <tags>
        <tag>CSCI 259</tag>
      </tags>
  </entry>
  <entry>
    <title>Making Decisions</title>
    <url>/2020/03/31/2020-03-31-csci259-lec4/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Common-Errors"><a href="#Common-Errors" class="headerlink" title="Common Errors"></a>Common Errors</h2><p>Adding a semicolon at the end of an <code>if</code> clause is a common mistake.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (radius &gt;= <span class="number">0</span>);</span><br><span class="line">&#123;</span><br><span class="line">    area = radius*radius*PI;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"The area is "</span> &lt;&lt; area;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>This mistake is hard to find, because it is not a compilation error or a runtime error, it is a logic error.</li>
<li>This error often occurs when you use the next-line block style.</li>
</ul>
<h2 id="TIP-for-Coding"><a href="#TIP-for-Coding" class="headerlink" title="TIP for Coding"></a>TIP for Coding</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (number % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">    even = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    even = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//is equal to</span></span><br><span class="line"><span class="keyword">bool</span> even = number % <span class="number">2</span> == <span class="number">0</span></span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (even == <span class="literal">true</span>)</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; “It is even”;</span><br><span class="line"></span><br><span class="line"><span class="comment">//is equal to</span></span><br><span class="line"><span class="keyword">if</span> (even)</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; “It is even”;</span><br></pre></td></tr></table></figure>

<h2 id="Generating-Random-Numbers"><a href="#Generating-Random-Numbers" class="headerlink" title="Generating Random Numbers"></a>Generating Random Numbers</h2><p>In general, to generate an integer from a to b:</p>
<p>$$ a + rand() \% (b – a + 1) $$</p>
<ul>
<li>Requires <code>cstdlib</code> header file</li>
<li>Generate random numbers within a range <code>rand()</code></li>
</ul>
<table>
<thead>
<tr>
<th>Range</th>
<th>Expression</th>
</tr>
</thead>
<tbody><tr>
<td>A random integer between 0-9</td>
<td>$rand() \% 10$</td>
</tr>
<tr>
<td>A random integer between 50-99</td>
<td>$50 + rand() \% 50$</td>
</tr>
<tr>
<td>A random integer between 5-25</td>
<td>$5 + rand() \% 21$</td>
</tr>
</tbody></table>
<h2 id="Programs"><a href="#Programs" class="headerlink" title="Programs"></a>Programs</h2><div class="tabs" id="third-problem1-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#third-problem1-unique-name-1">Problem</a></li><li class="tab"><a href="#third-problem1-unique-name-2">Answer</a></li><li class="tab"><a href="#third-problem1-unique-name-3">Result</a></li></ul><div class="tab-content"><div class="tab-pane active" id="third-problem1-unique-name-1"><h3 id="A-Simple-Math-Learning-Tool"><a href="#A-Simple-Math-Learning-Tool" class="headerlink" title="A Simple Math Learning Tool"></a>A Simple Math Learning Tool</h3><p>This example creates a program to let a first grader practice additions.</p>
<ul>
<li>The program randomly generates two single-digit integers number1 and number2 and displays a question such as “What is 7 + 9?” to the student.</li>
<li>After the student types the answer, the program displays a message to indicate whether the answer is true or false.</li>
</ul></div><div class="tab-pane" id="third-problem1-unique-name-2"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand(time(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num1, num2;</span><br><span class="line">    <span class="keyword">int</span> guess;</span><br><span class="line"></span><br><span class="line">    num1 = <span class="number">1</span> + rand() % <span class="number">10</span>;</span><br><span class="line">    num2 = <span class="number">1</span> + rand() % <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"What is "</span> &lt;&lt; num1 &lt;&lt; <span class="string">" + "</span> &lt;&lt; num2 &lt;&lt; <span class="string">"?\n"</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; guess;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (guess == num1 + num2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Correct!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Incorrect!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="third-problem1-unique-name-3"><p>What is 3 + 10?<br>13<br>Correct!</p></div></div></div>

<div class="tabs" id="third-problem2-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#third-problem2-unique-name-1">Problem</a></li><li class="tab"><a href="#third-problem2-unique-name-2">Answer</a></li><li class="tab"><a href="#third-problem2-unique-name-3">Result</a></li></ul><div class="tab-content"><div class="tab-pane active" id="third-problem2-unique-name-1"><h3 id="An-Improved-Math-Learning-Tool"><a href="#An-Improved-Math-Learning-Tool" class="headerlink" title="An Improved Math Learning Tool"></a>An Improved Math Learning Tool</h3><p>This example creates a program to teach a first grade child how to learn subtractions.</p>
<ul>
<li>The program randomly generates two single-digit integers number1 and number2 with <strong>number1 &gt;= number2</strong> and displays a<br>question such as “What is 9 – 2?” to the student.</li>
<li>After the student types the answer, the program displays whether the answer is correct.</li>
</ul></div><div class="tab-pane" id="third-problem2-unique-name-2"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand(time(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num1, num2;</span><br><span class="line">    <span class="keyword">int</span> guess;</span><br><span class="line"></span><br><span class="line">    num1 = <span class="number">1</span> + rand() % <span class="number">10</span>;</span><br><span class="line">    num2 = <span class="number">1</span> + rand() % <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (num1 &lt; num2)</span><br><span class="line">    &#123;</span><br><span class="line">        num1 = <span class="number">1</span> + rand() % <span class="number">10</span>;</span><br><span class="line">        num2 = <span class="number">1</span> + rand() % <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"What is "</span> &lt;&lt; num1 &lt;&lt; <span class="string">" - "</span> &lt;&lt; num2 &lt;&lt; <span class="string">"?\n"</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; guess;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (guess == num1 - num2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Correct!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Incorrect!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="third-problem2-unique-name-3"><p>What is 9 - 3?<br>6<br>Correct!</p></div></div></div>

<div class="tabs" id="third-problem3-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#third-problem3-unique-name-1">Problem</a></li><li class="tab"><a href="#third-problem3-unique-name-2">Answer</a></li><li class="tab"><a href="#third-problem3-unique-name-3">Result</a></li></ul><div class="tab-content"><div class="tab-pane active" id="third-problem3-unique-name-1"><h3 id="Body-Mass-Index"><a href="#Body-Mass-Index" class="headerlink" title="Body Mass Index"></a>Body Mass Index</h3><p>Body Mass Index (BMI) is a measure of health on weight.</p>
<ul>
<li>It can be calculated by taking your <span class="label warning">weight in kilograms</span> and <strong>dividing by</strong> the square of your <span class="label warning">height in meters</span>.</li>
<li>The interpretation of BMI for people 16 years or older is as follows.</li>
<li>Write a program that reads in a person’s <strong>weight in pounds</strong> and <strong>height in inches</strong> and displays the BMI and its interpretation.</li>
<li>You need to convert to kgs and meters to use the formula above.</li>
</ul>
<div class="note no-icon">
            <p>$$1 pound = 0.454 kgs$$<br>$$1 inch = 0.0254meters$$</p>
          </div>

<table>
<thead>
<tr>
<th align="left">BMI</th>
<th align="left">Interpretation</th>
</tr>
</thead>
<tbody><tr>
<td align="left">$BMI \lt 18.5$</td>
<td align="left">Underweight</td>
</tr>
<tr>
<td align="left">$18.5 \le BMI \lt 25.0$</td>
<td align="left">Normal</td>
</tr>
<tr>
<td align="left">$25.0 \le BMI \lt 30.0$</td>
<td align="left">Overweight</td>
</tr>
<tr>
<td align="left">$30.0 \le BMI$</td>
<td align="left">Obese</td>
</tr>
</tbody></table></div><div class="tab-pane" id="third-problem3-unique-name-2"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> weight, height;</span><br><span class="line">    <span class="keyword">double</span> bmi;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter your weight in pounds: "</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; weight;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter your height in inches: "</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; height;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Because we reads weight in pound and height in meters.</span></span><br><span class="line">    weight *= <span class="number">0.454</span>;</span><br><span class="line">    height *= <span class="number">0.0254</span>;</span><br><span class="line"></span><br><span class="line">    bmi = weight / <span class="built_in">pow</span>(height, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"BMI: "</span> &lt;&lt; bmi &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (bmi &lt; <span class="number">18.5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Underweight\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (bmi &gt;= <span class="number">18.5</span> <span class="keyword">and</span> bmi &lt;= <span class="number">25.0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Normal\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (bmi &gt;= <span class="number">25.0</span> <span class="keyword">and</span> bmi &lt;= <span class="number">30.0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Overweight\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Obese\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="third-problem3-unique-name-3"><p>Enter your weight in pounds: 141<br>Enter your height in inches: 68<br>BMI: 21.458<br>Normal</p></div></div></div>

<div class="tabs" id="third-problem4-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#third-problem4-unique-name-1">Problem</a></li><li class="tab"><a href="#third-problem4-unique-name-2">Answer</a></li><li class="tab"><a href="#third-problem4-unique-name-3">Result</a></li></ul><div class="tab-content"><div class="tab-pane active" id="third-problem4-unique-name-1"><h3 id="Determining-Leap-Year"><a href="#Determining-Leap-Year" class="headerlink" title="Determining Leap Year"></a>Determining Leap Year</h3><p>This program first prompts the user to enter a year as an int value and checks if it is a leap year. A year is a leap year if it <code>is divisible by 4</code> but <code>not by 100</code>, or it is divisible by 400.</p></div><div class="tab-pane" id="third-problem4-unique-name-2"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter a year: "</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; year;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((year % <span class="number">4</span>  == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || year % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Leap Year"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Not Leap Year"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="third-problem4-unique-name-3"><p>Enter a year: 2020<br>Leap Year</p></div></div></div>

<h2 id="Relational-Operators-to-Compare-Characters"><a href="#Relational-Operators-to-Compare-Characters" class="headerlink" title="Relational Operators to Compare Characters"></a>Relational Operators to Compare Characters</h2><p>Characters are compared using their ASCII values</p>
<ul>
<li><code>&#39;A&#39; &lt; &#39;B&#39;</code>:<ul>
<li>The ASCII value of ‘A’ (65) is less than the ASCII value of ‘B’(66)</li>
</ul>
</li>
<li><code>&#39;1&#39; &lt; &#39;2&#39;</code>:<ul>
<li>The ASCII value of ‘1’ (49) is less than the ASCI value of ‘2’ (50)</li>
</ul>
</li>
<li>Lowercase letters have higher ASCII codes than uppercase letters, so ‘z’ &gt; ‘Z’</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Get a character from the user</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter  a digit or a letter: "</span>;</span><br><span class="line">ch = <span class="built_in">cin</span>.get();</span><br><span class="line"></span><br><span class="line"><span class="comment">//Determine what the user entered.</span></span><br><span class="line"><span class="keyword">if</span> (ch &gt;= <span class="string">'0'</span> &amp;&amp; ch &lt;= <span class="string">'9'</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"You entered a digit.\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch &gt;= <span class="string">'A'</span> &amp;&amp; ch &lt;= <span class="string">'Z'</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"You entered a uppercase letter.\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch &gt;= <span class="string">'a'</span> &amp;&amp; ch &lt;= <span class="string">'z'</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"You entered a lowercase letter.\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"That is not a digit or a letter.\n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Conditional-Expressions"><a href="#Conditional-Expressions" class="headerlink" title="Conditional Expressions"></a>Conditional Expressions</h2><p>General form for conditional expression:</p>
<p>$$<br>(boolean-expression) ? expression1 : expression2<br>$$</p>
<p>Also, it’s called “Ternary operator”.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">0</span>)</span><br><span class="line">    y = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    y = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// is equal to</span></span><br><span class="line">y = (x &gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">-1</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Conditional-Operator"><a href="#Conditional-Operator" class="headerlink" title="Conditional Operator"></a>Conditional Operator</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (num % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="string">" is even\n"</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="string">" is odd\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// is equal to</span></span><br><span class="line">(num % <span class="number">2</span> == <span class="number">0</span>) ? <span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="string">" is even\n"</span> :</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="string">" is odd\n"</span>;</span><br></pre></td></tr></table></figure>

<h2 id="연산자-우선-순위"><a href="#연산자-우선-순위" class="headerlink" title="연산자 우선 순위"></a>연산자 우선 순위</h2><ol>
<li>var++, var–</li>
<li>+, - (Unary plus and minus), ++var,–var</li>
<li>(type) Casting</li>
<li>! (Not)</li>
<li>*, /, % (Multiplication, division, and remainder)</li>
<li>+, - (Binary addition and subtraction)</li>
<li>&lt;, &lt;=, &gt;, &gt;= (Relational operators)</li>
<li>==, != (Equality)</li>
<li>&amp;&amp; (Conditional AND) Short-circuit AND</li>
<li>|| (Conditional OR) Short-circuit OR</li>
<li>=, +=, -=, *=, /=, %= (Assignment operators)</li>
</ol>
<h2 id="연산자-우선-순위-및-연관성"><a href="#연산자-우선-순위-및-연관성" class="headerlink" title="연산자 우선 순위 및 연관성"></a>연산자 우선 순위 및 연관성</h2><ul>
<li>괄호 안의 식을 먼저 평가한다. (가령 괄호는 내포할 수 있으며, 이 경우 내부 괄호 안의 식을 먼저 실행한다.)</li>
<li>괄호가 없는 식을 평가할 때 연산자는 연산자 우선 순위와 연관성 규칙에 따라 적용된다.</li>
<li>만약 동일한 우선순위를 가진 연산자가 서로 옆에 있다면, 그들의 연관성은 평가 순서를 결정한다.</li>
<li>할당 연산자를 제외한 모든 이진 연산자는 좌분산(⇒)이다.</li>
</ul>
<h3 id="Operator-Associativity"><a href="#Operator-Associativity" class="headerlink" title="Operator Associativity"></a>Operator Associativity</h3><p><code>a – b + c – d</code> is equivalent to<br>$$<br>((a – b) + c) – d<br>$$</p>
<p>Assignment operators are <code>right-associative</code>. Therefore, the expression<br>$$<br>((a – b) + c) – d \text{ is equivalent to}<br>$$<br>$$<br>a = (b += (c = 5))<br>$$</p>
<h2 id="Debugging"><a href="#Debugging" class="headerlink" title="Debugging"></a>Debugging</h2><p>Programming errors are called <code>bugs</code>. The process of finding and correcting errors is called <code>debugging</code>.</p>
<p>A common approach to debugging is to use a combination of methods to narrow down to the part of the program where the bug is located.</p>
<ul>
<li>You can <strong><code>hand-trace</code></strong> the program (i.e., catch errors by reading the program)</li>
<li>Or, you can insert <strong><code>print statements</code></strong> in order to show the values of the variables or the execution flow of the program. This approach might work for a short, simple program.</li>
<li>But for a large, complex program, the most effective approach for debugging is to use a <strong><code>debugger utility</code></strong>.</li>
</ul>
<h2 id="Case-Study"><a href="#Case-Study" class="headerlink" title="Case Study"></a>Case Study</h2><div class="tabs" id="third-case1-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#third-case1-unique-name-1">Problem</a></li><li class="tab"><a href="#third-case1-unique-name-2">Answer</a></li><li class="tab"><a href="#third-case1-unique-name-3">Result</a></li></ul><div class="tab-content"><div class="tab-pane active" id="third-case1-unique-name-1"><h3 id="Student-Major-and-Status"><a href="#Student-Major-and-Status" class="headerlink" title="Student Major and Status"></a>Student Major and Status</h3><p>Write a program that prompts the user to enter two characters and displays the major and status represented in the characters.</p>
<ul>
<li>The first character indicates the major and the second is number character 1, 2, 3, 4, which indicates whether a students is a freshman, sophomore, junior, or senior.</li>
<li>Suppose the following characters are used to denote the majors:<ul>
<li>M: Mathematics</li>
<li>C: Computer Science</li>
<li>I: Information Technology</li>
</ul>
</li>
</ul>
<p>Sample Output</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Enter two characters: M1</span><br><span class="line">Mathematics Freshman</span><br><span class="line">&gt;&gt;</span><br><span class="line">Enter two characters: C3</span><br><span class="line">Computer Science Junior</span><br><span class="line">&gt;&gt;</span><br><span class="line">Enter two characters: T3</span><br><span class="line">Invalid input</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="third-case1-unique-name-2"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> major;</span><br><span class="line">    <span class="keyword">char</span> number;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter two characters: "</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; major &gt;&gt; number;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ((major == <span class="string">'M'</span> || major == <span class="string">'C'</span> || major == <span class="string">'I'</span>) &amp;&amp; (number &gt;= <span class="string">'1'</span> &amp;&amp; number &lt;= <span class="string">'4'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (major)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'M'</span>:</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"Mathematics "</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'C'</span>:</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"Computer Science "</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'I'</span>:</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"Information Technology "</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (number)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"Freshman\n"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"Sophomore\n"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'3'</span>:</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"Junior\n"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'4'</span>:</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"Senior\n"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Invaild Input\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="third-case1-unique-name-3"><p>Enter two characters: C3<br>Computer Science Junior</p></div></div></div>

<div class="tabs" id="fourth-case2-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fourth-case2-unique-name-1">Problem</a></li><li class="tab"><a href="#fourth-case2-unique-name-2">Answer1</a></li><li class="tab"><a href="#fourth-case2-unique-name-3">Answer2</a></li><li class="tab"><a href="#fourth-case2-unique-name-4">Result</a></li></ul><div class="tab-content"><div class="tab-pane active" id="fourth-case2-unique-name-1"><h3 id="Converting-a-Hexadecimal-Digit-to-a-Decimal-Value"><a href="#Converting-a-Hexadecimal-Digit-to-a-Decimal-Value" class="headerlink" title="Converting a Hexadecimal Digit to a Decimal Value"></a>Converting a Hexadecimal Digit to a Decimal Value</h3><p>Write a program that converts a hexadecimal digit into a decimal value.</p></div><div class="tab-pane" id="fourth-case2-unique-name-2"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> hexa_decimal;</span><br><span class="line">    <span class="keyword">int</span> decimal = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> base = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter the Hexadecimal digits: "</span>;</span><br><span class="line">    getline(<span class="built_in">cin</span>, hexa_decimal);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = hexa_decimal.length()<span class="number">-1</span>; i &gt;= <span class="number">0</span> ; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isdigit</span>(hexa_decimal[i]))</span><br><span class="line">        &#123;</span><br><span class="line">            decimal += (hexa_decimal[i] - <span class="number">48</span>)*base;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">islower</span>(hexa_decimal[i]))</span><br><span class="line">        &#123;</span><br><span class="line">            decimal += (hexa_decimal[i] - <span class="number">87</span>)*base;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            decimal += (hexa_decimal[i] - <span class="number">55</span>)*base;</span><br><span class="line">        &#125;</span><br><span class="line">        base *= <span class="number">16</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Result: "</span> &lt;&lt; decimal &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="fourth-case2-unique-name-3"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nums;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter the Hexadecimal digits: "</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; <span class="built_in">std</span>::hex &gt;&gt; nums;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Result: "</span> &lt;&lt; nums;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="fourth-case2-unique-name-4"><p>Enter the Hexadecimal digits: FF<br>Result: 255</p></div></div></div>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 259</category>
      </categories>
      <tags>
        <tag>CSCI 259</tag>
      </tags>
  </entry>
  <entry>
    <title>Loop and Files [1/2]</title>
    <url>/2020/03/30/2020-03-30-csci259-lec5/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Ending-a-Loop-with-a-Sentinel-Value"><a href="#Ending-a-Loop-with-a-Sentinel-Value" class="headerlink" title="Ending a Loop with a Sentinel Value"></a>Ending a Loop with a Sentinel Value</h2><ul>
<li>Often the number of times a loop is executed is <span class="label warning">not</span> predetermined.</li>
<li>You may user an input value to signify the end of the loop.</li>
<li>Such a value is known as a <strong><em>sentinel value</em></strong>.</li>
</ul>
<h2 id="Caution"><a href="#Caution" class="headerlink" title="Caution"></a>Caution</h2><p><code>Infinite loop</code>, what is wrong with the following?</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>, i = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (i &lt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">    sum += i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>There is no increase operator about <code>i</code> value. so, it loops infinitely.</li>
<li>If you have an infinite loop, press <em>Ctrl + C</em> to stop it.</li>
</ul>
<p><code>Off-by-one error</code>, how many times the strig display?</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (count &lt;= <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Welcomde to C++\n"</span>;</span><br><span class="line">    count++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>String display <strong>Six</strong> times. Because count increase 0 to 5.</li>
</ul>
<h3 id="Effect-of-semicolon-after-‘for’-loop"><a href="#Effect-of-semicolon-after-‘for’-loop" class="headerlink" title="Effect of semicolon after ‘for’ loop"></a>Effect of semicolon after ‘for’ loop</h3><p>This mistake is hard to find, because it is not a compilation error or a runtime error, it is a <code>logic error</code>.</p>
<p>In <a href="https://stackoverflow.com/questions/13421395/effect-of-semicolon-after-for-loop" target="_blank" rel="noopener">Stackoverflow</a>,</p>
<div class="note ">
            <p>Semicolon is a legitimate statement called null statement * that means “do nothing”. Since the <code>for</code> loop executes a single operation (which could be a block enclosed in <code>{}</code>) semicolon is treated as the body of the loop, resulting in the behavior that you observed.</p><p>The following code</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++);</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"hello\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>is interpreted as follows:<ul><li>Repeat five times <code>for (i=0;i&lt;5;i++)</code></li><li>… do nothing (semicolon)</li><li>Open a new scope for local variables <code>{</code></li><li>… Print “hello”</li><li>Close the scope <code>}</code></li></ul><p>As you can see, the operation that gets repeated is <code>;</code>, not the <code>printf</code>.</p>
          </div>

<h2 id="Which-Loop-to-Use"><a href="#Which-Loop-to-Use" class="headerlink" title="Which Loop to Use"></a>Which Loop to Use</h2><p>A <strong>do-while</strong> loop can be used to replace a while loop if the loop body has to be executed before testing the continuation condition. (<strong>Executes the loop body first</strong>, and then checks the loop continuation condition.)</p>
<table>
<thead>
<tr>
<th>Loop</th>
<th>Name</th>
<th>Used</th>
</tr>
</thead>
<tbody><tr>
<td>For</td>
<td><strong><code>count-controlled loop</code></strong></td>
<td>if the number of repetitions is known.</td>
</tr>
<tr>
<td>While</td>
<td><strong><code>event-controlled loop</code></strong></td>
<td>if the number of repetition is not known.</td>
</tr>
</tbody></table>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><div class="tabs" id="second-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#second-unique-name-1">While loop</a></li><li class="tab"><a href="#second-unique-name-2">Do-while loop</a></li></ul><div class="tab-content"><div class="tab-pane active" id="second-unique-name-1"><p><strong>While loop</strong>, what is the output?</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> fac = <span class="number">1</span>, counter = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (counter &gt; <span class="number">6</span>)</span><br><span class="line">&#123;</span><br><span class="line">    fac *= counter;</span><br><span class="line">    counter--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; fac &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>While 문은 Condition이 True 일때만 statement를 실행하므로 while문은 실행되지 않고 fac는 1을 출력한다.</li>
</ul></div><div class="tab-pane" id="second-unique-name-2"><p><strong>Do-while loop</strong>, what is the output?</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> fac = <span class="number">1</span>, counter = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    fac *= counter;</span><br><span class="line">    counter--;</span><br><span class="line">&#125;<span class="keyword">while</span>(counter &gt; <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; fac &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>Do-while문은 statement를 한번 실행된 이후 condition을 검사하므로 위의 코드에서는 do-while문의 statement를 한번 실행하고 나서 후 루프를 벗어나게 된다.</li>
<li>따라서 fac는 5가 출력된다.</li>
</ul></div></div></div>

<h2 id="Using-break-and-continue"><a href="#Using-break-and-continue" class="headerlink" title="Using break and continue"></a>Using break and continue</h2><ul>
<li>The <strong>break</strong> keyword breaks out of a <strong>loop</strong> entirely.</li>
<li>The <strong>continue</strong> keyword breaks out of an <strong>iteration</strong> (one-time execution of the loop body).</li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 259</category>
      </categories>
      <tags>
        <tag>CSCI 259</tag>
      </tags>
  </entry>
  <entry>
    <title>Image Analysis</title>
    <url>/2020/03/17/2020-03-17-csci343-challenge3/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Objectives"><a href="#Objectives" class="headerlink" title="Objectives"></a>Objectives</h2><ul>
<li>Perform basic image analysis</li>
<li>Use NumPy for data conversion</li>
</ul>
<h2 id="Assignment"><a href="#Assignment" class="headerlink" title="Assignment"></a>Assignment</h2><p>당신은 대학교를 졸업한 이후 이탈리아 보안 감시 회사인 Surveilco에 데이터 과학자로 고용되어 일하고 있습니다. 회사는 기본적인 이미지 분석을 통해 보안 제품 개선을 꾀하고 있는 것 같습니다. 최근에 UM을 졸업한 당신에게 그들은 당신이 그 일에 가장 적합한 데이터 과학자 중 한 명이라는 것을 알고 있는 것 같군요.</p>
<p>회사의 비디오 시스템은 네트워크 연결을 통해 일련의 JPEG 이미지를 제공하고 있습니다. 회사는 당신에게 일을 시작하기 위한 샘플 데이터 세트를 제공하였습니다. 데이터 세트는 실제 소스에서 캡처한 200개의 JPEG 형식의 이미지로 구성되어 있습니다. 불행히도 카메라를 위해 코드를 작성한 네트워크 프로그래머들은 당신만큼 능숙하지 않은 것 같군요. 그 결과 약 5%의 이미지가 손상되어 사용할 수 없게 되었습니다…</p>
<p>코드 작성을 시작하기 전에 데이터 세트에서 이러한 손상된 이미지를 제거해야 할 것 같군요. (시작하기 전에 실제로 데이터를 살펴봐야 합니다.)이는 당신이 직접 찾아서 제거하거나 프로그램을 작성하여 제거 할 수 있습니다. 어쨌든, 이런 손상된 이미지들을 제거해야 하는 것은 명백합니다.</p>
<p>수업시간에 우리는 디지털 이미지는 사실 숫자 배열의 한 종류라는 것을 관찰했습니다. 이를 통해 우리는 이미지에 대해 수학적 연산을 수행할 수 있다고 추론할 수 있겠군요? 사실 우리는 할 수 있습니다! 수업시간에, 우리는 평균 영상과 차이가 나는 영상을 계산하는 예제를 살펴보았습니다.</p>
<p>이 과제에서, 당신은 평균 영상과 표준 편차 영상을 계산하게 될 것 입니다. 당신의 이미지는 정규적인 수학적 변수와 같이 취급될 수 있으므로, 당신은 당신이 작성한 평균 및 표준 편차 공식에서 그것들을 직접 사용할 수 있어야 함을 명심하십시오.</p>
<h3 id="What-exactly-should-I-do"><a href="#What-exactly-should-I-do" class="headerlink" title="What exactly should I do?"></a>What exactly should I do?</h3><p>당신의 과제는 일련의 영상을 분석하고, 평균 이미지를 계산하고, 표준 편차 이미지를 계산한 다음, 변화 영역이 빨간색으로 강조 표시된 평균 영상을 표시하는 것입니다 (*예시 이미지 아래 첨부)</p>
<!-- <a class="gallery-item"><img class="example ..&#x2F;..&#x2F;..&#x2F;..&#x2F;img&#x2F;csci343-ch3&#x2F;example.jpg 500 500"></a> -->
<p><a href="../../../../img/csci343-ch3/example.jpg" title="example" class="gallery-item"><img src="../../../../img/csci343-ch3/example.jpg" alt="example"></a></p>
<ul>
<li><p>프로그램은 사용자에게 0에서 255 사이의 임의의 값을 입력하도록 요청해야 합니다.(입력이 적절한지 확인하기 위해 프로그램이 확인하십시오).</p>
</li>
<li><p>이 값은 픽셀을 강조 표시하는 데 필요한 최소 표준 편차를 나타냅니다.</p>
</li>
<li><p>강조 표시를 하려면 평균 이미지의 픽셀을 순환하고 해당 픽셀의 색상을 하이라이트 색상으로 변경해야 하지만, <span class="label danger">픽셀의 표준 편차가 임계값보다 높은 경우에만</span> 해당 색상을 변경해야 합니다.</p>
</li>
<li><p>예를 들어, 영상에서 픽셀을 빨간색으로 설정하려면 다음과 같이 작성해야 합니다.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">avg_image[row][column]=[<span class="number">255.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>]</span><br></pre></td></tr></table></figure>
</li>
<li><p>당신은 당신의 소스 코드와 필터링된 이미지 데이터를 제출해야 합니다.</p>
</li>
<li><p>또한 출력 그림의 이미지(MatPlotLib 창에 이 작업을 수행할 버튼이 있음)를 저장하고 코드로 제출하십시오.</p>
</li>
</ul>
<hr>
<h2 id="Composition-of-an-image"><a href="#Composition-of-an-image" class="headerlink" title="Composition of an image"></a>Composition of an image</h2><div class="tabs" id="fourth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fourth-unique-name-1">Introduction</a></li><li class="tab"><a href="#fourth-unique-name-2">Picture</a></li><li class="tab"><a href="#fourth-unique-name-3">Practice</a></li></ul><div class="tab-content"><div class="tab-pane active" id="fourth-unique-name-1"><p>이번 과제에서는 먼저 이미지를 본격적으로 다루기 이전 이미지가 어떻게 이루어져 있는지, 또한 어떻게 다룰 수 있는지를 살펴보자. 먼저 이미지의 구성을 보다 더 쉽게 파악하기 위해 7X7 이미지를 가져 왔다.</p>
<ul>
<li>실제 이미지는 매우 작아 확인하기 어렵기에 아래 그림은 확대시킨 캡쳐본이다.</li>
<li>내모 1칸이 1px이다.</li>
</ul></div><div class="tab-pane" id="fourth-unique-name-2"><p><a href="../../../../img/img_analysis/green.JPG" title="example" class="gallery-item"><img src="../../../../img/img_analysis/green.JPG" alt="example"></a></p></div><div class="tab-pane" id="fourth-unique-name-3"><p>이제 이 이미지를 2차원 배열 형태로 변환시켜보자.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">green = np.array(Image.open(<span class="string">'green.png'</span>))</span><br><span class="line">print(green)</span><br></pre></td></tr></table></figure>

<p>위에서 <code>PIL</code> 모듈 기능을 이용하여 이미지를 열고 <code>numpy</code>를 이용해 이미지를 2차원 배열로 변환시켰다. 2차원 배열의 내용은 아래와 같다.</p>
<figure class="highlight plain"><figcaption><span>results</span></figcaption><table><tr><td class="code"><pre><span class="line">[  [[  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]   --&gt; □□□□□□□</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]]</span><br><span class="line"></span><br><span class="line">   [[  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [ 17 255 119 255]   --&gt; □■■■■■□  </span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]]</span><br><span class="line"></span><br><span class="line">   [[  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]   --&gt; □■□■□■□</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]]</span><br><span class="line"></span><br><span class="line">   [[  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]   --&gt; □■□□□■□</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]]</span><br><span class="line"></span><br><span class="line">   [[  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]   --&gt; □■□■□■□</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]]</span><br><span class="line"></span><br><span class="line">   [[  0   0   0   0]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [ 17 255 119 255]   --&gt; □■■■■■□</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [ 17 255 119 255]</span><br><span class="line">    [  0   0   0   0]]</span><br><span class="line"></span><br><span class="line">   [[  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]   --&gt; □□□□□□□</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]]]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>result</strong></p>
<pre style = "line-height: 1">
[1]: □ □ □ □ □ □ □
[2]: □ <font style="color:#11ff77;">■ ■ ■ ■ ■</font> □
[3]: □ <font style="color:#11ff77;">■</font> □ <font style="color:#11ff77;">■</font> □ <font style="color:#11ff77;">■</font> □
[4]: □ <font style="color:#11ff77;">■</font> □ □ □ <font style="color:#11ff77;">■</font> □
[5]: □ <font style="color:#11ff77;">■</font> □ <font style="color:#11ff77;">■</font> □ <font style="color:#11ff77;">■</font> □
[6]: □ <font style="color:#11ff77;">■ ■ ■ ■ ■</font> □
[7]: □ □ □ □ □ □ □

[□/<font style="color:#11ff77;">■</font> : {w: 1px, h: 1px}]
</pre>

<pre style = "line-height: 0.5">
□□□□□□□
□<font style="color:#11ff77;">■■■■■</font>□
□<font style="color:#11ff77;">■</font>□<font style="color:#11ff77;">■</font>□<font style="color:#11ff77;">■</font>□
□<font style="color:#11ff77;">■</font>□□□<font style="color:#11ff77;">■</font>□
□<font style="color:#11ff77;">■</font>□<font style="color:#11ff77;">■</font>□<font style="color:#11ff77;">■</font>□
□<font style="color:#11ff77;">■■■■■</font>□
□□□□□□□
</pre>

<ul>
<li>즉, 위의 결과와 같이 행 7, 열 7칸으로 이루어진 2차원 배열로 변환된다.</li>
<li>이때 각 행과 열은 이미지 7x7 크기에 따라 행과 열로 그대로 변환된 결과이다.</li>
<li>또한 이를 세부적으로 보자면,</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[  [[  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]   --&gt; □□□□□□□</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]</span><br><span class="line">    [  0   0   0   0]]</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>

<ul>
<li>여기서 제일 안쪽의 리스트들은 □□□□□□□ 에서 □ 한칸, 즉 1개의 픽셀을 가리킨다.</li>
<li>또한 숫자 <code>[0 0 0 0]</code>과 같은 수치는 <strong>RGBA</strong> 를 가리킨다. 따라서 [0 0 0 0]은 <code>RGBA(0,0,0,0)</code> 이다.</li>
<li>RGB는 각각 RED, GREEN, BLUE로 삼원색을 가리키며, A는 <code>Alpha Channel</code>로 색상의 투명도를 나타낸다.</li>
<li>이 속성은 0에 가까워 질수록 점점 투명한 상태로 바뀐다. (min: 0, max: 255)</li>
<li>따라서 위의 경우 완전히 투명한 색이다.</li>
</ul>
<p>따라서 만약 각 픽셀 혹은 한 행, 한 열을 다른 색으로 변경하고 싶다면 이 <strong>RGBA</strong> 를 변경하면 된다. 주의할 점은 <code>.png</code>파일의 경우 RGBA로 나오는 경우도 있지만 jpg나 jpeg 등은 대부분 <strong>RGB</strong> 형식이다.</p>
<div class="tabs" id="second-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#second-unique-name-1">code</a></li><li class="tab"><a href="#second-unique-name-2">result</a></li></ul><div class="tab-content"><div class="tab-pane active" id="second-unique-name-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">green[<span class="number">0</span>][:len(green[<span class="number">0</span>])] = [<span class="number">255.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">255.0</span>] <span class="comment"># Change the one column color to RED</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="second-unique-name-2"><p>□□□□□□□ -&gt; <font style="color:red;">■■■■■■■</font></p></div></div></div></div></div></div>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 343</category>
      </categories>
      <tags>
        <tag>CSCI 343</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Codeblock Test</title>
    <url>/2020/03/02/2020-03-02-codeblock-test/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Tag-Plugins"><a href="#Tag-Plugins" class="headerlink" title="Tag Plugins"></a>Tag Plugins</h2><p>Tag plugins are different from post tags. They are ported from Octopress and provide a useful way for you to quickly add specific content to your posts.</p>
<h3 id="Block-Quote"><a href="#Block-Quote" class="headerlink" title="Block Quote"></a>Block Quote</h3><p>Perfect for adding quotes to your post, with optional author, source and title information.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><p>No arguments. Plain blockquote.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span><br><span class="line">Pellentesque hendrerit lacus ut purus iaculis feugiat.</span><br><span class="line">Sed nec tempor elit, quis aliquam neque.</span><br><span class="line">Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>

<blockquote><p><strong>NOTE</strong><br>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<br>Pellentesque hendrerit lacus ut purus iaculis feugiat.<br>Sed nec tempor elit, quis aliquam neque.<br>Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>
</blockquote>

<hr>
<p><strong>Quote from a book</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class="line">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>

<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>
<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>

<hr>
<p><strong>Quote from Twitter</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote @DevDocs https:&#x2F;&#x2F;twitter.com&#x2F;devdocs&#x2F;status&#x2F;356095192085962752 %&#125;</span><br><span class="line">NEW: DevDocs now comes with syntax highlighting. http:&#x2F;&#x2F;devdocs.io</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>

<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io" target="_blank" rel="noopener">http://devdocs.io</a></p>
<footer><strong>@DevDocs</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752" target="_blank" rel="noopener">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>

<hr>
<p><strong>Quote from an article on the web</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote Seth Godin http:&#x2F;&#x2F;sethgodin.typepad.com&#x2F;seths_blog&#x2F;2009&#x2F;07&#x2F;welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</span><br><span class="line">Every interaction is both precious and an opportunity to delight.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>

<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="noopener">Welcome to Island Marketing</a></cite></footer></blockquote>

<hr>
<h3 id="Code-Block"><a href="#Code-Block" class="headerlink" title="Code Block"></a>Code Block</h3><p>Useful feature for adding code snippets to your post.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock [title] [lang:language] [url] [link text] [additional options] %&#125;</span><br><span class="line">code snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>

<p>Specify additional options in <code>option:value</code> format, e.g. <code>line_number:false first_line:5</code>.</p>
<table>
<thead>
<tr>
<th align="left">Extra Options</th>
<th align="left">Description</th>
<th align="left">Default</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>line number</code></td>
<td align="left">Show line number</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>highlight</code></td>
<td align="left">Enable code highlighting</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>first_line</code></td>
<td align="left">Specify the first line number</td>
<td align="left"><code>1</code></td>
</tr>
<tr>
<td align="left"><code>mark</code></td>
<td align="left">Line highlight specific line(s), each value separated by a comma. Specify number range using a dash Example: mark:1 4-7,10 will mark line 1, 4 to 7 and 10.</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>wrap</code></td>
<td align="left">Wrap the code block in <code>&lt;table&gt;</code></td>
<td align="left"><code>true</code></td>
</tr>
</tbody></table>
<hr>
<h4 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h4><p><strong>A plain code block</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock %&#125;</span><br><span class="line">alert(&#39;Hello World!&#39;);</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><figcaption><span>Hello World!</span></figcaption><table><tr><td class="code"><pre><span class="line">alert(&#39;Hello World!&#39;);</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>Specifying the language</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock lang:objc %&#125;</span><br><span class="line">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight objc"><figcaption><span>Lang: objective C</span></figcaption><table><tr><td class="code"><pre><span class="line">[rectangle setX: <span class="number">10</span> y: <span class="number">10</span> width: <span class="number">20</span> height: <span class="number">20</span>];</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>Adding a caption and a URL</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock _.compact http:&#x2F;&#x2F;underscorejs.org&#x2F;#compact Underscore.js %&#125;</span><br><span class="line">_.compact([0, 1, false, 2, &#39;&#39;, 3]);</span><br><span class="line">&#x3D;&gt; [1, 2, 3]</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><figcaption><span>_.compact</span><a href="http://underscorejs.org/#compact" target="_blank" rel="noopener">Underscore.js</a></figcaption><table><tr><td class="code"><pre><span class="line">_.compact([0, 1, false, 2, &#39;&#39;, 3]);</span><br><span class="line">&#x3D;&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="Backtick-Code-Block"><a href="#Backtick-Code-Block" class="headerlink" title="Backtick Code Block"></a>Backtick Code Block</h3><p>This is identical to using a code block, but instead uses three backticks to delimit the block.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[language] [title] [url] [link text] code snippet</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>Pull Quote</strong><br>To add pull quotes to your posts:</p>
<figure class="highlight plain"><figcaption><span>Pull Quote</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% pullquote [class] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>jsFiddle</strong><br>To embed a jsFiddle snippet:</p>
<figure class="highlight plain"><figcaption><span>jsFiddle</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>Gist</strong><br>To embed a Gist snippet:</p>
<figure class="highlight plain"><figcaption><span>Gist</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>iframe</strong><br>To embed an iframe:</p>
<figure class="highlight plain"><figcaption><span>iframe</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p><strong>Image</strong><br>Inserts an image with specified size.</p>
<figure class="highlight plain"><figcaption><span>image</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% img [class names] &#x2F;path&#x2F;to&#x2F;image [width] [height] &#39;&quot;title text&quot; &quot;alt text&quot;&#39; %&#125;</span><br></pre></td></tr></table></figure>

<p>&nbsp;<br>For Example:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% img thumbnail https:&#x2F;&#x2F;images.pexels.com&#x2F;photos&#x2F;3375997&#x2F;pexels-photo-3375997.jpeg?auto&#x3D;compress</span><br><span class="line">&amp;cs&#x3D;tinysrgb&amp;dpr&#x3D;1&amp;w&#x3D;500 160 200 &#39;&quot;Tokyo, Japen&quot; &quot;Not Available&quot;&#39; %&#125;</span><br></pre></td></tr></table></figure>

<a href="https://images.pexels.com/photos/3375997/pexels-photo-3375997.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500" title="Not Available" class="gallery-item"><img src="https://images.pexels.com/photos/3375997/pexels-photo-3375997.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500" class="thumbnail" width="160" height="200" title="Tokyo, Japen" alt="Not Available"></a>

<hr>
<p><strong>LINK</strong><br>Inserts a link with <code>target = &quot;_blank&quot;</code> attribute</p>
<figure class="highlight plain"><figcaption><span>Link</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="Include-Code"><a href="#Include-Code" class="headerlink" title="Include Code"></a>Include Code</h3><p>Inserts code snippets in <code>source/downloads/code</code> folder. The folder location can be specified through the <code>code_dir</code> option in the config.</p>
<figure class="highlight plain"><figcaption><span>Include Code</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% include_code [title] [lang:language] [from:line] [to:line] path&#x2F;to&#x2F;file %&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Example-2"><a href="#Example-2" class="headerlink" title="Example"></a>Example</h4><p><strong>Embed the whole content of test.js</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include_code lang:javascript test.js %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Embed line 3 only</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include_code lang:javascript from:3 to:3 test.js %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Embed line 5 to 8</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include_code lang:javascript from:5 to:8 test.js %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Embed line 5 to the end of file</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include_code lang:javascript from:5 test.js %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Embed line 1 to 8</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include_code lang:javascript to:8 test.js %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p>Like so, Type the <strong><code>```</code></strong> below the code block</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;&#96;&#96;py Hello world https:&#x2F;&#x2F;github.com&#x2F;r4meau hello_world.py</span><br><span class="line">print &quot;Hello World!&quot;&#96;&#96;&#96; </span><br></pre></td></tr></table></figure>

<figure class="highlight py"><figcaption><span>Hello world</span><a href="https://github.com/r4meau" target="_blank" rel="noopener">hello_world.py</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="string">"Hello World!"</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a>YouTube</h3><p>Inserts a YouTube video.</p>
<figure class="highlight plain"><figcaption><span>YouTube</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% youtube video_id %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Vimeo"><a href="#Vimeo" class="headerlink" title="Vimeo"></a>Vimeo</h3><p>Inserts a responsive or specified size Vimeo video.</p>
<figure class="highlight plain"><figcaption><span>Vimeo</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% vimeo video_id [width] [height] %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Include-Posts"><a href="#Include-Posts" class="headerlink" title="Include Posts"></a>Include Posts</h3><p>Include links to other posts.</p>
<figure class="highlight plain"><figcaption><span>Include Posts</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% post_path filename %&#125;</span><br><span class="line">&#123;% post_link filename [title] [escape] %&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://hexo.io/docs/tag-plugins.html#Code-Block" title="" target="">Tag Plugins</a></li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>TAG-PLUGINS</category>
      </categories>
      <tags>
        <tag>TAG-PLUGINS</tag>
      </tags>
  </entry>
  <entry>
    <title>Sentiment Analysis</title>
    <url>/2020/02/28/2020-02-26-csci343-challenge2/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Objective"><a href="#Objective" class="headerlink" title="Objective"></a>Objective</h2><ul>
<li>Implement basic sentiment analysis</li>
<li>Familiarize yourself with MatPlotLib by visualizing your results</li>
</ul>
<h2 id="Assignment"><a href="#Assignment" class="headerlink" title="Assignment"></a>Assignment</h2><p>당신은 텔레비전 방송국의 시범부와 계약하였습니다. 그들은 무엇이 TV 시리즈를 히트시키거나 빗나가게 하는지를 결정하기 위해 데이터 과학을 사용하는 텔레비전의 최첨단 기술에 관심이 있습니다.</p>
<p><a href="http://www.programmersought.com/images/262/05e075183140efc5c169148cd2abbe5e.png" title="Netflix recommendation system" class="gallery-item"><img src="http://www.programmersought.com/images/262/05e075183140efc5c169148cd2abbe5e.png" alt="Netflix recommendation system"></a></p>
<p>그들은 더 행복하고, 더 긍정적으로 쓰여진 대본이 더 많은 시청자들을 끌어들인다는 가설을 세웠습니다. 데이터 과학자인 당신은 회의적이어서 두 개의 TV 시리즈에 나오는 대본의 평균 감정 점수(average sentiment scores)를 비교함으로써 그들의 가설을 시험하기로 결정했습니다.</p>
<p>한 TV 시리즈는 어느 정도 인기가 있는 수준이었으며(A시리즈) 다른 한 편은 인기가 엄청난 수준이었습니다(B시리즈). 이 데이터를 이용해 그들의 가설을 뒷받침할 수 있는지의 여부를 결정해 봅시다!</p>
<p>당신은 자료의 말뭉치를 제공받았습니다. 구체적으로는 각 TV시리즈의 첫 시즌부터 각 에피소드의 대본을 방송국에서 제공하였습니다. 이 대본들은 시리즈 A의 경우 <code>a##script.txt</code>와 시리즈 B의 경우 <code>b##script.txt</code> 형식의 이름을 가진 텍스트 파일로 주어졌습니다. 당신은 제공된 감정 어휘(sentiment lexicon)를 사용하여 이 대본에 사용된 문구의 정서를 분석해야 합니다.</p>
<h3 id="DATA"><a href="#DATA" class="headerlink" title="DATA"></a>DATA</h3><ol>
<li>데이터는 강의 자료 웹사이트에서 스탠포드 대학의 자연어 처리 그룹에 있는 사람들의 노력에 근거한 감정 어휘(sentiment lexicon)가 제공됩니다.</li>
<li>이 데이터는 첫 번째 열에 단어와 두 번째 열에 그 단어들의 감정 점수( sentiment scores)가  있는 CSV 파일입니다.</li>
<li>감정 점수는 -1.0에서 +1.0 (부정적 감정에서 긍정적 감정까지)까지 입니다..</li>
</ol>
<p><strong>E.g.</strong></p>
<table>
<thead>
<tr>
<th align="left">word</th>
<th align="left">sentiment score (-1.0 ~ 1.0)</th>
</tr>
</thead>
<tbody><tr>
<td align="left">secondly</td>
<td align="left">-0.062</td>
</tr>
<tr>
<td align="left">downvoting</td>
<td align="left">-0.17</td>
</tr>
<tr>
<td align="left">infographics</td>
<td align="left">0.272</td>
</tr>
<tr>
<td align="left">limited</td>
<td align="left">0.068</td>
</tr>
<tr>
<td align="left">child</td>
<td align="left">-0.056</td>
</tr>
<tr>
<td align="left">…</td>
<td align="left">…</td>
</tr>
</tbody></table>
<h3 id="Summary-amp-Tip"><a href="#Summary-amp-Tip" class="headerlink" title="Summary &amp; Tip"></a>Summary &amp; Tip</h3><p>즉 이번 과제는 감정 분석을 이용하여 Challenge 2 데이터 파일을 분석하는 것입니다.</p>
<ol>
<li>당신은 먼저 각 대본에 있는 모든 각 단어들의 목록을 만들고 각각의 단어들이 개수를 세야 할 필요가 있습니다.</li>
<li>감성 어휘를 사용하여, 당신은 그 단어들 중 몇 개가 긍정적이거나 부정적인 감정을 가지고 있는지를 결정할 필요가 있습니다.</li>
<li>일반적으로 중립적인(Neutral) 단어는 극적으로 양극화된 단어보다 훨씬 더 자주 나타납니다.</li>
<li>이와 같이, 이 데이터를 $log_{10}Y$ 축 단위로 시각화하는 것이 최선일 것입니다.</li>
<li>그런 다음 아래와 같은 단어의 수를 나타내는 <code>MatPlotLib</code>를 사용하여 히스토그램을 표시해야 합니다.</li>
</ol>
<table>
<thead>
<tr>
<th>Sentiment</th>
<th>$log$ Word Count</th>
</tr>
</thead>
<tbody><tr>
<td>Negative</td>
<td>$[-1.0, -0.6)$</td>
</tr>
<tr>
<td>Weakly Negative</td>
<td>$[-0.6, -0.2)$</td>
</tr>
<tr>
<td>Neutral</td>
<td>$[-0.2, -0.2]$</td>
</tr>
<tr>
<td>Weakly Positive</td>
<td>$(-0.2, 0.6]$</td>
</tr>
<tr>
<td>Positive</td>
<td>$(0.6, 1.0]$</td>
</tr>
</tbody></table>
<h3 id="NOTE"><a href="#NOTE" class="headerlink" title="NOTE"></a>NOTE</h3><ol>
<li>플롯 형식이 포함된 샘플(시리즈 이름이 포함된 축 레이블(axis labels) 및 제목(d title) 포함)과 일치하는지 확인하십시오.</li>
<li>프로그램 실행 시 표시할 영상 시리즈의 이름을 입력하라는 메시지가 표시되어야 합니다.[^1]</li>
</ol>
<p>[^1]: 아래 그림 참조</p>
<div class="pdf" target="../../../../pdf/Csci343/ch2/Challenge_2.pdf" height=""></div>

<hr>
<h2 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h2><p>I solved the challenge mainly using the <code>pandas</code>, <code>numpy</code>, <code>re</code>.</p>
<div class="tabs" id="fourth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fourth-unique-name-1">Modules</a></li><li class="tab"><a href="#fourth-unique-name-2">How to solve Problem?</a></li><li class="tab"><a href="#fourth-unique-name-3">Source Code</a></li></ul><div class="tab-content"><div class="tab-pane active" id="fourth-unique-name-1"><p><strong>Module</strong></p>
<ul>
<li><p><code>collections.Counter</code>: use for make the dicts for word count.</p>
 <div class="note ">
          <p> <strong>class</strong> collections.<strong>Counter</strong>([iterable-or-mapping]) <a href="https://docs.python.org/3/library/collections.html#collections.Counter" target="_blank" rel="noopener">¶</a></p><p>A Counter is a dict subclass for counting hashable objects. It is a collection where elements are stored as dictionary keys and their counts are stored as dictionary values. Counts are allowed to be any integer value including zero or negative counts. The Counter class is similar to bags or multisets in other languages.</p><p>Elements are counted from an iterable or initialized from another mapping (or counter):</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c = Counter()                           <span class="comment"># a new, empty counter</span></span><br><span class="line">c = Counter(<span class="string">'gallahad'</span>)                 <span class="comment"># a new counter from an iterable</span></span><br><span class="line">c = Counter(&#123;<span class="string">'red'</span>: <span class="number">4</span>, <span class="string">'blue'</span>: <span class="number">2</span>&#125;)      <span class="comment"># a new counter from a mapping</span></span><br><span class="line">c = Counter(cats=<span class="number">4</span>, dogs=<span class="number">8</span>)             <span class="comment"># a new counter from keyword args</span></span><br></pre></td></tr></table></figure>
        </div></li>
<li><p><code>numpy</code>: To visualize the data on a $log_{10}Y$ axis scale.</p>
</li>
<li><p><code>os.listdir(path)</code><br>os.listdir() method in python is used to get the list of all files and directories in the specified directory. If we don’t specify any directory, then list of files and directories in the current working directory will be returned.</p>
<div class="note info no-icon">
          <p><a href="https://www.geeksforgeeks.org/python-os-listdir-method/" target="_blank" rel="noopener">Python | os.listdir() method</a></p>
        </div>
</li>
<li><p><code>re</code><br>This module provides regular expression matching operations similar to those found in Perl.</p>
<p>Both patterns and strings to be searched can be Unicode strings (str) as well as 8-bit strings (bytes). However, Unicode strings and 8-bit strings cannot be mixed: that is, you cannot match a Unicode string with a byte pattern or vice-versa; similarly, when asking for a substitution, the replacement string must be of the same type as both the pattern and the search string.</p>
<div class="note ">
          <p>re.<strong>findall</strong>(pattern, string, flags=0) <a href="https://docs.python.org/3/library/re.html#re.findall" target="_blank" rel="noopener">¶</a></p><p>Return all non-overlapping matches of pattern in string, as a list of strings. The string is scanned <code>left-to-right</code>, and matches are returned in the order found. If one or more groups are present in the pattern, return a list of groups;</p><p>this will be a list of tuples if the pattern has more than one group. Empty matches are included in the result.</p>
        </div>
</li>
<li><p><code>os.path</code><br><ins>os.path</ins> module is submodule of OS module in Python used for common pathname manipulation. to get the data’s path, I used the</p>
<ol>
<li><strong><code>os.path.dirname()</code></strong>: To get the python file’s parent file name.</li>
<li><strong><code>os.path.join()</code></strong>:  combine the file names to make the absolute path.</li>
<li><strong><code>os.path.splitext()</code></strong>: To split the path name into a pair <em>root</em> and <em>ext</em>(<code>.py</code>).</li>
</ol>
<hr>
<p><strong>Example</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> splitext</span><br><span class="line">path = <span class="string">b'https://docs.python.org/2/library/base64.html'</span></span><br><span class="line"></span><br><span class="line">dir_lst = list(splitext(path.decode()))</span><br><span class="line"><span class="comment"># note that splitext() returns tuple</span></span><br><span class="line"></span><br><span class="line">name, ext = dir_lst[<span class="number">0</span>].replace(<span class="string">'/'</span>, <span class="string">' '</span>).split()[<span class="number">-1</span>], dir_lst[<span class="number">-1</span>]</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">name = 'base64'</span></span><br><span class="line"><span class="string">ext = '.html'</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">file_name = name + ext</span><br><span class="line">print(file_name)</span><br><span class="line"><span class="comment"># 'base64.html'</span></span><br></pre></td></tr></table></figure>

<p><strong>All modules</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> log10</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> listdir</span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> dirname, join, splitext</span><br><span class="line"><span class="keyword">from</span> re <span class="keyword">import</span> findall</span><br><span class="line"></span><br><span class="line"><span class="comment"># For the test</span></span><br><span class="line"><span class="keyword">from</span> timeit <span class="keyword">import</span> Timer</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></table></figure>

</li>
</ul></div><div class="tab-pane" id="fourth-unique-name-2"><ol>
<li>Prompt input the series name from user (e.g. a###.script, bg###.script)</li>
<li>Get the file list from current file using <code>listdir</code>, then make a list about file names about user input<ul>
<li>If user input <code>a</code>, then need to make a list about <strong>a###.script</strong> files list.</li>
<li>Else, need to make series B’s list.</li>
</ul>
</li>
<li>Get Lexicon sentiment file to my codes</li>
<li>Make a word counter list using series file’s list (using regular expression)</li>
<li>Then, Inner join with lexicon sentiment</li>
<li>After join, calculate the sentiment score using the result No.5.</li>
<li>Display the plot using it.</li>
</ol></div><div class="tab-pane" id="fourth-unique-name-3"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> log10, sum</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> listdir</span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> dirname, join</span><br><span class="line"><span class="keyword">from</span> re <span class="keyword">import</span> findall</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># Prompt input from user</span></span><br><span class="line">series = input(<span class="string">"Enter the series name: "</span>).lower()</span><br><span class="line">series_name = series + chr(ord(<span class="string">'g'</span>) * (<span class="number">1</span> - (ord(series) &amp; <span class="number">1</span>))).rstrip(<span class="string">'\x00'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get file path</span></span><br><span class="line">dir = dirname(__file__)</span><br><span class="line">path = join(dir, <span class="string">"dataset"</span>, <span class="string">"data_ch2"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get lexicon sentiment</span></span><br><span class="line">lexicon_sentiment = pd.read_csv(join(dir, <span class="string">"dataset"</span>, <span class="string">"data_sent"</span>, <span class="string">"sentiment_lex.csv"</span>))</span><br><span class="line">lexicon_sentiment.columns = [<span class="string">"word"</span>, <span class="string">"score"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get filenames on list</span></span><br><span class="line">filenames = [f <span class="keyword">for</span> f <span class="keyword">in</span> listdir(path) <span class="keyword">if</span> series_name == f.split(<span class="string">"1"</span>)[<span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line">data = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> fname <span class="keyword">in</span> filenames:</span><br><span class="line">    <span class="keyword">with</span> open(join(path, fname), <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data += f.read()</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">pattern1: lexicon sentiment has '1+2', '1/2', 'r/sfsdf', etc --&gt; '\w+[-|+|/|.]\w+'</span></span><br><span class="line"><span class="string">pattern2: it also has '&lt;URL&gt;'-like format. --&gt; '&lt;\w+&gt;'</span></span><br><span class="line"><span class="string">pattern3: pure alphabet character --&gt; '\w+'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">combining those patterns --&gt; r'pattern1 | pattern2 | pattern3'</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">data = findall(<span class="string">r'\w+[-|+|/|.]\w+|&lt;\w+&gt;|\w+'</span>, data.lower())</span><br><span class="line">count = Counter(data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Convert counter(dicts) to DataFrame</span></span><br><span class="line">cnt_lst = pd.DataFrame.from_dict(count, orient=<span class="string">"index"</span>, ).reset_index()</span><br><span class="line">cnt_lst.columns = [<span class="string">"word"</span>, <span class="string">"count"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Inner join with lexicon sentiment</span></span><br><span class="line">cnt_lst = cnt_lst.join(lexicon_sentiment.set_index(<span class="string">"word"</span>), on=<span class="string">"word"</span>)</span><br><span class="line">cnt_lst = cnt_lst[cnt_lst[<span class="string">"score"</span>].notna()]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make new columns for sentiment.</span></span><br><span class="line">sentiment = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> cnt_lst[<span class="string">"score"</span>]:</span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">-1.0</span> <span class="keyword">and</span> x &lt; <span class="number">-0.6</span>:</span><br><span class="line">        sentiment.append(<span class="string">"Neg"</span>)</span><br><span class="line">    <span class="keyword">elif</span> x &gt;= <span class="number">-0.6</span> <span class="keyword">and</span> x &lt; <span class="number">-0.2</span>:</span><br><span class="line">        sentiment.append(<span class="string">"W.Neg"</span>)</span><br><span class="line">    <span class="keyword">elif</span> x &gt;= <span class="number">-0.2</span> <span class="keyword">and</span> x &lt;= <span class="number">0.2</span>:</span><br><span class="line">        sentiment.append(<span class="string">"Neu"</span>)</span><br><span class="line">    <span class="keyword">elif</span> x &gt; <span class="number">0.2</span> <span class="keyword">and</span> x &lt;= <span class="number">0.6</span>:</span><br><span class="line">        sentiment.append(<span class="string">"W.Pos"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        sentiment.append(<span class="string">"Pos"</span>)</span><br><span class="line"></span><br><span class="line">cnt_lst[<span class="string">"sentiment"</span>] = sentiment</span><br><span class="line">cnt_lst = cnt_lst.groupby(cnt_lst[<span class="string">"sentiment"</span>], as_index=<span class="literal">True</span>).agg(&#123;<span class="string">"count"</span>: <span class="string">"sum"</span>&#125;).agg(&#123;<span class="string">"count"</span>: <span class="string">"log10"</span>&#125;)</span><br><span class="line">cnt_lst = cnt_lst.reindex(index=[<span class="string">"Neg"</span>, <span class="string">"W.Neg"</span>, <span class="string">"Neu"</span>, <span class="string">"W.Pos"</span>, <span class="string">"Pos"</span>])</span><br><span class="line">print(cnt_lst)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Display the plot</span></span><br><span class="line">plt.title(<span class="string">"Sentiment Analysis for Series "</span> + series.upper())</span><br><span class="line">plt.xlabel(<span class="string">"Sentiment"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"log Word Count"</span>)</span><br><span class="line">plt.bar(cnt_lst.index, cnt_lst[<span class="string">"count"</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div></div></div>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 343</category>
      </categories>
      <tags>
        <tag>CSCI 343</tag>
      </tags>
  </entry>
  <entry>
    <title>NexT Theme Plugin</title>
    <url>/2020/02/24/2020-02-24-NexT-Theme-test/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<p>See this:</p>
<ul>
<li><a href="https://theme-next.org/docs/tag-plugins/button#" target="_blank" rel="noopener">https://theme-next.org/docs/tag-plugins/button#</a></li>
</ul>
<hr>
<h2 id="Centered-Quote"><a href="#Centered-Quote" class="headerlink" title="Centered Quote"></a>Centered Quote</h2><p>This tag will make a quote with two lines before and after it, and text quoted will be centered. When using centered quote, if we have multi-line text, and each line has a different length, the quote won’t be symmetrical, so it’s recommended to use when only have single line text. For example before article all after article to make a summary.</p>
<h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% centerquote %&#125;Something&#123;% endcenterquote %&#125;</span><br><span class="line">&lt;!-- Tag Alias --&gt;</span><br><span class="line">&#123;% cq %&#125;Something&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% cq %&#125;Elegant in code, simple in core&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>

<p>&nbsp;</p>
<blockquote class="blockquote-center"><p>Elegant in code, simple in core</p>
</blockquote>

<hr>
<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><h3 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">simple</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h3 id="Usage-1"><a href="#Usage-1" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">[class]   : default | primary | success | info | warning | danger.</span><br><span class="line">[no-icon] : Disable icon in note.</span><br><span class="line"></span><br><span class="line">All parameters are optional.</span><br></pre></td></tr></table></figure>

<div class="note danger">
            <h4 id="Known-Issues"><a href="#Known-Issues" class="headerlink" title="Known Issues"></a>Known Issues</h4><p>It’s wrong to write this tag with 1 line if you don’t want to see possible bugs.</p><p>For example, here is wrong syntax to write content like that:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note danger %&#125;note text, note text, note text&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>Or that,</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note danger %&#125;note text</span><br><span class="line">note text</span><br><span class="line">note text</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>Need to write content at new line, like this:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note danger %&#125;</span><br><span class="line">note text, note text, note text</span><br><span class="line">note text, note text, note text</span><br><span class="line">note text, note text, note text</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
          </div>

<hr>
<h3 id="Settings-1"><a href="#Settings-1" class="headerlink" title="Settings"></a>Settings</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note %&#125;</span><br><span class="line">#### Header</span><br><span class="line">(without define class style)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note ">
            <h4 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h4><p>(without define class style)</p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">#### Default Header</span><br><span class="line">Welcome to [Hexo!](https:&#x2F;&#x2F;hexo.io)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note default">
            <h4 id="Default-Header"><a href="#Default-Header" class="headerlink" title="Default Header"></a>Default Header</h4><p>Welcome to <a href="https://hexo.io" target="_blank" rel="noopener">Hexo!</a></p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note primary %&#125;</span><br><span class="line">#### Primary Header</span><br><span class="line">**Welcome** to [Hexo!](https:&#x2F;&#x2F;hexo.io)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note primary">
            <h4 id="Primary-Header"><a href="#Primary-Header" class="headerlink" title="Primary Header"></a>Primary Header</h4><p><strong>Welcome</strong> to <a href="https://hexo.io" target="_blank" rel="noopener">Hexo!</a></p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note info %&#125;</span><br><span class="line">### Info Header</span><br><span class="line">**Welcome** to [Hexo!](https:&#x2F;&#x2F;hexo.io)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note info">
            <h3 id="Info-Header"><a href="#Info-Header" class="headerlink" title="Info Header"></a>Info Header</h3><p><strong>Welcome</strong> to <a href="https://hexo.io" target="_blank" rel="noopener">Hexo!</a></p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note success %&#125;</span><br><span class="line">#### Success Header</span><br><span class="line">**Welcome** to [Hexo!](https:&#x2F;&#x2F;hexo.io)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note success">
            <h4 id="Success-Header"><a href="#Success-Header" class="headerlink" title="Success Header"></a>Success Header</h4><p><strong>Welcome</strong> to <a href="https://hexo.io" target="_blank" rel="noopener">Hexo!</a></p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note warning %&#125;</span><br><span class="line">#### Warning Header</span><br><span class="line">**Welcome** to [Hexo!](https:&#x2F;&#x2F;hexo.io)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note warning">
            <h4 id="Warning-Header"><a href="#Warning-Header" class="headerlink" title="Warning Header"></a>Warning Header</h4><p><strong>Welcome</strong> to <a href="https://hexo.io" target="_blank" rel="noopener">Hexo!</a></p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note danger %&#125;</span><br><span class="line">#### Danger Header</span><br><span class="line">**Welcome** to [Hexo!](https:&#x2F;&#x2F;hexo.io)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note danger">
            <h4 id="Danger-Header"><a href="#Danger-Header" class="headerlink" title="Danger Header"></a>Danger Header</h4><p><strong>Welcome</strong> to <a href="https://hexo.io" target="_blank" rel="noopener">Hexo!</a></p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note info no-icon %&#125;</span><br><span class="line">#### No icon note</span><br><span class="line">Note **without** icon: &#96;note info no-icon&#96;</span><br><span class="line"></span><br><span class="line">note info, note info, note info</span><br><span class="line">note info, note info, note info</span><br><span class="line">note info, note info, note info</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note info no-icon">
            <h4 id="No-icon-note"><a href="#No-icon-note" class="headerlink" title="No icon note"></a>No icon note</h4><p>Note <strong>without</strong> icon: <code>note info no-icon</code></p><p>note info, note info, note info<br>note info, note info, note info<br>note info, note info, note info</p>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note success %&#125;</span><br><span class="line">#### Codeblock in note</span><br><span class="line">&#123;% code %&#125;</span><br><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br><span class="line">&#123;% endcode %&#125;</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note success">
            <h4 id="Codeblock-in-note"><a href="#Codeblock-in-note" class="headerlink" title="Codeblock in note"></a>Codeblock in note</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br><span class="line">code block in note tag</span><br></pre></td></tr></table></figure>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">#### Lists in note</span><br><span class="line">* ul</span><br><span class="line">* ul</span><br><span class="line">  * ul</span><br><span class="line">  * ul</span><br><span class="line">* ul</span><br><span class="line"></span><br><span class="line">1. ol</span><br><span class="line">2. ol</span><br><span class="line">  1. ol</span><br><span class="line">  2. ol</span><br><span class="line">3. ol</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note default">
            <h4 id="Lists-in-note"><a href="#Lists-in-note" class="headerlink" title="Lists in note"></a>Lists in note</h4><ul><li>ul</li><li>ul<ul><li>ul</li><li>ul</li></ul></li><li>ul</li></ul><ol><li>ol</li><li>ol</li><li>ol</li><li>ol</li><li>ol</li></ol>
          </div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">#### Table in Note</span><br><span class="line">| 1   | 2   |</span><br><span class="line">| --- | --- |</span><br><span class="line">| 3   | 4   |</span><br><span class="line">| 5   | 6   |</span><br><span class="line">| 7   | 8   |</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note default">
            <h4 id="Table-in-Note"><a href="#Table-in-Note" class="headerlink" title="Table in Note"></a>Table in Note</h4><table><thead><tr><th>1</th><th>2</th></tr></thead><tbody><tr><td>3</td><td>4</td></tr><tr><td>5</td><td>6</td></tr><tr><td>7</td><td>8</td></tr></tbody></table>
          </div>

<hr>
<h2 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h2><h3 id="Settings-2"><a href="#Settings-2" class="headerlink" title="Settings"></a>Settings</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tabs:</span><br><span class="line">  transition:</span><br><span class="line">    tabs: false</span><br><span class="line">    labels: true</span><br></pre></td></tr></table></figure>

<h3 id="Usage-2"><a href="#Usage-2" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">Unique name   : Unique name of tabs block tag without comma.</span><br><span class="line">                Will be used in #id&#39;s as prefix for each tab with their index numbers.</span><br><span class="line">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span><br><span class="line">                Only for current url of post&#x2F;page must be unique!</span><br><span class="line">[index]       : Index number of active tab.</span><br><span class="line">                If not specified, first tab (1) will be selected.</span><br><span class="line">                If index is -1, no tab will be selected. It&#39;s will be something like spoiler.</span><br><span class="line">                Optional parameter.</span><br><span class="line">[Tab caption] : Caption of current tab.</span><br><span class="line">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span><br><span class="line">                If not caption specified, but specified icon, caption will empty.</span><br><span class="line">                Optional parameter.</span><br><span class="line">[@icon]       : FontAwesome icon name (without &#39;fa-&#39; at the begining).</span><br><span class="line">                Can be specified with or without space; e.g. &#39;Tab caption @icon&#39; similar to &#39;Tab caption@icon&#39;.</span><br><span class="line">                Optional parameter.</span><br></pre></td></tr></table></figure>

<h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs First unique name %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="first-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#first-unique-name-1">First unique name 1</a></li><li class="tab"><a href="#first-unique-name-2">First unique name 2</a></li><li class="tab"><a href="#first-unique-name-3">First unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="first-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="first-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="first-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h4 id="Tabs-with-3rd-tab-selected"><a href="#Tabs-with-3rd-tab-selected" class="headerlink" title="Tabs with 3rd tab selected"></a>Tabs with 3rd tab selected</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Second unique name, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="second-unique-name"><ul class="nav-tabs"><li class="tab"><a href="#second-unique-name-1">Second unique name 1</a></li><li class="tab"><a href="#second-unique-name-2">Second unique name 2</a></li><li class="tab active"><a href="#second-unique-name-3">Second unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="second-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="second-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane active" id="second-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h4 id="Tabs-with-no-tab-selected"><a href="#Tabs-with-no-tab-selected" class="headerlink" title="Tabs with no tab selected"></a>Tabs with no tab selected</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Third unique name, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="third-unique-name"><ul class="nav-tabs"><li class="tab"><a href="#third-unique-name-1">Third unique name 1</a></li><li class="tab"><a href="#third-unique-name-2">Third unique name 2</a></li><li class="tab"><a href="#third-unique-name-3">Third unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="third-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="third-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="third-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h4 id="Tabs-with-custom-labels"><a href="#Tabs-with-custom-labels" class="headerlink" title="Tabs with custom labels"></a>Tabs with custom labels</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Fourth unique name %&#125;</span><br><span class="line">&lt;!-- tab Solution 1 --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab Solution 2 --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab Solution 3 --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="fourth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fourth-unique-name-1">Solution 1</a></li><li class="tab"><a href="#fourth-unique-name-2">Solution 2</a></li><li class="tab"><a href="#fourth-unique-name-3">Solution 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="fourth-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="fourth-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="fourth-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h4 id="Tabs-with-icons-only"><a href="#Tabs-with-icons-only" class="headerlink" title="Tabs with icons only"></a>Tabs with icons only</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Fifth unique name %&#125;</span><br><span class="line">&lt;!-- tab @text-width --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @amazon --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @bold --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="fifth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fifth-unique-name-1"><i class="fa fa-text-width" style="text-align: center;"></i></a></li><li class="tab"><a href="#fifth-unique-name-2"><i class="fa fa-amazon" style="text-align: center;"></i></a></li><li class="tab"><a href="#fifth-unique-name-3"><i class="fa fa-bold" style="text-align: center;"></i></a></li></ul><div class="tab-content"><div class="tab-pane active" id="fifth-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="fifth-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="fifth-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h4 id="Tabs-with-icons-and-labels"><a href="#Tabs-with-icons-and-labels" class="headerlink" title="Tabs with icons and labels"></a>Tabs with icons and labels</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Sixth unique name %&#125;</span><br><span class="line">&lt;!-- tab Solution 1@text-width --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab Solution 2 @amazon --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab Solution 3@bold --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="sixth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#sixth-unique-name-1"><i class="fa fa-text-width"></i>Solution 1</a></li><li class="tab"><a href="#sixth-unique-name-2"><i class="fa fa-amazon"></i>Solution 2</a></li><li class="tab"><a href="#sixth-unique-name-3"><i class="fa fa-bold"></i>Solution 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sixth-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="sixth-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="sixth-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h4 id="Tabs-permalinks-test"><a href="#Tabs-permalinks-test" class="headerlink" title="Tabs permalinks test"></a>Tabs permalinks test</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Permalink for &gt; [Tab one](#tab-one).</span><br><span class="line">Permalink for &gt; [Tab one 1](#tab-one-1).</span><br><span class="line">Permalink for &gt; [Tab one 2](#tab-one-2).</span><br><span class="line">Permalink for &gt; [Tab one 3](#tab-one-3).</span><br><span class="line"></span><br><span class="line">Permalink for &gt; [Tab two](#tab-two).</span><br><span class="line">Permalink for &gt; [Tab two 1](#tab-two-1).</span><br><span class="line">Permalink for &gt; [Tab two 2](#tab-two-2).</span><br><span class="line">Permalink for &gt; [Tab two 3](#tab-two-3).</span><br><span class="line"></span><br><span class="line">&#123;% tabs Tab one %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tabs Tab two %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<p>Permalink for &gt; <a href="#tab-one">Tab one</a>.<br>Permalink for &gt; <a href="#tab-one-1">Tab one 1</a>.<br>Permalink for &gt; <a href="#tab-one-2">Tab one 2</a>.<br>Permalink for &gt; <a href="#tab-one-3">Tab one 3</a>.</p>
<p>Permalink for &gt; <a href="#tab-two">Tab two</a>.<br>Permalink for &gt; <a href="#tab-two-1">Tab two 1</a>.<br>Permalink for &gt; <a href="#tab-two-2">Tab two 2</a>.<br>Permalink for &gt; <a href="#tab-two-3">Tab two 3</a>.</p>
<div class="tabs" id="tab-one"><ul class="nav-tabs"><li class="tab active"><a href="#tab-one-1">Tab one 1</a></li><li class="tab"><a href="#tab-one-2">Tab one 2</a></li><li class="tab"><a href="#tab-one-3">Tab one 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-one-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="tab-one-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="tab-one-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<div class="tabs" id="tab-two"><ul class="nav-tabs"><li class="tab active"><a href="#tab-two-1">Tab two 1</a></li><li class="tab"><a href="#tab-two-2">Tab two 2</a></li><li class="tab"><a href="#tab-two-3">Tab two 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-two-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="tab-two-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="tab-two-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h4 id="Tabs-with-other-tags"><a href="#Tabs-with-other-tags" class="headerlink" title="Tabs with other tags"></a>Tabs with other tags</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Tags %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line"></span><br><span class="line">1. One</span><br><span class="line">2. Two</span><br><span class="line">3. Three</span><br><span class="line"></span><br><span class="line">4-spaces code block:</span><br><span class="line"></span><br><span class="line">    nano &#x2F;etc</span><br><span class="line"></span><br><span class="line">Tagged code block:</span><br><span class="line"></span><br><span class="line">&#123;% code %&#125;</span><br><span class="line">code tag</span><br><span class="line">code tag</span><br><span class="line">code tag</span><br><span class="line">&#123;% endcode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default %&#125;</span><br><span class="line">Note default tag.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line"></span><br><span class="line">* Five</span><br><span class="line">* Six</span><br><span class="line">* Seven</span><br><span class="line"></span><br><span class="line">&#123;% note primary %&#125;</span><br><span class="line">&#123;% youtube Kt7u5kr_P5o %&#125;</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line"></span><br><span class="line">&#123;% subtabs Sub Tabs %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Sub Tab 1.**</span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Sub Tab 2.**</span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span><br><span class="line"></span><br><span class="line">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Sub Tab 3.**</span><br><span class="line"></span><br><span class="line">&#123;% subtabs Sub-Sub Tabs %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Sub-Sub Tab 1 of Sub Tab 3.**</span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span><br><span class="line"></span><br><span class="line">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span><br><span class="line"></span><br><span class="line">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Sub-Sub Tab 2 of Sub Tab 3.**</span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span><br><span class="line"></span><br><span class="line">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Sub-Sub Tab 3 of Sub Tab 3.**</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endsubtabs %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endsubtabs %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<div class="tabs" id="tags"><ul class="nav-tabs"><li class="tab active"><a href="#tags-1">Tags 1</a></li><li class="tab"><a href="#tags-2">Tags 2</a></li><li class="tab"><a href="#tags-3">Tags 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tags-1"><p><strong>This is Tab 1.</strong></p>
<ol>
<li>One</li>
<li>Two</li>
<li>Three</li>
</ol>
<p>4-spaces code block:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nano &#x2F;etc</span><br></pre></td></tr></table></figure>

<p>Tagged code block:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">code tag</span><br><span class="line">code tag</span><br><span class="line">code tag</span><br></pre></td></tr></table></figure>

<div class="note default">
            <p>Note default tag.</p>
          </div></div><div class="tab-pane" id="tags-2"><p><strong>This is Tab 2.</strong></p>
<ul>
<li>Five</li>
<li>Six</li>
<li>Seven</li>
</ul>
<div class="note primary">
            <div class="video-container"><iframe src="https://www.youtube.com/embed/Kt7u5kr_P5o" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
          </div></div><div class="tab-pane" id="tags-3"><p><strong>This is Tab 3.</strong></p>
<div class="tabs" id="sub-tabs"><ul class="nav-tabs"><li class="tab active"><a href="#sub-tabs-1">Sub Tabs 1</a></li><li class="tab"><a href="#sub-tabs-2">Sub Tabs 2</a></li><li class="tab"><a href="#sub-tabs-3">Sub Tabs 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sub-tabs-1"><p><strong>This is Sub Tab 1.</strong></p>
<div class="note success">
            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class="note warning">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>          </div><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>
          </div></div><div class="tab-pane" id="sub-tabs-2"><p><strong>This is Sub Tab 2.</strong></p>
<div class="note success">
            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><div class="note danger">            <p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>
          </div></div><div class="tab-pane" id="sub-tabs-3"><p><strong>This is Sub Tab 3.</strong></p>
<div class="tabs" id="sub-sub-tabs"><ul class="nav-tabs"><li class="tab active"><a href="#sub-sub-tabs-1">Sub-Sub Tabs 1</a></li><li class="tab"><a href="#sub-sub-tabs-2">Sub-Sub Tabs 2</a></li><li class="tab"><a href="#sub-sub-tabs-3">Sub-Sub Tabs 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sub-sub-tabs-1"><p><strong>This is Sub-Sub Tab 1 of Sub Tab 3.</strong></p>
<div class="note success">
            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>
          </div></div><div class="tab-pane" id="sub-sub-tabs-2"><p><strong>This is Sub-Sub Tab 2 of Sub Tab 3.</strong></p>
<div class="note success">
            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class="note warning">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>
          </div></div><div class="tab-pane" id="sub-sub-tabs-3"><p><strong>This is Sub-Sub Tab 3 of Sub Tab 3.</strong></p>
<div class="note success">
            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class="note warning">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><div class="note danger">            <p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>          </div>
          </div></div></div></div></div></div></div></div></div></div>

<hr>
<h2 id="PDF"><a href="#PDF" class="headerlink" title="PDF"></a>PDF</h2><h3 id="Settings-3"><a href="#Settings-3" class="headerlink" title="Settings"></a>Settings</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pdf:</span><br><span class="line">  enable: true</span><br><span class="line">  # Default height</span><br><span class="line">  height: 500px</span><br></pre></td></tr></table></figure>

<h3 id="Usage-3"><a href="#Usage-3" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% pdf url [height] %&#125;</span><br><span class="line"></span><br><span class="line">[url]    : Relative path to PDF file.</span><br><span class="line">[height] : Optional. Height of the PDF display element, e.g. 800px.</span><br></pre></td></tr></table></figure>

<h3 id="Example-2"><a href="#Example-2" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% pdf https:&#x2F;&#x2F;example.com&#x2F;sample.pdf %&#125;</span><br></pre></td></tr></table></figure>

<div class="pdf" target="https://example.com/sample.pdf" height=""></div>

<hr>
<h2 id="Mermaid"><a href="#Mermaid" class="headerlink" title="Mermaid"></a>Mermaid</h2><h3 id="Settings-4"><a href="#Settings-4" class="headerlink" title="Settings"></a>Settings</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Mermaid tag</span><br><span class="line">mermaid:</span><br><span class="line">  enable: true</span><br><span class="line">  # Available themes: default | dark | forest | neutral</span><br><span class="line">  theme: forest</span><br></pre></td></tr></table></figure>

<h3 id="Usage-4"><a href="#Usage-4" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid type %&#125;</span><br><span class="line">&#123;% endmermaid %&#125;</span><br><span class="line"></span><br><span class="line">type : type of the mermaid chart, visit https:&#x2F;&#x2F;github.com&#x2F;knsv&#x2F;mermaid for more information.</span><br></pre></td></tr></table></figure>

<ul>
<li><a href="https://github.com/knsv/mermaid" target="_blank" rel="noopener">https://github.com/knsv/mermaid</a></li>
</ul>
<h3 id="Example-3"><a href="#Example-3" class="headerlink" title="Example"></a>Example</h3><h4 id="Ex1"><a href="#Ex1" class="headerlink" title="Ex1"></a>Ex1</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid graph TD %&#125;</span><br><span class="line">A[Christmas] --&gt;|Get money| B(Go shopping)</span><br><span class="line">B --&gt; C&#123;Let me thinksssss&lt;br&gt;ssssssssssssssssssssss&lt;br&gt;sssssssssssssssssssssssssss&#125;</span><br><span class="line">C --&gt;|One| D[Laptop]</span><br><span class="line">C --&gt;|Two| E[iPhone]</span><br><span class="line">C --&gt;|Three| F[Car]</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>

<pre class="mermaid" style="text-align: center;">
            graph TD
            A[Christmas] -->|Get money| B(Go shopping)
B --> C{Let me thinksssss<br>ssssssssssssssssssssss<br>sssssssssssssssssssssssssss}
C -->|One| D[Laptop]
C -->|Two| E[iPhone]
C -->|Three| F[Car]
          </pre>

<h4 id="Ex2"><a href="#Ex2" class="headerlink" title="Ex2"></a>Ex2</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid graph LR %&#125;</span><br><span class="line">47(SAM.CommonFA.FMESummary)--&gt;48(SAM.CommonFA.CommonFAFinanceBudget)</span><br><span class="line">37(SAM.CommonFA.BudgetSubserviceLineVolume)--&gt;48(SAM.CommonFA.CommonFAFinanceBudget)</span><br><span class="line">35(SAM.CommonFA.PopulationFME)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">41(SAM.CommonFA.MetricCost)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">44(SAM.CommonFA.MetricOutliers)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">46(SAM.CommonFA.MetricOpportunity)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">40(SAM.CommonFA.OPVisits)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">38(SAM.CommonFA.CommonFAFinanceRefund)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">43(SAM.CommonFA.CommonFAFinancePicuDays)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">42(SAM.CommonFA.CommonFAFinanceNurseryDays)--&gt;47(SAM.CommonFA.FMESummary)</span><br><span class="line">45(SAM.CommonFA.MetricPreOpportunity)--&gt;46(SAM.CommonFA.MetricOpportunity)</span><br><span class="line">35(SAM.CommonFA.PopulationFME)--&gt;45(SAM.CommonFA.MetricPreOpportunity)</span><br><span class="line">41(SAM.CommonFA.MetricCost)--&gt;45(SAM.CommonFA.MetricPreOpportunity)</span><br><span class="line">41(SAM.CommonFA.MetricCost)--&gt;44(SAM.CommonFA.MetricOutliers)</span><br><span class="line">39(SAM.CommonFA.ChargeDetails)--&gt;43(SAM.CommonFA.CommonFAFinancePicuDays)</span><br><span class="line">39(SAM.CommonFA.ChargeDetails)--&gt;42(SAM.CommonFA.CommonFAFinanceNurseryDays)</span><br><span class="line">39(SAM.CommonFA.ChargeDetails)--&gt;41(SAM.CommonFA.MetricCost)</span><br><span class="line">39(SAM.CommonFA.ChargeDetails)--&gt;40(SAM.CommonFA.OPVisits)</span><br><span class="line">35(SAM.CommonFA.PopulationFME)--&gt;39(SAM.CommonFA.ChargeDetails)</span><br><span class="line">36(SAM.CommonFA.PremetricCost)--&gt;39(SAM.CommonFA.ChargeDetails)</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>

<pre class="mermaid" style="text-align: center;">
            graph LR
            47(SAM.CommonFA.FMESummary)-->48(SAM.CommonFA.CommonFAFinanceBudget)
37(SAM.CommonFA.BudgetSubserviceLineVolume)-->48(SAM.CommonFA.CommonFAFinanceBudget)
35(SAM.CommonFA.PopulationFME)-->47(SAM.CommonFA.FMESummary)
41(SAM.CommonFA.MetricCost)-->47(SAM.CommonFA.FMESummary)
44(SAM.CommonFA.MetricOutliers)-->47(SAM.CommonFA.FMESummary)
46(SAM.CommonFA.MetricOpportunity)-->47(SAM.CommonFA.FMESummary)
40(SAM.CommonFA.OPVisits)-->47(SAM.CommonFA.FMESummary)
38(SAM.CommonFA.CommonFAFinanceRefund)-->47(SAM.CommonFA.FMESummary)
43(SAM.CommonFA.CommonFAFinancePicuDays)-->47(SAM.CommonFA.FMESummary)
42(SAM.CommonFA.CommonFAFinanceNurseryDays)-->47(SAM.CommonFA.FMESummary)
45(SAM.CommonFA.MetricPreOpportunity)-->46(SAM.CommonFA.MetricOpportunity)
35(SAM.CommonFA.PopulationFME)-->45(SAM.CommonFA.MetricPreOpportunity)
41(SAM.CommonFA.MetricCost)-->45(SAM.CommonFA.MetricPreOpportunity)
41(SAM.CommonFA.MetricCost)-->44(SAM.CommonFA.MetricOutliers)
39(SAM.CommonFA.ChargeDetails)-->43(SAM.CommonFA.CommonFAFinancePicuDays)
39(SAM.CommonFA.ChargeDetails)-->42(SAM.CommonFA.CommonFAFinanceNurseryDays)
39(SAM.CommonFA.ChargeDetails)-->41(SAM.CommonFA.MetricCost)
39(SAM.CommonFA.ChargeDetails)-->40(SAM.CommonFA.OPVisits)
35(SAM.CommonFA.PopulationFME)-->39(SAM.CommonFA.ChargeDetails)
36(SAM.CommonFA.PremetricCost)-->39(SAM.CommonFA.ChargeDetails)
          </pre>

<h4 id="Ex3"><a href="#Ex3" class="headerlink" title="Ex3"></a>Ex3</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid sequenceDiagram %&#125;</span><br><span class="line">participant Alice</span><br><span class="line">participant Bob</span><br><span class="line">participant John as John&lt;br&gt;Second Line</span><br><span class="line">Alice -&gt;&gt; Bob: Hello Bob, how are you?</span><br><span class="line">Bob--&gt;&gt;John: How about you John?</span><br><span class="line">Bob--x Alice: I am good thanks!</span><br><span class="line">Bob-x John: I am good thanks!</span><br><span class="line">Note right of John: Bob thinks a long&lt;br&gt;long time, so long&lt;br&gt;that the text does&lt;br&gt;not fit on a row.</span><br><span class="line">Bob--&gt;Alice: Checking with John...</span><br><span class="line">alt either this</span><br><span class="line">Alice-&gt;&gt;John: Yes</span><br><span class="line">else or this</span><br><span class="line">Alice-&gt;&gt;John: No</span><br><span class="line">else or this will happen</span><br><span class="line">Alice-&gt;John: Maybe</span><br><span class="line">end</span><br><span class="line">par this happens in parallel</span><br><span class="line">Alice --&gt;&gt; Bob: Parallel message 1</span><br><span class="line">and</span><br><span class="line">Alice --&gt;&gt; John: Parallel message 2</span><br><span class="line">end</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>

<pre class="mermaid" style="text-align: center;">
            sequenceDiagram
            participant Alice
participant Bob
participant John as John<br>Second Line
Alice ->> Bob: Hello Bob, how are you?
Bob-->>John: How about you John?
Bob--x Alice: I am good thanks!
Bob-x John: I am good thanks!
Note right of John: Bob thinks a long<br>long time, so long<br>that the text does<br>not fit on a row.
Bob-->Alice: Checking with John...
alt either this
Alice->>John: Yes
else or this
Alice->>John: No
else or this will happen
Alice->John: Maybe
end
par this happens in parallel
Alice -->> Bob: Parallel message 1
and
Alice -->> John: Parallel message 2
end
          </pre>

<h4 id="Ex4"><a href="#Ex4" class="headerlink" title="Ex4"></a>Ex4</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid gitGraph: %&#125;</span><br><span class="line">options</span><br><span class="line">&#123;</span><br><span class="line">    &quot;nodeSpacing&quot;: 150,</span><br><span class="line">    &quot;nodeRadius&quot;: 10</span><br><span class="line">&#125;</span><br><span class="line">end</span><br><span class="line">commit</span><br><span class="line">branch newbranch</span><br><span class="line">checkout newbranch</span><br><span class="line">commit</span><br><span class="line">commit</span><br><span class="line">checkout master</span><br><span class="line">commit</span><br><span class="line">commit</span><br><span class="line">merge newbranch</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>

<pre class="mermaid" style="text-align: center;">
            gitGraph:
            options
{
"nodeSpacing": 150,
"nodeRadius": 10
}
end
commit
branch newbranch
checkout newbranch
commit
commit
checkout master
commit
commit
merge newbranch
          </pre>

<hr>
<h2 id="Label"><a href="#Label" class="headerlink" title="Label"></a>Label</h2><h3 id="Usage-5"><a href="#Usage-5" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% label [class]@Text %&#125;</span><br><span class="line"></span><br><span class="line">[class] : default | primary | success | info | warning | danger.</span><br><span class="line">          &#39;@Text&#39; can be specified with or without space</span><br><span class="line">          E.g. &#39;success @text&#39; similar to &#39;success@text&#39;.</span><br><span class="line">          If not specified, default class will be selected.</span><br></pre></td></tr></table></figure>

<h3 id="Example-4"><a href="#Example-4" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Lorem &#123;% label @ipsum %&#125; &#123;% label primary@dolor sit %&#125; amet, consectetur &#123;% label success@adipiscing elit, %&#125; sed &#123;% label info@do eiusmod %&#125; tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line"></span><br><span class="line">Ut enim *&#123;% label warning @ad %&#125;* minim veniam, quis **&#123;% label danger@nostrud %&#125;** exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</span><br><span class="line"></span><br><span class="line">Duis aute irure dolor in reprehenderit in voluptate ~~&#123;% label default @velit %&#125;~~ &lt;mark&gt;esse&lt;&#x2F;mark&gt; cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>

<p>Lorem <span class="label default">ipsum</span> <span class="label primary">dolor sit</span> amet, consectetur <span class="label success">adipiscing elit,</span> sed <span class="label info">do eiusmod</span> tempor incididunt ut labore et dolore magna aliqua.</p>
<p>Ut enim _<span class="label warning">ad</span>_ minim veniam, quis <strong><span class="label danger">nostrud</span></strong> exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
<p>Duis aute irure dolor in reprehenderit in voluptate <del><span class="label default">velit</span></del> <mark>esse</mark> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
<hr>
<h2 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h2><h3 id="Usage-6"><a href="#Usage-6" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% video url %&#125;</span><br><span class="line">&#123;% youtube VIDEO_KEY %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Example-5"><a href="#Example-5" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% video https:&#x2F;&#x2F;example.com&#x2F;sample.mp4 %&#125;</span><br></pre></td></tr></table></figure>

<video src="https://example.com/sample.mp4" preload="metadata" controls playsinline poster="">Sorry, your browser does not support the video tag.</video>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% youtube Kt7u5kr_P5o %&#125;</span><br></pre></td></tr></table></figure>

<div class="video-container"><iframe src="https://www.youtube.com/embed/Kt7u5kr_P5o" frameborder="0" loading="lazy" allowfullscreen></iframe></div>

<hr>
<h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><h3 id="Usge"><a href="#Usge" class="headerlink" title="Usge"></a>Usge</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% button url, text, icon [class], [title] %&#125;</span><br><span class="line">&lt;!-- Tag Alias --&gt;</span><br><span class="line">&#123;% btn url, text, icon [class], [title] %&#125;</span><br><span class="line"></span><br><span class="line">url     : Absolute or relative path to URL.</span><br><span class="line">text    : Button text. Required if no icon specified.</span><br><span class="line">icon    : FontAwesome icon name (without &#39;fa-&#39; at the begining). Required if no text specified.</span><br><span class="line">[class] : FontAwesome class(es): fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5x</span><br><span class="line">          Optional parameter.</span><br><span class="line">[title] : Tooltip at mouseover.</span><br><span class="line">          Optional parameter.</span><br></pre></td></tr></table></figure>

<h3 id="Example-6"><a href="#Example-6" class="headerlink" title="Example"></a>Example</h3><h4 id="Simple-Button"><a href="#Simple-Button" class="headerlink" title="Simple Button"></a>Simple Button</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% button #, Text %&#125;</span><br></pre></td></tr></table></figure>

<a class="btn" href="#">Text</a>

<h4 id="Button-with-text-amp-title"><a href="#Button-with-text-amp-title" class="headerlink" title="Button with text &amp; title"></a>Button with text &amp; title</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% btn #, Text %&#125;&#123;% btn #, Text &amp; Title,, Title %&#125;</span><br></pre></td></tr></table></figure>

<a class="btn" href="#">Text</a><a class="btn" href="#" title="Title">Text & Title</a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% btn #, Text %&#125; &#123;% btn #, Text &amp; Title,, Title %&#125;</span><br></pre></td></tr></table></figure>

<a class="btn" href="#">Text</a> <a class="btn" href="#" title="Title">Text & Title</a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% btn #, Text %&#125;</span><br><span class="line">&#123;% btn #, Text &amp; Title,, Title %&#125;</span><br></pre></td></tr></table></figure>

<a class="btn" href="#">Text</a>
<a class="btn" href="#" title="Title">Text & Title</a>

<h4 id="Button-with-icon"><a href="#Button-with-icon" class="headerlink" title="Button with icon"></a>Button with icon</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;&#123;% btn #,, home fa-5x %&#125;&#123;% btn #,, home fa-5x %&#125;&#123;% btn #,, home fa-5x %&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, home fa-4x %&#125;&#123;% btn #,, home fa-4x %&#125;&#123;% btn #,, home fa-4x %&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, home fa-3x %&#125;&#123;% btn #,, home fa-3x %&#125;&#123;% btn #,, home fa-3x %&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, home fa-2x %&#125;&#123;% btn #,, home fa-2x %&#125;&#123;% btn #,, home fa-2x %&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, home fa-lg %&#125;&#123;% btn #,, home fa-lg %&#125;&#123;% btn #,, home fa-lg %&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, home %&#125;&#123;% btn #,, home %&#125;&#123;% btn #,, home %&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<div><a class="btn" href="#"><i class="fa fa-home fa-5x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-5x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-5x"></i></a></div>
<div><a class="btn" href="#"><i class="fa fa-home fa-4x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-4x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-4x"></i></a></div>
<div><a class="btn" href="#"><i class="fa fa-home fa-3x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-3x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-3x"></i></a></div>
<div><a class="btn" href="#"><i class="fa fa-home fa-2x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-2x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-2x"></i></a></div>
<div><a class="btn" href="#"><i class="fa fa-home fa-lg"></i></a><a class="btn" href="#"><i class="fa fa-home fa-lg"></i></a><a class="btn" href="#"><i class="fa fa-home fa-lg"></i></a></div>
<div><a class="btn" href="#"><i class="fa fa-home"></i></a><a class="btn" href="#"><i class="fa fa-home"></i></a><a class="btn" href="#"><i class="fa fa-home"></i></a></div>

<h4 id="Button-with-text-amp-icon"><a href="#Button-with-text-amp-icon" class="headerlink" title="Button with text &amp; icon"></a>Button with text &amp; icon</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;&#123;% btn #, Text &amp; Icon (buggy), home %&#125;</span><br><span class="line">&#123;% btn #, Text &amp; Icon (fixed width), home fa-fw %&#125;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>

<p><a class="btn" href="#"><i class="fa fa-home"></i>Text & Icon (buggy)</a>
<a class="btn" href="#"><i class="fa fa-home fa-fw"></i>Text & Icon (fixed width)</a></p>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;&#123;% btn #, Text &amp; Large Icon, home fa-fw fa-lg %&#125;</span><br><span class="line">&#123;% btn #, Text &amp; Large Icon &amp; Title, home fa-fw fa-lg, Title %&#125;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>

<p><a class="btn" href="#"><i class="fa fa-home fa-fw fa-lg"></i>Text & Large Icon</a>
<a class="btn" href="#" title="Title"><i class="fa fa-home fa-fw fa-lg"></i>Text & Large Icon & Title</a></p>

<h4 id="Button-inside-text"><a href="#Button-inside-text" class="headerlink" title="Button inside text"></a>Button inside text</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Lorem &#123;% btn #, Lorem, home fa-fw fa-lg %&#125; ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br><span class="line"></span><br><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident &#123;% btn #, Ipsum, home fa-fw fa-lg %&#125;, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>

<p>Lorem <a class="btn" href="#"><i class="fa fa-home fa-fw fa-lg"></i>Lorem</a> ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident <a class="btn" href="#"><i class="fa fa-home fa-fw fa-lg"></i>Ipsum</a>, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
<h4 id="Button-inside-other-tag"><a href="#Button-inside-other-tag" class="headerlink" title="Button inside other tag"></a>Button inside other tag</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note info %&#125;</span><br><span class="line">&#123;% btn #, Text &amp; Icon, home fa-fw %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% btn #,, home, Title %&#125;&#123;% btn #, Text %&#125;</span><br><span class="line">[Link](#)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note info">
            <p><a class="btn" href="#"><i class="fa fa-home fa-fw"></i>Text &amp; Icon</a></p><p><a class="btn" href="#" title="Title"><i class="fa fa-home"></i></a><a class="btn" href="#">Text</a><br><a href="#">Link</a></p>
          </div>

<h4 id="Button-margin"><a href="#Button-margin" class="headerlink" title="Button margin"></a>Button margin</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;text-center&quot;&gt;&lt;div&gt;&#123;% btn #,, header %&#125;&#123;% btn #,, edge %&#125;&#123;% btn #,, times %&#125;&#123;% btn #,, circle-o %&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, italic %&#125;&#123;% btn #,, scribd %&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, google %&#125;&#123;% btn #,, chrome %&#125;&#123;% btn #,, opera %&#125;&#123;% btn #,, diamond fa-rotate-270 %&#125;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<div class="text-center"><div><a class="btn" href="#"><i class="fa fa-header"></i></a><a class="btn" href="#"><i class="fa fa-edge"></i></a><a class="btn" href="#"><i class="fa fa-times"></i></a><a class="btn" href="#"><i class="fa fa-circle-o"></i></a></div>
<div><a class="btn" href="#"><i class="fa fa-italic"></i></a><a class="btn" href="#"><i class="fa fa-scribd"></i></a></div>
<div><a class="btn" href="#"><i class="fa fa-google"></i></a><a class="btn" href="#"><i class="fa fa-chrome"></i></a><a class="btn" href="#"><i class="fa fa-opera"></i></a><a class="btn" href="#"><i class="fa fa-diamond fa-rotate-270"></i></a></div></div>

<h4 id="Button-with-relative-URL"><a href="#Button-with-relative-URL" class="headerlink" title="Button with relative URL"></a>Button with relative URL</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;text-center&quot;&gt;&#123;% btn #, Previous Chapter, arrow-left fa-fw fa-lg, Previous Chapter (Full Image) %&#125; &#123;% btn #, Next Chapter, arrow-right fa-fw fa-lg, Next Chapter (Label) %&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<div class="text-center"><a class="btn" href="#" title="Previous Chapter (Full Image)"><i class="fa fa-arrow-left fa-fw fa-lg"></i>Previous Chapter</a> <a class="btn" href="#" title="Next Chapter (Label)"><i class="fa fa-arrow-right fa-fw fa-lg"></i>Next Chapter</a></div>

<h4 id="Button-with-absolute-URL"><a href="#Button-with-absolute-URL" class="headerlink" title="Button with absolute URL"></a>Button with absolute URL</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;text-center&quot;&gt;&#123;% btn https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next, NexT, github fa-fw fa-lg, NexT source code %&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<div class="text-center"><a class="btn" href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener" title="NexT source code"><i class="fa fa-github fa-fw fa-lg"></i>NexT</a></div>

<hr>
<h2 id="Group-Pictures"><a href="#Group-Pictures" class="headerlink" title="Group Pictures"></a>Group Pictures</h2><h3 id="Usage-7"><a href="#Usage-7" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% grouppicture [group]-[layout] %&#125;&#123;% endgrouppicture %&#125;</span><br><span class="line">&#123;% gp [group]-[layout] %&#125;&#123;% endgp %&#125;</span><br><span class="line"></span><br><span class="line">[group]  : Total number of pictures to add in the group.</span><br><span class="line">[layout] : Default picture under the group to show.</span><br></pre></td></tr></table></figure>

<h3 id="Example-7"><a href="#Example-7" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% grouppicture 6-3 %&#125;</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">&#123;% endgrouppicture %&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% gp 5-2 %&#125;</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">  ![](&#x2F;images&#x2F;docs&#x2F;github.png)</span><br><span class="line">&#123;% endgp %&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="hexo-oembed"><a href="#hexo-oembed" class="headerlink" title="hexo-oembed"></a>hexo-oembed</h2><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ul>
<li><strong>Supports oEmbed Discovery</strong><ul>
<li>You can embed an oEmbed Discovery compatible site</li>
<li>You can check a permalink with oEmbed Tester</li>
<li>YouTube, Vimeo, Twitter, SlideShare, Speaker Deck, CodePen, TED, pixiv and more!</li>
</ul>
</li>
<li><strong>Supports oEmded endpoint configuration</strong><ul>
<li>You can embed an oEmbed compatible site(not support oEmbed Discovery) if you configure endpoint settings</li>
<li>You can find an oEmbed endpoint at oEmbed site</li>
<li>Instagram, Gyazo, Flickr and more!</li>
</ul>
</li>
<li>Automatic Embed.ly fallback when an API key is provided</li>
</ul>
<h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Installation</span><br></pre></td></tr></table></figure>

<h3 id="Usage-8"><a href="#Usage-8" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% oembed permlink [maxwidth] [maxheight] %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><p>See <a href="https://hinastory.github.io/cats-cats-cats/hexo-oembed-demo/" target="_blank" rel="noopener">Demo page</a>.</p>
<h3 id="About"><a href="#About" class="headerlink" title="About"></a>About</h3><p>This is hexo-oembed plugin demo page.<br><a href="https://github.com/hinastory/hexo-oembed" target="_blank" rel="noopener">https://github.com/hinastory/hexo-oembed</a></p>
<h3 id="oEmbed-derivery-compatible-site-demo"><a href="#oEmbed-derivery-compatible-site-demo" class="headerlink" title="oEmbed derivery compatible site demo"></a>oEmbed derivery compatible site demo</h3><h4 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a>YouTube</h4><figure class="highlight plain"><figcaption><span>Hexo tag</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% oembed https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v&#x3D;SX_ViT4Ra7k %&#125;</span><br></pre></td></tr></table></figure>

<div class="oembed-outer oembed-youtube"><div class="oembed-inner"><iframe width="480" height="270" src="https://www.youtube.com/embed/SX_ViT4Ra7k?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div></div>

<hr>
<h4 id="Twitter"><a href="#Twitter" class="headerlink" title="Twitter"></a>Twitter</h4><figure class="highlight plain"><figcaption><span>Hexo tag</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% oembed https:&#x2F;&#x2F;twitter.com&#x2F;hinastory999&#x2F;status&#x2F;1089514744174632960 %&#125;</span><br></pre></td></tr></table></figure>

<div class="oembed-error" style="color: red;"><span>failed getting oembed item.(url=https://twitter.com/hinastory999/status/1089514744174632960)</span></div>

<hr>
<h4 id="Speaker-Deck"><a href="#Speaker-Deck" class="headerlink" title="Speaker Deck"></a>Speaker Deck</h4><figure class="highlight plain"><figcaption><span>Hexo tag</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% oembed https:&#x2F;&#x2F;speakerdeck.com&#x2F;ladicle&#x2F;recap-kubecon-plus-cloud-nativecon-north-america-2018-overview %&#125;</span><br></pre></td></tr></table></figure>

<div class="oembed-outer oembed-speaker-deck"><div class="oembed-inner"><iframe id="talk_frame_485070" src="//speakerdeck.com/player/4a061694787a4febac0e96845d58b961" width="710" height="399" style="border:0; padding:0; margin:0; background:transparent;" frameborder="0" allowtransparency="true" allowfullscreen="allowfullscreen" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe>
</div></div>

<hr>
<h4 id="SlideShare"><a href="#SlideShare" class="headerlink" title="SlideShare"></a>SlideShare</h4><figure class="highlight plain"><figcaption><span>Hexo tag</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% oembed https:&#x2F;&#x2F;www.slideshare.net&#x2F;Odersky&#x2F;preparing-for-scala-3 %&#125;</span><br></pre></td></tr></table></figure>

<div class="oembed-outer oembed-slideshare"><div class="oembed-inner"><iframe src="https://www.slideshare.net/slideshow/embed_code/key/EM76C9qMh454Bl" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/Odersky/preparing-for-scala-3" title="Preparing for Scala 3" target="_blank">Preparing for Scala 3</a> </strong> from <strong><a href="https://www.slideshare.net/Odersky" target="_blank">Martin Odersky</a></strong> </div>

</div></div>

<hr>
<h4 id="Vimeo"><a href="#Vimeo" class="headerlink" title="Vimeo"></a>Vimeo</h4><figure class="highlight plain"><figcaption><span>Hexo tag</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% oembed https:&#x2F;&#x2F;vimeo.com&#x2F;311121738 %&#125;</span><br></pre></td></tr></table></figure>

<div class="oembed-outer oembed-vimeo"><div class="oembed-inner"><iframe src="https://player.vimeo.com/video/311121738?app_id=122963" width="640" height="360" frameborder="0" allow="autoplay; fullscreen" allowfullscreen title="Seeking Nirvana 3.3 - Strange Adventures"></iframe></div></div>

<hr>
<h4 id="TED"><a href="#TED" class="headerlink" title="TED"></a>TED</h4><figure class="highlight plain"><figcaption><span>Hexo tag</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% oembed  https:&#x2F;&#x2F;www.ted.com&#x2F;talks&#x2F;susan_etlinger_what_do_we_do_with_all_this_big_data %&#125;</span><br></pre></td></tr></table></figure>

<div class="oembed-outer oembed-ted"><div class="oembed-inner"><iframe src="https://embed.ted.com/talks/susan_etlinger_what_do_we_do_with_all_this_big_data" width="560" height="316" frameborder="0" scrolling="no" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe></div></div>

<hr>
<h4 id="Hatena-Blog"><a href="#Hatena-Blog" class="headerlink" title="Hatena Blog"></a>Hatena Blog</h4><figure class="highlight plain"><figcaption><span>Hexo tag</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% oembed https:&#x2F;&#x2F;rheb.hatenablog.com&#x2F;entry&#x2F;rhel8-python %&#125;</span><br></pre></td></tr></table></figure>

<div class="oembed-outer oembed-hatena-blog"><div class="oembed-inner"><iframe src="https://hatenablog-parts.com/embed?url=https%3A%2F%2Frheb.hatenablog.com%2Fentry%2Frhel8-python" title="Red Hat Enterprise Linux 8 のPython事情 - 赤帽エンジニアブログ" class="embed-card embed-blogcard" scrolling="no" frameborder="0" style="display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;"></iframe></div></div>

<hr>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>TAG-PLUGINS</category>
      </categories>
      <tags>
        <tag>TAG-PLUGINS</tag>
      </tags>
  </entry>
  <entry>
    <title>Descriptive Statistics</title>
    <url>/2020/02/19/2020-02-19-csci343-lec5/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Samples-and-Population"><a href="#Samples-and-Population" class="headerlink" title="Samples and Population"></a>Samples and Population</h2><p><strong>Statistics</strong> are usually meant to tell us something about <span class="label warning">a group</span> or <span class="label warning">set of things</span> (could be groups of people, cars on an aseembly line, or produce at a grocery store).</p>
<ol>
<li>We can’t measure EVERYONE, so we usually take a <ins>sample</ins> from the whole.</li>
<li>we call this our <strong><code>sample population</code></strong> or just <strong><code>population</code></strong>.</li>
</ol>
<div class="note primary no-icon">
            <ol><li>Populations are made up of samples.</li><li>Samples are individual measurements within a population.</li></ol>
          </div>

<hr>
<p><strong>통계</strong>(statistics)란 데이터를 이해하는 바탕이 되는 수리적 기법이다.</p>
<p>만약 데이터의 수가 적다면 데이터 자체를 보여 주는 것이 가장 좋은 방법일 수 있다. 하지만 데이터가 많다면 데이터를 다루는 것도 불편하고 이해하기도 힘들 것이다. 이럴 때 통계를 사용하면 데이터를 정제해서 중요한 정보만 전달해 줄 수 있다.</p>
<div class="note info no-icon">
            <h3 id="통계학-statistics"><a href="#통계학-statistics" class="headerlink" title="통계학(statistics)"></a>통계학(statistics)</h3><p>통계학(statistics)은 산술적 방법을 기초로 하여, 주로 다량의 데이터를 관찰하고 정리 및 분석하는 방법을 연구하는 수학의 한 분야이다.</p>
          </div>

<ul>
<li><a href="https://ko.wikipedia.org/wiki/%ED%86%B5%EA%B3%84%ED%95%99" target="_blank" rel="noopener">[Wiki]통계학</a></li>
</ul>
<hr>
<p>통계학에서는 주어진 데이터를 <span class="label warning">표본</span>(sample), 데이터가 대표하는 현상을 <span class="label warning">모집단</span>(population)이라고 하며, 표본을 바탕으로 모집단의 특성에 대한 결론을 유도하는 것을 통계적 추론(statistical inference)이라고 부른다. 즉 통계적 추론은 통계 이론을 바탕으로 한 현상의 일반화하고 하겠다. 현상에 대한 관찰에서 일반화할 수 있는 지식을 이끌어내는 것은 과학의 본령이니, 통계적 추론은 데이터 ‘과학’의 본질과도 맞닿아 있다고 하겠다.</p>
<p><a href="https://lh6.googleusercontent.com/dGLNLDXsDQH-vbf8u8ADMUeIE-tGuN9vetm5TR0H-6mRHxuwzdl_IsLPHRRa4aYGNoqGiAyO1C24ieuS3S3UaCx7pAkXdlZKCQ9fg-9lQZTZIvIHNgOQBDZsVfUcGtT2J1pu1MdB3m2IcAFs" title="데이터과학 프로세스(5): 통계적 추론" class="gallery-item"><img src="https://lh6.googleusercontent.com/dGLNLDXsDQH-vbf8u8ADMUeIE-tGuN9vetm5TR0H-6mRHxuwzdl_IsLPHRRa4aYGNoqGiAyO1C24ieuS3S3UaCx7pAkXdlZKCQ9fg-9lQZTZIvIHNgOQBDZsVfUcGtT2J1pu1MdB3m2IcAFs" alt="데이터과학 프로세스(5): 통계적 추론"></a></p>
<p>언뜻 마법처럼 들리는 통계적 추론을 가능하게 하는 것은 주어진 현상에 관한 통계적 모델이다. 주어진 현상이 어떤 모델에서 의해 발생했다고 가정하고, 그 모델에서 발생한 일정량의 결과물을 안다면 (표본), 그 모델에서 일반적으로 어떤 현상이 발생할지를 예측할 수 있는 것이다. 따라서 통계적 추론은 주어진 현상에 대한 가정과 데이터를 사용해 이런 통계적 모델을 만들고, 여기서 다양한 결론을 도출해내는 과정이다.</p>
<ul>
<li><a href="http://www.hellodatascience.com/?p=366" target="_blank" rel="noopener">데이터과학 프로세스(5): 통계적 추론</a></li>
</ul>
<hr>
<h3 id="Normal-Distribution"><a href="#Normal-Distribution" class="headerlink" title="Normal Distribution"></a>Normal Distribution</h3><ul>
<li>Generally, we expect a population to be somwhat homogeneous.</li>
<li>This means that the individuals in a population are fairly similar to each other.</li>
<li>Homogeneous populations often fit a <ins>Normal Distribution</ins>.</li>
</ul>
<div class="note info no-icon">
            <h4 id="확률-변수"><a href="#확률-변수" class="headerlink" title="확률 변수"></a>확률 변수</h4><ol><li>확률에 따라 변하는 값</li><li>특정확률로 나타나는 어떠한 사건에 수치를 부여한 변수</li><li>즉 무작위 실험을 했을 때, 특정 확률로 발생하는 각각의 결과를 수치적 값으로 표현하는 변수를 말한다.</li><li>예를 들어 확률 변수는 임의로 진행되는 실험에서 일정한 확률을 가지고 발생하는 결과에 실수 값을 부여하는 변수를 말한다.</li></ol>
          </div>

<ol>
<li>예를 들어 동전을 2번 던져서 그림 또는 숫자가 나오는 실험을 한다고 가정하면</li>
<li>그림이 나올 확률을 $\frac{1}{2}$, 숫자가 나올 확률을 $\frac{1}{2}$ 이라고 하자.</li>
<li>그리고 이 확률에 따라 발생하는 결과에 실수 값을 각각 그림의 경우 <code>1</code>, 숫자의 경우 <code>0</code> 을 부여한다고 하자.</li>
</ol>
<p><a href="../../../../img/csci343-lec5/random_variable.jpg" title="sample" class="gallery-item"><img src="../../../../img/csci343-lec5/random_variable.jpg" alt="sample"></a></p>
<p>이때 표본 공간을 대문자로 $S$, 그에 상응하는 실수 값을 부여하는 값을 $X$, 그리고 부여된 실수값 $X$에 따라 계산된 실수 값을 $R$이라고 하면 관계는 아래 그림과 같다.</p>
<p><a href="../../../../img/csci343-lec5/random_variable2.jpg" title="sample" class="gallery-item"><img src="../../../../img/csci343-lec5/random_variable2.jpg" alt="sample"></a></p>
<p>위 그림에서 표본공간(S)는 그림 또는 숫자가 나오는 조합이 되고, 각 조합에 그림=1, 숫자=0을 부여했을 때 나오는 값(R)이 {0, 1, 2}가 된다. 이를 확률 변수라고 한다.</p>
<div class="note danger no-icon">
            <h4 id="Warning"><a href="#Warning" class="headerlink" title="Warning"></a>Warning</h4><p>이때 산출된 값 R은 확률변수를 표본 공간의 각 조합에 부여함에 따라 나오는 값, 즉 (1,1), (0,1)과 같이 나타나는 조합 안의 숫자들을 더하여 나온 결과이다.<br>e.g. <code>(1,1)</code> -&gt; 1 + 1 = 2</p>
          </div>

<p>이때 확률 변수(R)가 취하는 모든 실수들의 집합을 <strong>상태 공간</strong>(State space)라고 하고, 그 상태공간을 구성하는 각 값이 나올 수 있는 가능성은 특정 확률로 주어지게 된다.</p>
<table>
<thead>
<tr>
<th>값</th>
<th>확률</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>$\frac{1}{4}$</td>
</tr>
<tr>
<td>1</td>
<td>$\frac{1}{2}$</td>
</tr>
<tr>
<td>2</td>
<td>$\frac{1}{4}$</td>
</tr>
</tbody></table>
<p>&nbsp;</p>
<p><strong>확률 함수</strong><br>확률 변수를 확률 값으로 대응시키는 함수</p>
<ul>
<li>이 확률 변수와 확률 함수를 이용하면 특정 사건이 일어날 확률을 계산할 수 있다.</li>
<li>그리고 그것을 도식화 시킨 것이 바로 확률 분포이다.</li>
</ul>
<p><strong>확률 분포</strong><br>확률변수에 의해 정의된 실수를 확률($0$ ~ $1$사이)에 대응시키는 함수</p>
<ul>
<li>즉, 위에서 정의한 표에 따라 x가 <code>0</code>이면 그에 대응되는 확률은 $\frac{1}{4}$ , <code>1</code>이면 $\frac{1}{2}$ 과 같이 이렇게 확률 변수의 상태공간의 각 실수 값과 확률 값을 대응시키는 것이 바로 확률 함수이다.</li>
</ul>
<p><strong>E.g.s</strong></p>
<ul>
<li>동전을 2번 던져 나오는 수: $x$</li>
<li>$x$가 취할 수 있는 값은 $x = 0, x = 1, x = 2$</li>
</ul>
<table>
<thead>
<tr>
<th align="center">$x$</th>
<th align="center">0</th>
<th align="center">1</th>
<th align="center">2</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$P(x)$</td>
<td align="center">$\frac{1}{4}$</td>
<td align="center">$\frac{1}{2}$</td>
<td align="center">$\frac{1}{4}$</td>
</tr>
</tbody></table>
<p>확률 변수, 확률 분포, 그리고 확률 함수의 관계를 정리하자면 다음과 같이 표현 할 수 있다.</p>
<p><a href="../../../../img/csci343-lec5/random_variable3.jpg" title="sample" class="gallery-item"><img src="../../../../img/csci343-lec5/random_variable3.jpg" alt="sample"></a></p>
<hr>
<ul>
<li><strong>표본공간</strong>(S, sample space): 어떤 특정 실험 또는 무작위 실험을 했을 때, 측정가능한 모든 결과들의 집합 (The set of all possible outcomes or results of that experiment)</li>
</ul>
<div class="note info">
            <h5 id="표본점-sample"><a href="#표본점-sample" class="headerlink" title="표본점(sample)"></a>표본점(sample)</h5><p>표본 공간은 정의 그대로 “측정 가능한 모든 결과의 집합”이다. 따라서 표본 공간을 이루는 개개의 관찰 결과를 우리는 표본점(sample)이라고 한다.</p><p>즉, 우리가 수집한 표본은 표본 공간의 부분집합이라고 할 수 있다.</p>
          </div>

<ul>
<li>사건(Event): 표본공간(S)의 부분 집합으로 어떤 조건을 만족하는 특정한 표본점(Sample)들의 집합</li>
<li>확률(Probability): 동일한 조건 하에서 동일한 실험을 무수히 많이 반복하여 실시할 때, 어떤 특정한 사건이 발생하는 비율</li>
</ul>
<blockquote>
<p>확률이란 어떤 실험을 했을 때, 나올 수 있는 모든 경우의 수 중 어떤 특정한 조건을 만족하는 사건이 발생하는 비율을 말한다.</p>
</blockquote>
<p>$$<br>P(A) = \frac {\text{A 사건이 일어나는 경우의 수}}{\text{모든 사건이 일어나는 경우의 수}}<br>$$</p>
<ul>
<li><a href="https://drhongdatanote.tistory.com/49" target="_blank" rel="noopener">[개념 통계]확률 변수와 확률 함수</a></li>
</ul>
<hr>
<h4 id="정규분포-Normal-distribution"><a href="#정규분포-Normal-distribution" class="headerlink" title="정규분포(Normal distribution)"></a>정규분포(Normal distribution)</h4><ul>
<li>정규분포는 통계학에서 가장 많이 쓰이는 확률분포이다.</li>
<li>우리 주변에서 일반적으로 발견되는 좌우 대칭의 종 모양으로 생긴 분포이다. (가우스 분포라고도 부른다.)</li>
<li>우리 주변의 많은 변수 또는 자료들이 정규분포를 따른다고 알려져 있다.[^1]</li>
</ul>
<p>[^1]:E.g.s 대한민국 남성의 키 분포, 수능 점수의 분포 등</p>
<ul>
<li>정규 분포는 평균 값에 가장 많은 데이터가 분포되어 있고 평균과 떨어질 수록 적게 분포되는 특징을 가지고 있다.</li>
</ul>
<ul>
<li><a href="https://drhongdatanote.tistory.com/50" target="_blank" rel="noopener">[개념 통계]정규분포와 표준정규분포 그리고 Z-score</a></li>
</ul>
<hr>
<p>인간과 자연 세상에서 일어나는 수많은 일을 설명하는 핵심 개념이다.<br>통계학에서 사용하는 각종 확률분포 중에서도 가장 중요하게 다루는 분포이다.</p>
<p>정규분포는 특정값의 출현비율을 그렸을 때, 중심(평균값)을 기준으로 좌우 대칭 형태가 나타나며, 좌우 극단으로 갈수록 급격하게 수치가 낮아지는 특징이 있다.</p>
<p><a href="https://ww.namu.la/s/8a577c27dc206b771919ed57c079106a8b5b3d5e7b71b061bbe1e0b2a1589e045fe1515556cfff97e673aab42a897a62508018a15a09bfc9fc2ad850f571346d776c8fdb7b6a81f28f0ec8963bbe605b16cfad49c902f6c95a308b5c16c18a39" title="Normal Distribution" class="gallery-item"><img src="https://ww.namu.la/s/8a577c27dc206b771919ed57c079106a8b5b3d5e7b71b061bbe1e0b2a1589e045fe1515556cfff97e673aab42a897a62508018a15a09bfc9fc2ad850f571346d776c8fdb7b6a81f28f0ec8963bbe605b16cfad49c902f6c95a308b5c16c18a39" alt="Normal Distribution"></a></p>
<p>그래서 변곡점도 2개 있는데, 모두 $μ$에서 $\sigma$만큼 떨어져 있다.하지만 표준편차의 수치가 위의 이미지처럼 꼭 기계적으로 딱딱 맞아야 하는 것은 아니고 대략 저런 ‘종’ 형태로 나타난다.</p>
<hr>
<h3 id="Outliers"><a href="#Outliers" class="headerlink" title="Outliers"></a>Outliers</h3><ul>
<li><p>We expect our samples to have some spread to them, but that in the end they will appear “normal”, Values that radically differ from this distribution are called <strong><code>outliers</code></strong></p>
</li>
<li><p><strong>An outlier is an observation that lies an abnormal distance from other values in a random sample from a population</strong></p>
</li>
</ul>
<div class="note primary">
            <h4 id="outlier"><a href="#outlier" class="headerlink" title="outlier"></a>outlier</h4><p>이상값은 모집단(population)에서 무작위로 추출한 표본(simple)의 다른 값과의 비정상적인 거리를 나타내는 관측치 입니다. 예를 들어 데이터에는 다양한 이유로 정상 범주를 벗어난 값이 존재할 수 있는데, 이런 값을 이상값(outlier)이라고 합니다.</p>
          </div>

<ul>
<li>When we take measurements we can to measure a signal indicative of something we are interested in.</li>
<li>If we have, two separate groups when we expect only one, we may be accidentally sampling from two differing populations.</li>
</ul>
<blockquote>
<p>This relates to the <ins>Central limit Theorem</ins>.</p>
</blockquote>
<h2 id="Averages"><a href="#Averages" class="headerlink" title="Averages"></a>Averages</h2><h3 id="Means"><a href="#Means" class="headerlink" title="Means"></a>Means</h3><ul>
<li>This is what most people think of when they think “average”.</li>
</ul>
<blockquote>
<p>Means are most representative of homogenous populations where few outliers exist.</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># from __future__ import division을 선언해 주지 않으면 값이 틀리게 계산될 수도 있다.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mean</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> sum(x)/len(x)</span><br></pre></td></tr></table></figure>

<h3 id="Medians"><a href="#Medians" class="headerlink" title="Medians"></a>Medians</h3><ul>
<li>This is the value at which 50% of your samples are above and 50% of your samples are below it.</li>
</ul>
<blockquote>
<p>For very noisy data, medians can be more descriptive of the population than the mean.</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">median</span><span class="params">(v)</span>:</span></span><br><span class="line"><span class="string">''''''</span>v의 중앙값을 계산 <span class="string">''''''</span></span><br><span class="line">    n = len(v)</span><br><span class="line">    sorted_v = sorted(v)</span><br><span class="line">    midpoint = n // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">    <span class="comment"># 데이터 포인트의 개수가 홀수면 중앙값을 반환</span></span><br><span class="line">        <span class="keyword">return</span> sorted_v[midpoint]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        lo = midpoint - <span class="number">1</span></span><br><span class="line">        hi = midpoint</span><br><span class="line">        <span class="keyword">return</span> (sorted_v[lo] + sorted_v[hi]) / <span class="number">2</span></span><br></pre></td></tr></table></figure>

<h3 id="Modes"><a href="#Modes" class="headerlink" title="Modes"></a>Modes</h3><p>This is the number that appears most frequently in your samples</p>
<ul>
<li>This one is a bit <code>less useful</code> for general purposes<ol>
<li>Count the number of unique samples in your data set.</li>
<li>The sample with the most occurrences (highest count) is your mode</li>
</ol>
</li>
</ul>
<blockquote>
<p>In the typical case, mode is not better then mean and median as a general representation of the population. Because most values we work with are on a gradient and seldom repeat due to fractional differences. It just depends in the ideal case.</p>
</blockquote>
<ul>
<li>일반적인 경우 Mode는 모집단(population)의 일반적 표현으로 평균과 중앙값을 사용하는 경우보다 좋지 않다. 왜냐하면 우리가 다루는 대부분의 데이터들은 기울기(gradient)가 있고 이견이 거의 없어 반복되지 않기 때문이다.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mode</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="string">''''''</span>최빈 값이 하나보다 많다면 list를 반환<span class="string">''''''</span></span><br><span class="line">    counts = Counter(x)</span><br><span class="line">    max_count = max(counts.value())</span><br><span class="line">    <span class="keyword">return</span> [x_i <span class="keyword">for</span> x_i, count <span class="keyword">in</span> counts.iteritems() <span class="keyword">if</span> count == max_count]</span><br></pre></td></tr></table></figure>

<h2 id="Dispersion"><a href="#Dispersion" class="headerlink" title="Dispersion"></a>Dispersion</h2><p>Samples and Populations usually have a spread of data</p>
<blockquote>
<p>The size of the <em>distribution</em></p>
</blockquote>
<ul>
<li>This is called <strong>dispersion</strong>.</li>
<li>Dispersion is how spread out your samples are from each other.</li>
</ul>
<div class="note info">
            <h3 id="산포도-dispersion"><a href="#산포도-dispersion" class="headerlink" title="산포도(dispersion)"></a>산포도(dispersion)</h3><p>산포도(dispersion) 는 데이터가 얼마나 퍼져 있는지를 나타낸다. 보통 0과 근접한 값이면 데이터가 거의 퍼져있지 않다는 의미이고 큰 값이면 매우 퍼져있다는 것을 의미하는 통계치이다.</p>
          </div>

<ul>
<li>예를 들어, 가장 큰 값과 작은 값의 차이를 나타내는 범위는 신포도를 나타내는 가장 간단한 통계치이다.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">data_range</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> max(x) - min(x)</span><br></pre></td></tr></table></figure>

<h3 id="Variance"><a href="#Variance" class="headerlink" title="Variance"></a>Variance</h3><blockquote>
<p>Variance is a calculation of how far a variable is from the mean of a variable.</p>
</blockquote>
<ol>
<li>essentially the average sum of squares of average difference from the group mean.</li>
</ol>
<ul>
<li>그룹 평균(group mean)과 다른 평균 제곱합(average sum of squares of average)</li>
</ul>
<ol start="2">
<li>It’s give us <ins>units squared</ins> which can be difficult to understand intuitively.</li>
</ol>
<blockquote>
<p>분산(Variance)은 하나의 변수가 변수의 평균에서 얼마나 멀리 떨어져 있는지 계산한 것이다. 분산은 산포도를 측정하는 더 복잡한 개념이며 다음과 같이 계산된다.</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">de_mean</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="string">''''''</span>x의 모든 데이터 포인트에서 평균을 뺌(평균을 <span class="number">0</span>으로 만들기 위해)<span class="string">''''''</span></span><br><span class="line">    x_bar = mean(x)</span><br><span class="line">    <span class="keyword">return</span> [x_i - x_bar <span class="keyword">for</span> x_i <span class="keyword">in</span> x]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">variance</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="string">''''''</span>x에 <span class="number">2</span>개 이상의 데이터 포인트가 존재한다고 가정<span class="string">''''''</span></span><br><span class="line">    n = len(x)</span><br><span class="line">    deviations = de_mean(x)</span><br><span class="line">    <span class="keyword">return</span> sum_of_squares(deviations) / (n - <span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p>식에서 편차의 제곱의 평균을 계산하는데 <code>n</code> 대신 <code>n - 1</code>로 나눈 것은 편차의 제곱합을 n으로 나누면 <code>bias</code> 때문에 모분산(population)에 대한 추정값이 실제 모분산보다 적게 계산되는 것을 보정해주기 위함이다.</p>
<h3 id="Standard-Deviation"><a href="#Standard-Deviation" class="headerlink" title="Standard Deviation"></a>Standard Deviation</h3><ul>
<li>A more common measure of dispersion is <ins>standard deviation</ins>.</li>
<li>It is the square root of the variance.<ul>
<li>It’s units are the <strong>same</strong> as your mean (not squared units)</li>
</ul>
</li>
</ul>
<blockquote>
<p>분산의 단위는 기존 단위의 제곱이다. 그렇기 때문에 분산 대신 원래 단위와 같은 단위를 가지는 표준 편차(standard dispersion)를 이용할 때가 많다.</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">standard_deviation</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> math.sqrt(variance(x))</span><br></pre></td></tr></table></figure>

<h4 id="Quantiles"><a href="#Quantiles" class="headerlink" title="Quantiles"></a>Quantiles</h4><p>The value below which some percentage falls</p>
<ol>
<li>Median is a special case quantile. It’s for 50 % of the population.</li>
<li>A common use of quantiles is to specify the Interquartile Range (or the values that fall above 25% of the population and below 75% of the population - i.e. the central 50%).</li>
<li>Interquartile range is often used with box plots</li>
</ol>
<table>
<thead>
<tr>
<th align="left">Entitity</th>
<th align="left">Mean</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Box</td>
<td align="left">interquartile range</td>
</tr>
<tr>
<td align="left">Mid-line</td>
<td align="left">median</td>
</tr>
<tr>
<td align="left">Whiskers</td>
<td align="left">95% of the population</td>
</tr>
<tr>
<td align="left">Stars</td>
<td align="left">outliers</td>
</tr>
</tbody></table>
<div class="note info no-icon">
            <h5 id="분위-quantile"><a href="#분위-quantile" class="headerlink" title="분위(quantile)"></a>분위(quantile)</h5><p>분위는 중앙값(median)을 포괄하는 개념인데, 데이터의 특정 백분위보다 낮은 값을 의미한다. (즉, median은 상위 50%보다 작은 값을 의미하는 것이다.)</p>
          </div>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quantile</span><span class="params">(x, p)</span>:</span></span><br><span class="line">    <span class="string">''''''</span>x의 p분위에 속하는 값을 반환<span class="string">''''''</span></span><br><span class="line">    p_index= int(p * len(x))</span><br><span class="line">    <span class="keyword">return</span> sorted(x)[p_index]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">interquetile</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="string">''''''</span>사분범위의 일반적인 사용은 사분범위 간 범위(또는 모집단의 <span class="number">25</span>% 이상과 모집단의 <span class="number">75</span>% 미만으로 떨어지는 값 - 즉 중심 <span class="number">50</span>%)를 지정하는 것이다.<span class="string">''''''</span></span><br><span class="line">    <span class="keyword">return</span> quantile(x, <span class="number">0.75</span>) - quantile(x, <span class="number">0.25</span>)</span><br><span class="line"></span><br><span class="line">s = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>quantile(s, <span class="number">0.25</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>quantile(s, <span class="number">0.5</span>)</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>quantile(s, <span class="number">0.75</span>)</span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>interquartile(s)</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure>

<h2 id="Correlation"><a href="#Correlation" class="headerlink" title="Correlation"></a>Correlation</h2><ul>
<li>Correlation is how two different variable/measurements relate to each other.</li>
<li>Variable that vary together are said to <strong>covary</strong>.</li>
<li>When things covary, they have a correlation. (they co-relate)</li>
</ul>
<div class="note primary">
            <h3 id="Correlation-analysis"><a href="#Correlation-analysis" class="headerlink" title="Correlation analysis"></a>Correlation analysis</h3><p>상관 분석(Correlation analysis) 또는 ‘상관관계’ 또는 ‘상관’은 확률론과 통계학에서 두 변수간에 어떤 선형적 또는 비선형적 관계를 갖고 있는 지를 분석하는 방법이다.</p><p>확률론과 통계학에서, 공분산(covariance)은 2개의 확률변수의 상관정도를 나타내는 값이다.(1개의 변수의 이산정도를 나타내는 분산과는 별개임) 만약 2개의 변수중 하나의 값이 상승하는 경향을 보일 때, 다른 값도 상승하는 경향의 상관관계에 있다면, 공분산의 값은 양수가 될 것이다. 반대로 2개의 변수중 하나의 값이 상승하는 경향을 보일 때, 다른 값이 하강하는 경향을 보인다면 공분산의 값은 음수가 된다.</p><p>분산(Variance)는 하나의 변수가 변수의 평균에서 얼마나 떨어져 있는지 계산한다면, 공분산(Covariance)은 두 변수가 각각 평균에서 얼마나 떨어져 있는지 살펴본다.</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">covariance</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    n = len(x)</span><br><span class="line">    <span class="keyword">return</span> dot(de_mean(x), de_mean(y)) / (n - <span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li><code>dot</code>은 각 성분별로 곱한 값을 더해 준다.</li><li>만약 x와 y 모두 각각의 평균보다 크거나 작은 경우, 양수가 더해질 것이다. (Positive Correlation)</li><li>반면 둘 중 하나는 평균보다 크고, 다른 하나는 평균보다 작을 경우, 음수가 더해질 것이다. (Negative Correlation)</li><li>만약 공분산이 0이면 그와 같은 관계가 존재하지 않는다는 것을 의미한다.</li></ul>
          </div>

<hr>
<ul>
<li>Things can correlate positivly, negatively, or not at all.</li>
</ul>
<ol>
<li><strong>Positive Correlation</strong>: When one variable is high, so is the other. When one variable is low, so is the other.</li>
<li><strong>Negative Correlation</strong>: When one variable is high, the other is low, and vice versa.</li>
</ol>
<ul>
<li>When the correlation gets closer to zero, that means that there is likely no correlation between two variables.</li>
<li>Just because something correlates with something does mean that<br>one <strong>CAUSED</strong> the other.</li>
</ul>
<hr>
<p>만약 두 변수 A, B 중 A는 변하지 않고 B만 2배로 증가한다면 공분산 또한 2배로 증가할 것이다, 하지만 생각해 보면 두 변수의 상관관계는 변하지 않았다. 다르게 이야기 하면, 값이 얼마나 커야 공분산이 크다고 판단할 수 있을까?</p>
<blockquote>
<p>이 경우 공분산에서 각각의 표준 편차를 나눠 준 상관 관계를 더 자주 살펴본다.</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">correlation</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    stdev_x = standard_deviation(x)</span><br><span class="line">    stdev_y = standard_deviation(y)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> stdev_x &gt; <span class="number">0</span> <span class="keyword">and</span> stdev_y &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> covariance(x, y) / stdev_x / stdev_y</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> <span class="comment"># 편차가 존재하지 않는다면 상관 관계는 0</span></span><br></pre></td></tr></table></figure>

<p>이때 이상치를 제거하면 더 강력한 상관관계를 볼 수 있다.</p>
<hr>
<h3 id="Correlation-and-Causation"><a href="#Correlation-and-Causation" class="headerlink" title="Correlation and Causation"></a>Correlation and Causation</h3><p>상관관계(correlation)는 인과관계(Causation)를 의미하지 않는다. 라는 애기를 많이 들어봤을 것이다. 특히 본인의 확고한 견해와 반대되는 데이터를 본 사람들이 자주하는 말이다. 하지만 이 말은 매우 중요하다.</p>
<ol>
<li>만약 x와 y가 강한 상관관계를 보인다면 x가 y를 발생시켰다고 볼 수도 이고, y가 x를 발생시켰다고 볼 수도 있다.<br></li>
<li>혹은 서로가 서로를 동시에 발생시키거나, 다른 외부 요인이 발생시키거나 아니면 아무런 인과관계가 없을 수도 있다.<br></li>
<li>예를 들어, 전기요금이 낮다고 해서 가스요금이 낮은 것은 아닌 것과 같은 경우이다.</li>
</ol>
<hr>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><h3 id="Statistic"><a href="#Statistic" class="headerlink" title="Statistic"></a>Statistic</h3><p>Something about a group / set of things.</p>
<h3 id="Population"><a href="#Population" class="headerlink" title="Population"></a>Population</h3><ol>
<li>population or sample population</li>
<li>It’s sample from whole.</li>
<li>It’s made up of samples</li>
</ol>
<h3 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h3><p>Individual measurement within a population</p>
<h3 id="Nomal-Distribution"><a href="#Nomal-Distribution" class="headerlink" title="Nomal Distribution"></a>Nomal Distribution</h3><ol>
<li>Type of continuous probability distribution for a real-valued random variable.</li>
<li>Samples in a population are fairly similar each other</li>
<li>Homogeneous population usually fit a normal distribution.</li>
</ol>
<h3 id="Outlier"><a href="#Outlier" class="headerlink" title="Outlier"></a>Outlier</h3><ol>
<li>Values that radically differ from distribution.</li>
<li>Related to Central Limit Theorm(CLT).</li>
</ol>
<h3 id="Average"><a href="#Average" class="headerlink" title="Average"></a>Average</h3><p>Is it a good for general representatoin of a population?</p>
<ol>
<li>Means: with few outliers exist</li>
<li>Median: For very noisy data</li>
<li>less useful: Modes (depends on case.. -&gt; cause, data are gradient &amp; seldom repeat due to fractional difference.)</li>
</ol>
<h3 id="dispersion-신포도"><a href="#dispersion-신포도" class="headerlink" title="dispersion(신포도)"></a>dispersion(신포도)</h3><ol>
<li>How spread out your samples from each other</li>
<li>The size of the distribution</li>
</ol>
<h3 id="variance-분산"><a href="#variance-분산" class="headerlink" title="variance(분산)"></a>variance(분산)</h3><ol>
<li>calculation of how far a variable is from the mean of a variable</li>
<li>The average sum of square of average difference from the group mean.</li>
</ol>
<h3 id="standard-deviation-표준-편차"><a href="#standard-deviation-표준-편차" class="headerlink" title="standard deviation(표준 편차)"></a>standard deviation(표준 편차)</h3><ol>
<li>A more common measure of dispersion</li>
<li>It’s units are the same as our mean</li>
</ol>
<h3 id="quantile"><a href="#quantile" class="headerlink" title="quantile"></a>quantile</h3><ol>
<li>The value below which some percentage falls</li>
<li>Median is a special case quantile. It’s for 50% of population</li>
</ol>
<h3 id="Interqurtile"><a href="#Interqurtile" class="headerlink" title="Interqurtile"></a>Interqurtile</h3><ol>
<li>Values that fall above 25% of population and below 75% of population.</li>
<li>Or the central 50%</li>
</ol>
<h3 id="Correlation-상관관계"><a href="#Correlation-상관관계" class="headerlink" title="Correlation (상관관계)"></a>Correlation (상관관계)</h3><p>How two different variable/measurements relate to each other</p>
<h3 id="Covery"><a href="#Covery" class="headerlink" title="Covery"></a>Covery</h3><ol>
<li>Or Coveriance</li>
<li>Variable that vary together</li>
<li>When things covary, they have a correlation.</li>
<li>A value that indicates the correlation of two probability variables</li>
</ol>
<h4 id="Positive-Corrleation"><a href="#Positive-Corrleation" class="headerlink" title="Positive Corrleation"></a>Positive Corrleation</h4><p>one is high, so is the other</p>
<h4 id="Negative-Correlation"><a href="#Negative-Correlation" class="headerlink" title="Negative Correlation"></a>Negative Correlation</h4><p>ohe is high, the other is low, vice versa.</p>
<h4 id="Get-closer-to-Zero"><a href="#Get-closer-to-Zero" class="headerlink" title="Get closer to Zero"></a>Get closer to Zero</h4><p>No corrleation between two varaibles.</p>
<h3 id="correlation-and-causation-상관관계와-인과관계"><a href="#correlation-and-causation-상관관계와-인과관계" class="headerlink" title="correlation and causation(상관관계와 인과관계)"></a>correlation and causation(상관관계와 인과관계)</h3><p>Correlation may not mean Causation</p>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 343</category>
      </categories>
      <tags>
        <tag>CSCI 343</tag>
      </tags>
  </entry>
  <entry>
    <title>Distributions</title>
    <url>/2020/02/19/2020-02-20-csci343-lec6/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="확률-분포-함수"><a href="#확률-분포-함수" class="headerlink" title="확률 분포 함수"></a>확률 분포 함수</h2><p>확률 분포 함수는 확률 변수의 분포 즉, 확률 분포를 수학적으로 정의하기 위한 수식이다.</p>
<p>확률 밀도 함수 (Probability Density Function, PDF)는 확률 변수의 분포를 나타내는 함수로, 확률 밀도 함수 $f(x)$와 구간 $[a,b]$에 대해서 확률 변수 $X$가 구간에 포함될 확률 $(a \leq X \leq b)$는 아래와 같은 공식이 된다.<br>&nbsp;<br>$$ \int _{a}^{b}f(x)dx $$<br>&nbsp;<br>확률 밀도 함수 $f(x)$는 다음의 두 조건을 만족해야 한다.</p>
<ol>
<li>모든 실수값 $X$에 대해 $f(x) \geq 0$</li>
<li>$\int _{-\infty}^{\infty}f(x)dx = 1$</li>
</ol>
<p>확률 밀도 함수와 누적 분포 함수에는 다음과 같은 수식이 성립한다.</p>
<blockquote>
<p>$$F(x) = \int _{-\infty}^{x}f(x)dx$$<br>$$f(x) = \frac{d}{dx}F(x)$$</p>
</blockquote>
<hr>
<h2 id="중심-극한-정리"><a href="#중심-극한-정리" class="headerlink" title="중심 극한 정리"></a>중심 극한 정리</h2><p>주어진 간격 내에 어떤 값을 중심으로 임의의 변동을 가지는 임의의 변수는 표본 수가 증가함에 따라 대략 정상적으로 분포될 것이라는 정리이다.</p>
<p>정규 분포가 중요한 이유 중 하나는 중심극한정리 때문이다. 중심 극한 정리는 동일한 확률분포를 가진 독립 확률 변수 n개의 평균의 분포는 n이 적당히 크다면 정규분포에 가까워진다는 정리이다</p>
<div class="note no-icon">
            <p>이때, 정규 분포(혹은 가우스 분포)란 우리 주변에서 일반적으로 발견되는 좌우 대칭의 종 모양으로 생긴 분포를 말한다. 정규분포는 평균값에 가장 많은 데이터가 분포되어 있고 평균과 떨어질수록 데이터에 적게 분포하는 특징을 가지고 있다.</p>
          </div>

<p><a href="https://upload.wikimedia.org/wikipedia/commons/c/cd/Clt_in_action.gif" title="wiki" class="gallery-item"><img src="https://upload.wikimedia.org/wikipedia/commons/c/cd/Clt_in_action.gif" alt="wiki"></a></p>
<p>매우 불규칙한 분포도 충분히 많은 수를 더하면 중심극한정리에 따라 결국 정규분포로 수렴한다.<br>&nbsp;</p>
<h2 id="누적-분포-함수"><a href="#누적-분포-함수" class="headerlink" title="누적 분포 함수"></a>누적 분포 함수</h2><p>누적 분포 함수(cumulative distribution function, cdf)는 주어진 확률 변수가 특정 값보다 작거나 같은 확률을 나타내는 함수이다. 즉, 무작위 값이 정규 분포 모집단 내에서 주어진 값보다 작거나 같을 확률을 제공한다.</p>
<p>확률 변수  X 에 대한 누적 확률 분포  F(x) 의 수학적 정의는 다음과 같다</p>
<p>$$<br>F(x) = P({X \lt x}) = P(X \lt x)<br>$$<br>&nbsp;<br>몇가지 누적 확률 분포 표시의 예를 들면 다음과 같다.</p>
<ul>
<li>$F(−1)$: 확률 변수가 $−\infty$ 이상 -1 미만인 구간 내에 존재할 확률 즉, $P({-\infty \le X \lt −1})$</li>
<li>$F(0)$: 확률 변수가 $−\infty$ 이상 0 미만인 구간 내에 존재할 확률 즉,  $P({-\infty \le X \lt 0})$</li>
<li>$F(1)$: 확률 변수가 $−\infty$ 이상 1 미만인 구간 내에 존재할 확률 즉,  $P({-\infty \le X \lt 1})$<br>…</li>
<li>$F(10)$: 확률 변수가 $−\infty$ 이상 10 미만인 구간 내에 존재할 확률 즉,  $P({-\infty \le X \lt 10})$<br>…</li>
</ul>
<p>시계 바늘 확률 문제의 경우를 예로 들어보자. 이 경우에는 각도가 0도부터 360까지이지만 음의 무한대를 시작점으로 해도 상관없다.</p>
<a href="https://datascienceschool.net/upfiles/84a2a4193ef545d89e7c4417262942ea.png" class="gallery-item"><img src="https://datascienceschool.net/upfiles/84a2a4193ef545d89e7c4417262942ea.png" class="Example" title="Example 200 200"></a>

<p>$F(0) = P({-\infty^{\circ} \le \theta \lt 0^{\circ} }) = 0$<br>$F(10) = P({-\infty^{\circ} \le \theta \lt 10^{\circ} }) = \frac{1}{36}$<br>$F(20) = P({-\infty^{\circ} \le \theta \lt 20^{\circ} }) = \frac{2}{36}$<br>…<br>$F(350) = P({-\infty^{0} \le \theta \lt 350^{0}}) = \frac{35}{36}$<br>$F(360) = P({-\infty^{0} \le \theta \lt 360^{0}}) = 1$<br>$F(370) = P({-\infty^{0} \le \theta \lt 370^{0}}) = 1$<br>$F(380) = P({-\infty^{0} \le \theta \lt 380^{0}}) = 1$<br>…</p>
<p>이를 그림으로 표현하면 다음과 같다.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> mplot</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">t = np.array(range(<span class="number">-100</span>, <span class="number">461</span>))</span><br><span class="line">F = t/<span class="number">360</span></span><br><span class="line"></span><br><span class="line">F[t &lt; <span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">F[t &gt; <span class="number">360</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">mplot.title(<span class="string">"Cumulative Distribution Function"</span>)</span><br><span class="line">mplot.xlabel(<span class="string">'x $(\deg.)$'</span>)</span><br><span class="line">mplot.ylabel(<span class="string">'$F(x)$'</span>)</span><br><span class="line"></span><br><span class="line">mplot.xlim(t[<span class="number">0</span>], t[<span class="number">-1</span>])</span><br><span class="line">mplot.xticks([<span class="number">0</span>, <span class="number">180</span>, <span class="number">360</span>])</span><br><span class="line">mplot.plot(t, F)</span><br><span class="line">mplot.show()</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/csci343-lec6/cdf_graph.png" title="example" class="gallery-item"><img src="../../../../img/csci343-lec6/cdf_graph.png" alt="example"></a></p>
<p>누적 밀도 함수 즉 cdf는 다음과 같은 특징을 가진다.</p>
<ul>
<li>$F(-\infty) = 0$</li>
<li>$F(+\infty) = 1$</li>
<li>$F(x) \ge F(y)\text{    if    }x &gt; y$</li>
</ul>
<p>확률밀도함수(PDF)는 특정 확률 변수 구간의 확률이 다른 구간에 비해 <strong>상대적으로</strong> 얼마나 높은가를 나타내는 것이며 그 값 자체가 확률은 아니다라는 점을 명심해야 한다.</p>
<hr>
<h2 id="통계적-가설-검정"><a href="#통계적-가설-검정" class="headerlink" title="통계적 가설 검정"></a>통계적 가설 검정</h2><p>통계적 가설 검정(statistical hypothesis test)은 통계적 추측의 하나로서, 모집단 실제의 값이 얼마가 된다는 주장과 관련해, 표본의 정보를 사용해서 가설의 합당성 여부를 판정하는 과정을 의미한다. 간단히 가설 검정(hypothesis test)이라고 부르는 경우가 많다.</p>
<ul>
<li>Our CDF tells us the probability that some value lies below a certain threshold.</li>
<li>50% of the population should lie on either side of the vertical line.</li>
<li>This kind of statistical test is called a <strong>one-tailed test.</strong></li>
</ul>
<p>통계적으로 가설을 검정하기 위해 먼저 귀무가설과 대립가설을 세워야 한다. 어떤 모수(평균, 분산, 비울, etc.)에 대해 가설을 설정할 때, 일반적을 5 가지 경우가 있다.</p>
<ol>
<li>유의수준의 결정, 귀무가설과 대립가설 설정</li>
<li>검정통계량의 설정</li>
<li>기각역의 설정</li>
<li>검정통계량 계산</li>
<li>통계적인 의사결정</li>
</ol>
<hr>
<h2 id="귀무가설과-대립-가설-설정"><a href="#귀무가설과-대립-가설-설정" class="headerlink" title="귀무가설과 대립 가설 설정"></a>귀무가설과 대립 가설 설정</h2><p><strong>귀무 가설</strong><br>귀무 가설(null hypothesis, $H_{0}$)은 통계학에서 처음부터 버릴 것을 예상하는 가설이다. 차이가 없거나 의미있는 차이가 없는 경우의 가설이며 이것이 맞거나 맞지 않다는 통계학적 증거를 통해 증명하려는 가설이다.</p>
<p><strong>대립 가설</strong><br>대립 가설(alternative hypothesis, $H_{1}$) 또는 연구 가설 또는 유지 가설은 귀무가설에 대립하는 명제이다. 보통, 모집단에서 독립변수와 결과변수 사이에 어떤 특정한 관련이 있다는 꼴이다. 어떤 가능성에 대해 확률적인 가설검정을 할 때 귀무가설과 함께 사용된다. 이 가설은 귀무가설처럼 검정을 직접 수행하기는 불가능하며 귀무가설을 기각함으로써 받아들여지는 반증의 과정을 거쳐 받아들여질 수 있다. 대립 가설은 <strong>양측 대립 가설</strong> 과 <strong>단측 대립 가설</strong> 이 있다.</p>
<div class="note info no-icon">
            <h3 id="단측-양측-대립-가설"><a href="#단측-양측-대립-가설" class="headerlink" title="단측/양측 대립 가설"></a>단측/양측 대립 가설</h3><p><strong>단측 대립 가설</strong><br>독립 변수와 결과 변수와의 관련성을 검정할 때 그 방향이 미리 어느 한쪽으로 결정되어 있는 경우이다. 예를 들어 새로 개발된 심장병 치료 약물이 기존의 약물요법에 비교하여 더 효과가 좋은가?라는 것을 밝혀낼 때에 더 효과가 좋다는 가설이 단측대립가설이다.</p><p><strong>양측 대립 가설</strong><br>독립변수와 종속변수간에 관련성 혹은 차이가 존재하는가?라는 면에서만 관심을 가지는 것이며 그 방향은 따지지 않는 가설이다. 예를 들어 새로 개발된 심장병 치료 약물이 기존의 약물요법에 비교하여 효과에 차이가 있다라고 가정하는 것이다.</p>
          </div>

<ul>
<li><p>먼저 연구 가설 내용을 (e.g. 미국 성인여자의 신장은 크다)을 통계적 가설 (e.g. 미국 성인여자의 평균신장은 180cm이다.)로 바꾸어 줌으로써 가설 검정이 시작된다.</p>
</li>
<li><p>가령, 미국 성인 여성의 평균 신장이 180cm라는 하나의 가설을 검정할 계획이라면, 귀무 가설의 표기는 다음과 같다.</p>
</li>
</ul>
<p>$$<br>H_{0}: \mu = 180<br>$$</p>
<p>해당 귀무 가설과 반대되는 대립 가설은 다음과 같은 형태가 있다.</p>
<ul>
<li>제1형: $H_{1} : \mu \ne 180$</li>
<li>제2형: $H_{1} : \mu \le 180$</li>
<li>제3형: $H_{1} : \mu \ge 180$</li>
</ul>
<p>여기서 제 1형은 <strong>양측 검정</strong>(two-sided test, two tailed test), 제 2형, 제 3형은 <strong>단측 검정(one-sided test)</strong> 이라고 지칭한다. 단측검정을 나누자면 제 2형을 <strong>좌측 검정</strong> (lower tailed test)이라고 하며, 제 3형은 <strong>우측 검정</strong> (upper tailed test)이라고 부른다.</p>
<p>양측검정은 가설 검증에서 <strong>기각 영역</strong>(rejection region)이 양쪽에 있는 것이고, 그러므로 유의수준 $\alpha$ 도 양극단으로 갈라져 한쪽의 면적이 $\frac{\alpha}{2}$가 된다. 기각영역이 어느 한쪽에만 있게 되는 경우를 <strong>단측검정</strong> 이라고 한다.</p>
<blockquote>
<p>즉, 단측 검정이란 대립 가설이 어느 특정 모수 이상이거나 이하일 때 검정하는 것이다.</p>
</blockquote>
<hr>
<ul>
<li>Has limitations due to only testing if something is above or below a certain value</li>
<li>We can say that values below this level differ from 90% of the population, values below this that cut off could be at most 10% of the population we are measuring. This means they are less likely to be the same population.</li>
</ul>
<blockquote>
<p>이 수준 이하의 값은 모집단의 90 %와 다르다고 말할 수 있습니다.이 차단 ​​값 아래의 값은 측정중인 모집단의 최대 10 % 일 수 있습니다. 이것은 그들이 같은 인구가 될 가능성이 적다는 것을 의미합니다.</p>
</blockquote>
<ul>
<li>For the values that lie <span class="label warning">below</span> the cut off we will incorrectly reject 10% of the time! This is called a <strong>False Negative</strong>.(AKA a Type II Error).</li>
<li>For the values that lie <span class="label warning">above</span> the cut off that are NOT in our population, we incorrectly accept the values as members. This is called a <strong>False Positive</strong>.(AKA a Type I Error).</li>
</ul>
<div class="note info no-icon">
            <h4 id="거짓-양성과-음성"><a href="#거짓-양성과-음성" class="headerlink" title="거짓 양성과 음성"></a>거짓 양성과 음성</h4><p><strong>거짓 양성(false positive)</strong><br>거짓 양성 또는 1종 오류(<code>type I error</code>)는 통계상 실제로는 음성인데 검사 결과는 양성이라고 나오는 것이다. 예를 들어, 어떤 메일이 스팸 메일인지 검사하는 프로그램이 있다고 하자. 이때 어떤 메일이 실제로는 스팸 메일이 아니지만 프로그램 검사 결과 스팸 메일이라고 판정한다면, 이것이 거짓 양성이다. 위양성, 혹은 거짓 경보(false alarm)라고도 한다.</p><p><strong>거짓 음성(false negative)</strong><br>거짓 음성 또는 2종 오류(<code>type II error</code>)는 통계상 실제로는 양성인데 검사 결과는 음성이라고 나오는 것이다. 예를 들어, 어떤 메일이 스팸 메일인지 검사하는 프로그램이 있다고 하자. 이때 어떤 메일이 실제로는 스팸 메일임에도 불구하고 프로그램 검사 결과 스팸 메일이 아니라고 판정한다면, 이것이 거짓 음성이다. 이러한 현상은 암 진단이나 보안 진단과 같은 분야에서는 거짓 양성에 비해 오 탐지에 대한 비용이 커서 그것을 잘 고려하여 검사 알고리즘을 개발해야 한다.</p>
          </div>

<p>실제로 검사 알고리즘을 개발한다면, 거짓 양성과 거짓 음성 사이에 <span class="label warning">trade-off</span>(어느 한편을 늘리면 다른 한편은 그 만큼 줄어드는 것)가 필연적으로 생기게 된다.</p>
<hr>
<h2 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h2><h3 id="Probability-density-functions-PDF"><a href="#Probability-density-functions-PDF" class="headerlink" title="Probability density functions (PDF)"></a>Probability density functions (PDF)</h3><ol>
<li>Function representing distribution of probability variables</li>
<li>Ofthen fits a Normal distribution!</li>
</ol>
<h3 id="Central-limit-theorm-CLT"><a href="#Central-limit-theorm-CLT" class="headerlink" title="Central limit theorm (CLT)"></a>Central limit theorm (CLT)</h3><ol>
<li>It is a theorm that if N is moderaely large, then the distribution of mean of N probability variable (with same probabiliy distribution) is closer to the normal distribution</li>
</ol>
<h3 id="Comulative-Distribution-Functions-CDF"><a href="#Comulative-Distribution-Functions-CDF" class="headerlink" title="Comulative Distribution Functions (CDF)"></a>Comulative Distribution Functions (CDF)</h3><ol>
<li>Provides the probability that a random value is ‘&lt;’ or ‘=’ to a given value within a normally distributed population.</li>
<li>It means that CDF tells us the probability that some value lies below a certain threshold.</li>
</ol>
<h3 id="False-positive-negative"><a href="#False-positive-negative" class="headerlink" title="False positive/negative"></a>False positive/negative</h3><ol>
<li>False Positive (Type I Error) is a result that indicates a given condition exists, when it does not.</li>
<li>False negative (Type II Error) is a test result that indicates that a condition does not hold, while in fact it does.</li>
</ol>
<h3 id="One-tailed-test"><a href="#One-tailed-test" class="headerlink" title="One-tailed test"></a>One-tailed test</h3><ol>
<li>A one-tailed test is a (statistical) test (in which the critical area of a distribution is one-sided so that) it is either [greater than or less than] a certain value, but not both.</li>
</ol>
<h3 id="Two-tailed-test"><a href="#Two-tailed-test" class="headerlink" title="Two-tailed test"></a>Two-tailed test</h3><ol>
<li>A two-tailed test is a method (in which the critical area of a distribution is two-sided) and tests whether a sample is [greater than or less than] a certain range of values.</li>
</ol>
<hr>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li>WIKI<ul>
<li><a href="https://ko.wikipedia.org/wiki/1%EC%A2%85_%EC%98%A4%EB%A5%98%EC%99%80_2%EC%A2%85_%EC%98%A4%EB%A5%98" target="_blank" rel="noopener">1종 오류와 2종 오류</a></li>
<li><a href="https://ko.wikipedia.org/wiki/%EB%88%84%EC%A0%81_%EB%B6%84%ED%8F%AC_%ED%95%A8%EC%88%98" target="_blank" rel="noopener">누적분포함수</a></li>
<li><a href="https://ko.wikipedia.org/wiki/%EA%B0%80%EC%84%A4_%EA%B2%80%EC%A0%95" target="_blank" rel="noopener">가설검정</a></li>
</ul>
</li>
<li>Others<ul>
<li><a href="https://ratsgo.github.io/statistics/2017/06/27/normal/" target="_blank" rel="noopener">ratsgo’s blog - 정규분포 누적분포함수와 중심극한정리</a></li>
<li><a href="https://datascienceschool.net/view-notebook/fa24ed1f520f4691b8bce979860ebc0a/" target="_blank" rel="noopener">데이터 사이언스 스쿨 - 누적분포함수와 확률밀도함수</a></li>
<li><a href="https://drhongdatanote.tistory.com/50" target="_blank" rel="noopener">필로홍의 데이터 노트 - [개념통계] 정규분포와 표준정규분포 그리고 z-score</a></li>
</ul>
</li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 343</category>
      </categories>
      <tags>
        <tag>CSCI 343</tag>
      </tags>
  </entry>
  <entry>
    <title>Test1 Review Questions</title>
    <url>/2020/02/18/2020-02-18-csci259-test1/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="The-characteristics-of-3-Language"><a href="#The-characteristics-of-3-Language" class="headerlink" title="The characteristics of 3 Language"></a>The characteristics of 3 Language</h2><p>Machine, Assembly, High-Level Language</p>
<h3 id="Machine-Language"><a href="#Machine-Language" class="headerlink" title="Machine Language"></a>Machine Language</h3><ul>
<li>Machine language is a set of primitive instructions built into every computer</li>
<li>The instructions are in the form of binary code.</li>
<li>The programs are highly difficult ti read and modify.</li>
</ul>
<h3 id="Assembly-Language"><a href="#Assembly-Language" class="headerlink" title="Assembly Language"></a>Assembly Language</h3><ul>
<li>Assembly languages were developed to make programming easy.</li>
<li>A program called <span class="label warning">assembler</span> is used to convert assembly language programs into machine code.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ADDF3 R1, R2, R3 &gt; 1101101010011010</span><br></pre></td></tr></table></figure>

<h3 id="High-Level-Language"><a href="#High-Level-Language" class="headerlink" title="High-Level Language"></a>High-Level Language</h3><p>The high-level languages are English-like and easy to learn and program.</p>
<a href="https://sites.google.com/site/introductiontocpluspluss/_/rsrc/1520025768677/figures/fig2.png" title="High-Level Program to an Executable File" class="gallery-item"><img src="https://sites.google.com/site/introductiontocpluspluss/_/rsrc/1520025768677/figures/fig2.png" class="" width="500" height="300" title="High-Level Program to an Executable File" alt="High-Level Program to an Executable File"></a>

<h2 id="Interpreting-Compiling-Source-Code"><a href="#Interpreting-Compiling-Source-Code" class="headerlink" title="Interpreting/Compiling Source Code"></a>Interpreting/Compiling Source Code</h2><p>Because a computer cannot understand a source program, a source program must be translated into machine code for execution. The translation can be done using an interpreter or a compiler.</p>
<h3 id="Interpreter"><a href="#Interpreter" class="headerlink" title="Interpreter"></a>Interpreter</h3><ol>
<li>An interpreter reads one statement from the source code</li>
<li>Translates it to the machine code, and than executes it right away.</li>
</ol>
<h3 id="Compiler"><a href="#Compiler" class="headerlink" title="Compiler"></a>Compiler</h3><ol>
<li>A compiler translates the entire source code into a machine code file.</li>
<li>The machine-code file is then executed.</li>
</ol>
<h3 id="Reference-Video"><a href="#Reference-Video" class="headerlink" title="Reference Video"></a>Reference Video</h3><div class="video-container"><iframe src="https://www.youtube.com/embed/9sSxdhYGYSM" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
<!-- <iframe width="560" height="315" src="https://www.youtube.com/embed/9sSxdhYGYSM" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe> -->

<h2 id="The-structure-of-a-C-program"><a href="#The-structure-of-a-C-program" class="headerlink" title="The structure of a C++ program"></a>The structure of a C++ program</h2><p>The main function is the entry point where the program begins execution.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt; // preprocessor directive</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; <span class="comment">// keywords (or reserved words)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// main function</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Welcome to C++!"</span> &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// statement</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>A statement represents an action or a sequence of actions.</li>
<li>Every statement in C++ ends with a semicolon.</li>
<li>Key words or reserved words are words that have a specific meaning to the compiler and cannot be used for other purposes in the program.</li>
<li>The <code>#include &lt;iostream&gt;</code> directive tells the computer to include the contents of the iostream file in the current program</li>
<li>The using namespace std indicates that the definitions of standard C++ keywords and classes are located in the std namespace.<ul>
<li>A namespace is a special area in the computer’s internal memory.</li>
</ul>
</li>
</ul>
<h2 id="Data-Types-in-C"><a href="#Data-Types-in-C" class="headerlink" title="Data Types in C++"></a>Data Types in C++</h2><h3 id="Integer-Data-Types"><a href="#Integer-Data-Types" class="headerlink" title="Integer Data Types"></a>Integer Data Types</h3><ul>
<li>Integer variables can hold <strong>whole numbers</strong> such as 12, 7, and -99.</li>
<li>There are several integer data types in C++, we will mainly use <code>int</code> in class.</li>
<li>Variables of the same type can be defined on separate lines or on the same line.</li>
</ul>
<table>
<thead>
<tr>
<th align="left">Data Types</th>
<th align="left">Typical Size</th>
<th align="left">Range</th>
</tr>
</thead>
<tbody><tr>
<td align="left">short int (unsigned)</td>
<td align="left">2 bytes</td>
<td align="left">$-2^{15}$ ~ $2^{15}-1$</td>
</tr>
<tr>
<td align="left">int (unsigned)</td>
<td align="left">4 bytes</td>
<td align="left">$-2^{31}$ ~ $2^{31}-1$</td>
</tr>
<tr>
<td align="left">long int (unsinged)</td>
<td align="left">4 bytes</td>
<td align="left">$-2^{31}$ ~ $2^{31}-1$</td>
</tr>
<tr>
<td align="left">long long int (unsigned)</td>
<td align="left">8 bytes</td>
<td align="left">$-2^{63}$ ~ $2^{63}-1$</td>
</tr>
</tbody></table>
<h3 id="Floating-point-Data-Types"><a href="#Floating-point-Data-Types" class="headerlink" title="Floating-point Data Types"></a>Floating-point Data Types</h3><ul>
<li>They can hold <strong>real numbers</strong> such as 12.45, -3.8.</li>
<li>Theare are three floating-point data types in C++.</li>
</ul>
<table>
<thead>
<tr>
<th align="left">Data Type</th>
<th align="left">Key Word</th>
<th align="left">Range</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Single precision</td>
<td align="left">float</td>
<td align="left">4 bytes. Numbers between $\pm3.4E-38$ and $\pm3.4E38$</td>
</tr>
<tr>
<td align="left">Double precision</td>
<td align="left">double</td>
<td align="left">8 bytes. Numbers between $\pm1.7E-308$ and $\pm1.7E308$</td>
</tr>
<tr>
<td align="left">Long double precision</td>
<td align="left">long double</td>
<td align="left">8 bytes. Numbers between $\pm1.7E-308$ and $\pm1.7E308$</td>
</tr>
</tbody></table>
<h2 id="Restrictions-for-variable-names"><a href="#Restrictions-for-variable-names" class="headerlink" title="Restrictions for variable names"></a>Restrictions for variable names</h2><ol>
<li>An identifier is a sequence of characters that consist of letters(0-9), digits(a-z/A-Z), and underscores(_).</li>
<li>An identifier must start with a <strong>letter</strong> or an <strong>underscore</strong>. It cannot start with a digit.</li>
<li>An identifier cannot be a reserved word.</li>
<li>An identifier cannot be true, false, or null.</li>
<li>An identifier can be of any length.</li>
<li>Variables and named constants are identifiers.</li>
</ol>
<hr>
<h2 id="Declare-a-constant"><a href="#Declare-a-constant" class="headerlink" title="Declare a constant"></a>Declare a constant</h2><p>A named constant is an identifier that represents a permanent value.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="number">3.14159</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_VALUE = <span class="number">3</span>;</span><br></pre></td></tr></table></figure>

<h2 id="Naming-Conventions"><a href="#Naming-Conventions" class="headerlink" title="Naming Conventions"></a>Naming Conventions</h2><p>Choose meaningful and descriptive names</p>
<h3 id="Variables-and-function-names"><a href="#Variables-and-function-names" class="headerlink" title="Variables and function names"></a>Variables and function names</h3><ol>
<li>Use <code>lowercase</code>.</li>
<li>If the name consists of several words, concatenate all in one, use lowercase for the first word, and capitalize the first letter of each subsequent word in the name.</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Variable</span></span><br><span class="line"><span class="keyword">double</span> radius, area;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Funcion</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">computeArea</span><span class="params">()</span> </span>&#123; ... &#125;</span><br></pre></td></tr></table></figure>

<h3 id="Named-Constants"><a href="#Named-Constants" class="headerlink" title="Named Constants"></a>Named Constants</h3><p>Capitalize all letters in named constants, and use underscores to connect words.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="number">3.14159</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_VALUE = <span class="number">3</span>;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>see this for reference</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://docs.popekim.com/ko/coding-standards/cpp" target="_blank" rel="noopener">C++ 코딩 표준</a></td>
</tr>
<tr>
<td><a href="https://docs.unrealengine.com/en-US/Programming/Development/CodingStandard/index.html" target="_blank" rel="noopener">언리얼 엔진 4 코딩 표준</a></td>
</tr>
<tr>
<td><a href="https://docs.google.com/document/d/0Bw_EFnOWRcU4ajhGRV9udmFqbFU/edit" target="_blank" rel="noopener">IDSoftware-CodeStyleConventions</a></td>
</tr>
</tbody></table>
<h2 id="Format-specifications-in-printf"><a href="#Format-specifications-in-printf" class="headerlink" title="Format specifications in printf"></a>Format specifications in printf</h2><table>
<thead>
<tr>
<th align="left">formats</th>
<th align="left">data</th>
</tr>
</thead>
<tbody><tr>
<td align="left">%d</td>
<td align="left">integers</td>
</tr>
<tr>
<td align="left">%.nf</td>
<td align="left">doubles withs <code>n</code> decimal places</td>
</tr>
<tr>
<td align="left">%c</td>
<td align="left">single characters</td>
</tr>
<tr>
<td align="left">%s</td>
<td align="left">strings (must use <code>c_str()</code> function with the string variable)</td>
</tr>
</tbody></table>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> zipCode = <span class="number">38655</span>;</span><br><span class="line"><span class="built_in">string</span> city = <span class="string">"Oxford"</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The city %s has the zip code %d\n"</span>,</span><br><span class="line">city.c_str(), zipCode);</span><br></pre></td></tr></table></figure>

<h2 id="Escape-sequences"><a href="#Escape-sequences" class="headerlink" title="Escape sequences"></a>Escape sequences</h2><table>
<thead>
<tr>
<th align="left">Escape sequence</th>
<th align="left">Name</th>
<th align="left">Unicode</th>
<th align="left">Decimal value</th>
</tr>
</thead>
<tbody><tr>
<td align="left">\b</td>
<td align="left">Backspace</td>
<td align="left">\u0008</td>
<td align="left">8</td>
</tr>
<tr>
<td align="left">\t</td>
<td align="left">Tab</td>
<td align="left">\u0009</td>
<td align="left">9</td>
</tr>
<tr>
<td align="left">\n</td>
<td align="left">Linefeed</td>
<td align="left">\u000A</td>
<td align="left">10</td>
</tr>
<tr>
<td align="left">\f</td>
<td align="left">Formfeed</td>
<td align="left">\u000C</td>
<td align="left">12</td>
</tr>
<tr>
<td align="left">\r</td>
<td align="left">Carriage Return</td>
<td align="left">\u000D</td>
<td align="left">13</td>
</tr>
<tr>
<td align="left">\\</td>
<td align="left">Backslash</td>
<td align="left">\u005C</td>
<td align="left">92</td>
</tr>
<tr>
<td align="left">&quot;</td>
<td align="left">Double Quote</td>
<td align="left">\u0022</td>
<td align="left">34</td>
</tr>
</tbody></table>
<h2 id="Programming-errors-in-C"><a href="#Programming-errors-in-C" class="headerlink" title="Programming errors in C++"></a>Programming errors in C++</h2><ol>
<li><p><strong>Syntax Errors</strong></p>
<ul>
<li><strong>Syntax</strong> is a set of rules that must be followed when writing a program.</li>
<li>The programmer has made a mistake in the syntax (e.g. forget the colon when writing a for loop)</li>
<li>Detected by the compiler</li>
<li>identified during compilation.<br>&nbsp;</li>
</ul>
</li>
<li><p><strong>Runtime Errors</strong>: Causes the program to abort</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="number">1</span>/<span class="number">0</span>; <span class="comment">// Divide by zero.</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="Divide-by-Zero"><a href="#Divide-by-Zero" class="headerlink" title="Divide by Zero"></a>Divide by Zero</h3><div class="video-container"><iframe src="https://www.youtube.com/embed/SQzjzStU1RQ" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
<!-- <iframe width="750" height="422" src="https://www.youtube.com/embed/SQzjzStU1RQ" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe> -->

<h3 id="Logic-Errors"><a href="#Logic-Errors" class="headerlink" title="Logic Errors"></a>Logic Errors</h3><ol>
<li>Produces incorrect result</li>
<li>The program executes but gives the wrong result.</li>
</ol>
<blockquote>
<p>Logic errors include some <strong>runtime</strong> errors that cause the program to terminate. These types of runtime errors are typically called <strong>exceptions</strong>.</p>
</blockquote>
<h3 id="Undeclared-Uninitialzed-Vavriables-and-Unused-Variables"><a href="#Undeclared-Uninitialzed-Vavriables-and-Unused-Variables" class="headerlink" title="Undeclared/Uninitialzed Vavriables and Unused Variables"></a>Undeclared/Uninitialzed Vavriables and Unused Variables</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> interestRate = <span class="number">0.05</span>;</span><br><span class="line"><span class="keyword">double</span> interest = interestrate * <span class="number">45</span>; <span class="comment">// case-sensitive</span></span><br></pre></td></tr></table></figure>

<h3 id="Integer-Overflow"><a href="#Integer-Overflow" class="headerlink" title="Integer Overflow"></a>Integer Overflow</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> value = <span class="number">2147483647</span> + <span class="number">1</span>;</span><br><span class="line"><span class="comment">//value will actually be 2147483648</span></span><br></pre></td></tr></table></figure>

<h3 id="Unintended-Integer-Division"><a href="#Unintended-Integer-Division" class="headerlink" title="Unintended Integer Division"></a>Unintended Integer Division</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// It can be unexpected results.</span></span><br><span class="line"><span class="keyword">double</span> avg = (<span class="number">1</span> + <span class="number">2</span>)/<span class="number">2</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; avg &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// using this</span></span><br><span class="line"><span class="keyword">double</span> avg = (<span class="number">1</span> + <span class="number">2</span>)/<span class="number">2.0</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; avg &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 1.5</span></span><br></pre></td></tr></table></figure>

<h2 id="Get-input-from-the-user-using-cout"><a href="#Get-input-from-the-user-using-cout" class="headerlink" title="Get input from the user using cout"></a>Get input from the user using cout</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> radius;</span><br><span class="line">    <span class="keyword">double</span> area;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter the radius of the circle: "</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; radius;</span><br><span class="line"></span><br><span class="line">    area = radius * radius * <span class="number">3.14159</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"The area for the circle of radius "</span> &lt;&lt; radius;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">" is "</span> &lt;&lt; area &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Working-with-Characters"><a href="#Working-with-Characters" class="headerlink" title="Working with Characters"></a>Working with Characters</h2><p>To read a single character:</p>
<h3 id="Use-cin"><a href="#Use-cin" class="headerlink" title="Use cin:"></a>Use cin:</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter a character: "</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; ch;</span><br></pre></td></tr></table></figure>

<ul>
<li>Problem: will skip over blanks, tabs, etc.</li>
</ul>
<h3 id="Use-cin-get"><a href="#Use-cin-get" class="headerlink" title="Use cin.get():"></a>Use cin.get():</h3><p>Will read the character entered, even whitespace</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter a character: "</span>;</span><br><span class="line">ch = <span class="built_in">cin</span>.get()</span><br></pre></td></tr></table></figure>

<ul>
<li>Mixing <code>cin &gt;&gt;</code> and <code>cin.get()</code> in the same program can cause input errors that are hard to detect</li>
<li>To skip over undeeded characters that are still in the keyboard buffer, use <code>cin.ignore()</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cin</span>.ignore() <span class="comment">// skip next char</span></span><br></pre></td></tr></table></figure>

<ul>
<li>E.g.</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> ch1, ch2;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter two characters separated by a space: "</span>;</span><br><span class="line">ch1 = <span class="built_in">cin</span>.get(); <span class="comment">// Character 1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span>.ignore(); <span class="comment">// Ignore the enter</span></span><br><span class="line">ch2 = <span class="built_in">cin</span>.get(); <span class="comment">// Character 2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Character 1 is: "</span> &lt;&lt; ch1 &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">"Character 2 is: "</span></span><br><span class="line"> &lt;&lt; ch2 &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Character-Functions"><a href="#Character-Functions" class="headerlink" title="Character Functions"></a>Character Functions</h3><ul>
<li>Return an <code>int</code>.<ul>
<li>zero is false and non-zero is true.</li>
</ul>
</li>
<li>Need to include cctype file: <code>#include &lt;cctype&gt;</code></li>
</ul>
<table>
<thead>
<tr>
<th align="left">Type</th>
<th align="left">Method</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="left">int</td>
<td align="left"><strong>isalnum</strong>(c)</td>
<td align="left">true if c is a letter or digit</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>isalpha</strong>(c)</td>
<td align="left">true if <code>c</code> is a letter</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>isblank</strong>(c)</td>
<td align="left">true if <code>c</code> is a blank or tab</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>isdigit</strong>(c)</td>
<td align="left">true if <code>c</code> is a digit</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>islower</strong>(c)</td>
<td align="left">true if <code>c</code> is an lowercase letter</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>isupper</strong>(c)</td>
<td align="left">true if <code>c</code> is an uppercase letter</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>isspace</strong>(c)</td>
<td align="left">true if <code>c</code> is whitespace character (space, tab, vertical tab, formfeed, carriage return, or newline)</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>tolower</strong>(c)</td>
<td align="left">returns lowercase version of <code>c</code> if there is one, otherwise it returns the character unchanged</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left"><strong>toupper</strong>(c)</td>
<td align="left">returns uppercase version of <code>c</code> if there is one, otherwise it returns the character unchanged</td>
</tr>
</tbody></table>
<hr>
<h2 id="String-Type"><a href="#String-Type" class="headerlink" title="String Type"></a>String Type</h2><ol>
<li>The char type only represents one character.</li>
<li>To represent a string of characters, use the data type called <strong>string</strong>.</li>
</ol>
<p>For example,</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> message = <span class="string">"Welcome to C++"</span>;</span><br></pre></td></tr></table></figure>

<p>For the time being, you just need to know how to declare a string variable, how to assign a string to the variable, how to concatenate strings, and to perform simple operations on strings.</p>
<h3 id="Working-with-Strings"><a href="#Working-with-Strings" class="headerlink" title="Working with Strings"></a>Working with Strings</h3><p>To read a string:</p>
<ol>
<li>Use <strong>getline</strong> function</li>
<li>You need to include string file: <code>#include &lt;string&gt;</code></li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> name, city;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt;<span class="string">"Enter your name: "</span>;</span><br><span class="line">getline(<span class="built_in">cin</span>, name);</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Enter the city you live in :"</span>;</span><br><span class="line">getline(<span class="built_in">cin</span>, city);</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello, "</span> &lt;&lt; name &lt;&lt; <span class="string">", you line in "</span> &lt;&lt; city;</span><br></pre></td></tr></table></figure>

<p>&nbsp;</p>
<h3 id="String-Functions-and-Operators"><a href="#String-Functions-and-Operators" class="headerlink" title="String Functions and Operators"></a>String Functions and Operators</h3><p>To find the length of a stirng, use <code>stringVariable.length()</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> state = <span class="string">"Mississippi"</span>;</span><br><span class="line"><span class="keyword">int</span> size = state.length();</span><br></pre></td></tr></table></figure>

<p>To concatenate (join) multiple strings use <code>+</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">name = firstName + lastName;</span><br><span class="line">greeting = greeting + name;</span><br></pre></td></tr></table></figure>

<p>Or using the <code>+=</code> combined assignment operator:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">greeting += name;</span><br></pre></td></tr></table></figure>

<h3 id="Simple-Functions-for-String-Objects"><a href="#Simple-Functions-for-String-Objects" class="headerlink" title="Simple Functions for String Objects"></a>Simple Functions for String Objects</h3><table>
<thead>
<tr>
<th align="left">Function</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>length</strong>()</td>
<td align="left">Returns the number of characters in the string</td>
</tr>
<tr>
<td align="left">s1.<strong>compare</strong>(s2)</td>
<td align="left">Returns <code>0</code> if <code>s1</code> and <code>s2</code> are the same, returns <code>non-zero</code> if they are different</td>
</tr>
</tbody></table>
<p><strong>Getting String Length</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> message = <span class="string">"Welcome to C++"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"The length of"</span> &lt;&lt; message &lt;&lt; <span class="string">" is "</span></span><br><span class="line"> &lt;&lt; message.length();</span><br></pre></td></tr></table></figure>

<p><strong>Getting Characters from a String</strong><br>How do you get the first and last character from a string?</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> message = <span class="string">"Programming is fun"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"The first character is"</span> &lt;&lt; message[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"The last character is "</span></span><br><span class="line"> &lt;&lt; message[message.length() - <span class="number">1</span>];</span><br></pre></td></tr></table></figure>

<p><strong>String concatenation</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> s1 = <span class="string">"Welcome "</span>;</span><br><span class="line"><span class="built_in">string</span> s2 = <span class="string">"to "</span>;</span><br><span class="line"><span class="built_in">string</span> s3 = <span class="string">"C++"</span>;</span><br><span class="line"><span class="built_in">string</span> s = s1 + s2 + s3;</span><br></pre></td></tr></table></figure>

<h3 id="Obtaining-Substrings"><a href="#Obtaining-Substrings" class="headerlink" title="Obtaining Substrings"></a>Obtaining Substrings</h3><table>
<thead>
<tr>
<th align="left">Function</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>substr</strong>(beginIndex, endIndex)</td>
<td align="left">Returns the substring from <strong>beginIndex</strong> to <strong>endIndex-1</strong></td>
</tr>
<tr>
<td align="left"><strong>substr</strong>(beginIndex)</td>
<td align="left">Returns the substring from <strong>beginIndex</strong> to the end of string</td>
</tr>
<tr>
<td align="left"><strong>find</strong>(str)</td>
<td align="left">Returns the index of the substring in the string, if not found, returns -1</td>
</tr>
</tbody></table>
<p>Example</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> s = <span class="string">"Welcome to C++"</span>;</span><br><span class="line"><span class="built_in">string</span> s1 = s.substr(<span class="number">0</span>, <span class="number">11</span>); <span class="comment">// s1 is "Welcome to "</span></span><br><span class="line"><span class="built_in">string</span> s2 = s.substr(<span class="number">11</span>);    <span class="comment">// s2 is "C++"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a = s.find(<span class="string">"to"</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;          <span class="comment">// return 8</span></span><br></pre></td></tr></table></figure>

<h3 id="Conversion-between-Strings-and-Numbers"><a href="#Conversion-between-Strings-and-Numbers" class="headerlink" title="Conversion between Strings and Numbers"></a>Conversion between Strings and Numbers</h3><p>To convert a numberic string into a number, use <code>stoi</code> and <code>stod</code> function</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> s1 = <span class="string">"56"</span>;</span><br><span class="line"><span class="built_in">string</span> s2 = <span class="string">"67.8"</span>;</span><br><span class="line"><span class="keyword">int</span> n1 = stoi(s1);</span><br><span class="line"><span class="keyword">double</span> n2 = stod(s2);</span><br></pre></td></tr></table></figure>

<p>To convert a number into a string, use <code>to_string</code> function:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">89</span>;</span><br><span class="line"><span class="built_in">string</span> s = to_string(a);</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Formatting-Output-using-cout"><a href="#Formatting-Output-using-cout" class="headerlink" title="Formatting Output using cout"></a>Formatting Output using cout</h2><p>Can control how output displays for numeric and string data:</p>
<ol>
<li>number of digits</li>
<li>position</li>
<li>size</li>
</ol>
<p>Requires <code>#include &lt;iomanip&gt;</code></p>
<ul>
<li><strong>setw(x)</strong>: print in a field at least <strong>x</strong> spaces wide. Use more spaces if field is not wide enough.</li>
<li><strong>setprecision(s)</strong>: when used with <strong><ins>fixed</ins></strong>, print floating-point value using <strong>x</strong> digits after the decimal.</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> num1 = <span class="number">1234</span>;</span><br><span class="line">  <span class="keyword">double</span> num2 = <span class="number">4.918</span>;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; setw(<span class="number">6</span>) &lt;&lt; num1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">2</span>) &lt;&lt; num2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  1234</span></span><br><span class="line"><span class="comment">4.92</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Literals"><a href="#Literals" class="headerlink" title="Literals"></a>Literals</h2><p>A <strong>literal</strong> is a value that appears directly in the program.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">34</span>;</span><br><span class="line"><span class="keyword">double</span> d = <span class="number">5.0</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Integer-Literals"><a href="#Integer-Literals" class="headerlink" title="Integer Literals"></a>Integer Literals</h3><ol>
<li>An <strong>integer literal</strong> can be assigned to an integer variable as long as it can fit into the variable.</li>
<li>A compilation error would occur if the literal were too large for the variable to hold.</li>
<li>An integer literal is assumed to be of the <strong>int</strong> type, whose value is between $-2^{31} (-214783648)$ ~ $2^{31} (214783647)$.</li>
</ol>
<h3 id="Floating-Point-Literals"><a href="#Floating-Point-Literals" class="headerlink" title="Floating-Point Literals"></a>Floating-Point Literals</h3><ol>
<li><strong>Floating-Point Literals</strong> are written with a decimal point.</li>
<li>By default, a floating-point literal is treated as a <strong>double</strong> value.</li>
</ol>
<hr>
<h2 id="Scientific-notation"><a href="#Scientific-notation" class="headerlink" title="Scientific notation"></a>Scientific notation</h2><p>Scientific notation,</p>
<ul>
<li>$1.23456e2$ = $123.456$ = $1.23456e+2$</li>
<li>$1.23456e-2$ = $0.012345$</li>
</ul>
<p>so,</p>
<ul>
<li>$1.234e+2$ is $123.4$</li>
<li>$1.234e-2$ is $0.01234$</li>
</ul>
<hr>
<h2 id="Type-Coercion"><a href="#Type-Coercion" class="headerlink" title="Type Coercion"></a>Type Coercion</h2><ol>
<li>Type Coercion: automatic conversion of an operand to another data type</li>
<li>Promotion: convert to a higher type</li>
<li>Demotion: convert to a lower type</li>
</ol>
<h3 id="Coercion-Rules"><a href="#Coercion-Rules" class="headerlink" title="Coercion Rules"></a>Coercion Rules</h3><ol>
<li>When operating on values of different data types, the lower one is promoted to the type of the higher one.</li>
<li>When using the <code>=</code> operator, the type of expression on right will be converted to type of variable on left.</li>
</ol>
<blockquote>
<p>int, float, double</p>
</blockquote>
<p>Rank from Low to High</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> num1 = <span class="number">5</span>, num2 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">double</span> avg = (num1 + num2)/<span class="number">2.0</span>;</span><br><span class="line"><span class="keyword">int</span> avg2 = (num1 + num2)/<span class="number">2.0</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; avg &lt;&lt; <span class="built_in">endl</span> &lt;&lt; avg2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 7.5</span></span><br><span class="line"><span class="comment">// 7</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Type-Casting"><a href="#Type-Casting" class="headerlink" title="Type Casting"></a>Type Casting</h2><ol>
<li>Type casting: Used for manual data type conversion</li>
<li>C-Style cast: data type name in <code>()</code></li>
<li>Prestandard C++ cast: value in <code>()</code></li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">double</span>)<span class="number">3</span> <span class="function"><span class="keyword">or</span> <span class="title">double</span><span class="params">(<span class="number">3</span>)</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>Both are still supported in C++</li>
</ul>
<hr>
<h2 id="Random-numbers"><a href="#Random-numbers" class="headerlink" title="Random numbers"></a>Random numbers</h2><ol>
<li>These require <code>cstdlib</code> header file</li>
<li>Generate random numbers within a range: <code>rand()</code></li>
<li>To randomize the results of rand(), the srand() function must be used as follows: <code>srand(time(0))</code></li>
<li>The time function requires the <code>ctime</code> header file</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">rand() % <span class="number">10</span>       <span class="comment">// A random integer between 0-9</span></span><br><span class="line"><span class="number">50</span> + rand() % <span class="number">50</span>  <span class="comment">// A random integer between 50-99</span></span><br><span class="line"><span class="number">5</span> + rand() % <span class="number">21</span>   <span class="comment">// A random integer between 5-25</span></span><br></pre></td></tr></table></figure>

<ul>
<li>In general, to generate an integer from <code>a</code> to <code>b</code>:</li>
</ul>
<blockquote>
<p>a + rand() % (b - a + 1)</p>
</blockquote>
<p>E.g.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    srand(time(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a + rand()%(b - a + <span class="number">1</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="comment">//generate random number between 10 ~ 30</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Express-Arithmetic-expression"><a href="#Express-Arithmetic-expression" class="headerlink" title="Express Arithmetic expression"></a>Express Arithmetic expression</h2><p>&nbsp;</p>
<p>$$<br>P = \frac{L(\frac{r}{12})}{1 - (1+\frac{r}{12})^{-m}}<br>$$</p>
<p>&nbsp;</p>
<p>assuming that all variables are pre-declared and initialized.</p>
<blockquote>
<p>P = (L <em>r/12)/(1 - pow(1 + (r/12),-1</em>m))</p>
</blockquote>
<p>&nbsp;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> L, r, m, P;</span><br><span class="line"></span><br><span class="line">    L = <span class="number">2.0</span>;</span><br><span class="line">    r = <span class="number">12.0</span>;</span><br><span class="line">    m = <span class="number">4.0</span>;</span><br><span class="line"></span><br><span class="line">    P = (L * r/<span class="number">12</span>)/(<span class="number">1</span> - <span class="built_in">pow</span>(<span class="number">1</span> + (r/<span class="number">12</span>),<span class="number">-1</span>*m));</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; P &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 259</category>
      </categories>
      <tags>
        <tag>CSCI 259</tag>
      </tags>
  </entry>
  <entry>
    <title>Test1 Review Questions</title>
    <url>/2020/02/17/2020-02-17-csci356-test1/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="What-is-Computer-Science"><a href="#What-is-Computer-Science" class="headerlink" title="What is Computer Science"></a>What is Computer Science</h2><ul>
<li>컴퓨터 과학은 문제 해결과정(problem-solving)에 대한 연구다.</li>
<li>컴퓨터 과학은 또한 추상화에 대한 학문이다.</li>
</ul>
<h2 id="What-is-Programming"><a href="#What-is-Programming" class="headerlink" title="What is Programming"></a>What is Programming</h2><ul>
<li>프로그래밍(Programming)은 알고리즘을 가져다가 프로그래밍 언어로 인코딩하여 컴퓨터에 의해 실행될 수 있도록 하는 과정이다.</li>
<li>프로그래밍 언어는 프로세스와 데이터를 모두 나타낼 수 있는 표기법을 제공해야 한다.</li>
<li>이를 위해 언어는 제어 구조와 데이터 유형을 제공한다.</li>
</ul>
<h2 id="Data-Structures-and-Abstract-Data-Types"><a href="#Data-Structures-and-Abstract-Data-Types" class="headerlink" title="Data Structures and Abstract Data Types"></a>Data Structures and Abstract Data Types</h2><ul>
<li>추상 데이터 타입(ADT)는 데이터 및 연산이 어떻게 구현될 것인지에 관계없이 우리가 어떻게 보는지를 논리적으로 설명하는 것이다.</li>
<li>이러한 ADT가 구현된 것을 흔히 자료 구조(Data Structure)라고 한다.</li>
</ul>
<h3 id="Abstract-Data-Type"><a href="#Abstract-Data-Type" class="headerlink" title="Abstract Data Type"></a>Abstract Data Type</h3><p>ADT는 사용자와 상호작용하는 <a href="https://ko.wikipedia.org/wiki/%EC%85%B8" target="_blank" rel="noopener">셸</a>(shell, OS의 기능과 서비스를 구현하는 인터페이스를 제공하는 프로그램)과 같다. ADT의 내부 구현 사항은 숨겨져 있으며(정보 은닉), 사용자는 내부 구현에 관해서는 신경쓰지 않아도 된다.</p>
<a href="https://runestone.academy/runestone/books/published/pythonds/_images/adt.png" title="ADT" class="gallery-item"><img src="https://runestone.academy/runestone/books/published/pythonds/_images/adt.png" class="" title="ADT" alt="ADT"></a>

<h2 id="Review-of-Basic-Python"><a href="#Review-of-Basic-Python" class="headerlink" title="Review of Basic Python"></a>Review of Basic Python</h2><ul>
<li><strong>Python</strong> is a modern, easy-to-learn, object-oriented programming language.</li>
<li>It has a powerful set of built-in <strong>data types</strong> and easy-to-use <strong>control constructs</strong>.</li>
<li>It it an <strong>interpreted</strong> language, and the interpreter evaluates the code that you provide.</li>
</ul>
<h3 id="Built-in-Data-Types"><a href="#Built-in-Data-Types" class="headerlink" title="Built-in Data Types"></a>Built-in Data Types</h3><ul>
<li>Python has two main built-in numeric classes that implement the integer and floating point data types: <code>int</code> and <code>float</code></li>
<li>The principal built-in types are numerics, sequences, mappings, classes, instances and exceptions.</li>
</ul>
<table>
<thead>
<tr>
<th align="left">Data Type</th>
<th align="left">type</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Numeric Type</td>
<td align="left">int, float, complex</td>
</tr>
<tr>
<td align="left">Iterator Type</td>
<td align="left">Generator Type</td>
</tr>
<tr>
<td align="left">Sequence Type</td>
<td align="left">list, tuple, range</td>
</tr>
<tr>
<td align="left">Text Sequence Type</td>
<td align="left">str</td>
</tr>
<tr>
<td align="left">Binary Sequence Type</td>
<td align="left">bytes, bytearray, memoryview</td>
</tr>
<tr>
<td align="left">Set Types</td>
<td align="left">set, frozenset</td>
</tr>
<tr>
<td align="left">Mapping Type</td>
<td align="left">dict</td>
</tr>
<tr>
<td align="left">Context Manager Type</td>
<td align="left">…</td>
</tr>
<tr>
<td align="left">Other Built-in Type</td>
<td align="left">Modules, Classes, Functions, Methods, etc.</td>
</tr>
</tbody></table>
<h3 id="Identifiers-and-Assignment"><a href="#Identifiers-and-Assignment" class="headerlink" title="Identifiers and Assignment"></a>Identifiers and Assignment</h3><ul>
<li><strong>Identifiers</strong> are names in programming langauges.</li>
<li><strong>Assignment statements</strong> provide a way to associate a name with a value.</li>
<li>The same variable can refer to <strong>different</strong> types of data.</li>
</ul>
<h3 id="Built-in-Collection-Data-Types"><a href="#Built-in-Collection-Data-Types" class="headerlink" title="Built-in Collection Data Types"></a>Built-in Collection Data Types</h3><p>Python has a number of very powerful built-in collection classes.</p>
<table>
<thead>
<tr>
<th>Ordered collections</th>
<th>Unordered collections</th>
</tr>
</thead>
<tbody><tr>
<td>lists, strings and tuples</td>
<td>sets and dictionaries</td>
</tr>
</tbody></table>
<h3 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h3><p>Lists are written as comma-delimited values enclosed in square brackets (<code>[]</code>).</p>
<ul>
<li>Lists are <strong>heterogeneous</strong>, meaning that elements in the list need not all be of the same data type.</li>
<li>The collection can be assigned to a <strong>varaible</strong>.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">myList = [<span class="number">1</span>, <span class="number">3</span>, <span class="literal">True</span>, <span class="number">6.5</span>]</span><br></pre></td></tr></table></figure>

<h4 id="Operations-on-Lists"><a href="#Operations-on-Lists" class="headerlink" title="Operations on Lists"></a>Operations on Lists</h4><p>Lists are considered to be <strong>sequentially ordered</strong>, they support a number of operations that can be applied to any Python sequence.</p>
<p><strong>List Methods</strong></p>
<table>
<thead>
<tr>
<th>FUNCTION</th>
<th>DESCRIPTION</th>
</tr>
</thead>
<tbody><tr>
<td>Append()</td>
<td>Add an element to the end of the list</td>
</tr>
<tr>
<td>Extend()</td>
<td>Add all elements of a list to the another list</td>
</tr>
<tr>
<td>Insert()</td>
<td>Insert an item at the defined index</td>
</tr>
<tr>
<td>Remove()</td>
<td>Removes an item from the list</td>
</tr>
<tr>
<td>Remove()</td>
<td>Removes an item from the list</td>
</tr>
<tr>
<td>Pop()</td>
<td>Removes and returns an element at the given index</td>
</tr>
<tr>
<td>Clear()</td>
<td>Removes all items from the list</td>
</tr>
<tr>
<td>Index()</td>
<td>Returns the index of the first matched item</td>
</tr>
<tr>
<td>Count()</td>
<td>Returns the count of number of items passed as an argument</td>
</tr>
<tr>
<td>Sort()</td>
<td>Sort items in a list in ascending order</td>
</tr>
<tr>
<td>Reverse()</td>
<td>Reverse the order of items in the list</td>
</tr>
<tr>
<td>copy()</td>
<td>Returns a copy of the list</td>
</tr>
</tbody></table>
<p><strong>Built-in functions with List</strong></p>
<table>
<thead>
<tr>
<th>FUNCTION</th>
<th>DESCRIPTION</th>
</tr>
</thead>
<tbody><tr>
<td>reduce()</td>
<td>apply a particular function passed in its argument to all of the list elements stores the intermediate result and only returns the final summation value</td>
</tr>
<tr>
<td>sum()</td>
<td>Sums up the numbers in the list</td>
</tr>
<tr>
<td>ord()</td>
<td>Returns an integer representing the Unicode code point of the given Unicode character</td>
</tr>
<tr>
<td>cmp()</td>
<td>This function returns 1, if first list is “greater” than second list</td>
</tr>
<tr>
<td>max()</td>
<td>return maximum element of given list</td>
</tr>
<tr>
<td>min()</td>
<td>return minimum element of given list</td>
</tr>
<tr>
<td>all()</td>
<td>Returns true if all element are true or if list is empty</td>
</tr>
<tr>
<td>any()</td>
<td>return true if any element of the list is true. if list is empty, return false</td>
</tr>
<tr>
<td>len()</td>
<td>Returns length of the list or size of the list</td>
</tr>
<tr>
<td>enumerate()</td>
<td>Returns enumerate object of list</td>
</tr>
<tr>
<td>accumulate()</td>
<td>apply a particular function passed in its argument to all of the list elements returns a list containing the                                            intermediate results</td>
</tr>
<tr>
<td>filter()</td>
<td>tests if each element of a list true or not</td>
</tr>
<tr>
<td>map()</td>
<td>returns a list of the results after applying the given function to each item of a given iterable</td>
</tr>
<tr>
<td>lambda()</td>
<td>This function can have any number of arguments but only one expression, which is evaluated and returned.</td>
</tr>
</tbody></table>
<h3 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h3><ul>
<li><strong>Strings</strong> are sequential collections of zero or more <strong>characters</strong> (letters, numbers, and other symbols).</li>
<li>Python uses <strong>quotation marks</strong> to enclose strings (either single or double).</li>
<li>since strings are sequences, the sequence operations described in lists would work.</li>
</ul>
<h3 id="Difference-between-Lists-and-Strings"><a href="#Difference-between-Lists-and-Strings" class="headerlink" title="Difference between Lists and Strings"></a>Difference between Lists and Strings</h3><ul>
<li>Lists can be modified while strings cannot (i.e. Lists are mutable and strings are immutable).</li>
<li>You can change an item in a list by using indexing and assignment; this change is not allowed in a string.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">myName = <span class="string">'David'</span></span><br><span class="line">myName[<span class="number">3</span>] = <span class="string">'e'</span> <span class="comment"># Error!</span></span><br></pre></td></tr></table></figure>

<h3 id="Tuples"><a href="#Tuples" class="headerlink" title="Tuples"></a>Tuples</h3><ul>
<li><strong>Tuples</strong> are very similar to lists, they are heterogeneous sequences of data</li>
<li>The difference is that tuple is <strong>immuntable</strong>, like a string.</li>
<li>Tuples are written as comma-delimited values enclosed in <strong>parentheses</strong>.</li>
</ul>
<h3 id="Sets"><a href="#Sets" class="headerlink" title="Sets"></a>Sets</h3><ul>
<li><strong>Sets</strong> are unorderd collections of zero or more data objects.</li>
<li>Sets are <strong>heterogeneous</strong> and do <strong>not</strong> allow duplicates.</li>
<li>Sets are written as comma-delimited values enclosed in <strong>curly braces</strong>.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mySet = &#123;<span class="literal">False</span>, <span class="number">4.5</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="string">'cat'</span>&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Dictionaries"><a href="#Dictionaries" class="headerlink" title="Dictionaries"></a>Dictionaries</h3><ul>
<li><strong>Dictionaries</strong> are <strong>unorderd</strong> collections of associated pairs of itmes where each pair consists of a <strong>key</strong> and a <strong>value</strong>.</li>
<li>This key-value pair is typically written as <strong>key : value</strong>.</li>
<li>Dictionaries are written as comma-delimited <code>key:value</code> pairs enclosed in <strong>curly braces</strong>.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">myDict = &#123;<span class="string">'MS'</span>:<span class="string">'Jackson'</span>, <span class="string">'TN'</span>:<span class="string">'Nashville'</span>&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LogicGate</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span> <span class="params">(self, n)</span>:</span></span><br><span class="line">        self.label = n</span><br><span class="line">        self.output = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getLabel</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.label</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getOutput</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.output = self.performGateLogic()</span><br><span class="line">        <span class="keyword">return</span> self.output</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BinaryGate</span><span class="params">(LogicGate)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        LogicGate.__init__(self, n)</span><br><span class="line"></span><br><span class="line">        self.pinA = <span class="literal">None</span></span><br><span class="line">        self.pinB = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getPinA</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.pinA == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> int(input(<span class="string">"Enter pin A input for gate "</span> + self.getLabel() + <span class="string">":"</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.pinA.getFrom().getOutput()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getPinB</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.pinB == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> int(input(<span class="string">"Enter pin B input for gate "</span> + self.getLabel() + <span class="string">":"</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.pinB.getFrom().getOutput()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setNextPin</span><span class="params">(self, source)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.pinA == <span class="literal">None</span>:</span><br><span class="line">            self.pinA = source</span><br><span class="line">        <span class="keyword">elif</span> self.pinB == <span class="literal">None</span>:</span><br><span class="line">            self.pinB = source</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> RunTimeError(<span class="string">"Error, No Entry Pins"</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndGate</span><span class="params">(BinaryGate)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        BinaryGate.__init__(self, n)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">performGateLogic</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        a = self.getPinA()</span><br><span class="line">        b = self.getPinB()</span><br><span class="line">        <span class="keyword">if</span> a == <span class="number">1</span> <span class="keyword">and</span> b == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrGate</span><span class="params">(BinaryGate)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        BinaryGate.__init__(self, n)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">performGateLogic</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        a = self.getPinA()</span><br><span class="line">        b = self.getPinB()</span><br><span class="line">        <span class="keyword">if</span> a == <span class="number">1</span> <span class="keyword">or</span> b == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UnaryGate</span><span class="params">(LogicGate)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        LogicGate.__init__(self, n)</span><br><span class="line">        self.pin = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getPin</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.pin == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> int(input(<span class="string">"Enter pin input for gate "</span> + self.getLabel() + <span class="string">":"</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.pin.getFrom().getOutput()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setNextPin</span><span class="params">(self,source)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.pin == <span class="literal">None</span>:</span><br><span class="line">            self.pin = source</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"Cannot Connect: NO EMPTY PINS on this gate"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotGate</span><span class="params">(UnaryGate)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        UnaryGate.__init__(self, n)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">performGateLogic</span><span class="params">(self)</span>:</span></span><br><span class="line">        a = self.getPin()</span><br><span class="line">        <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> a == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Connector</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span> <span class="params">(self, fgate, tgate)</span>:</span></span><br><span class="line">        self.fromGate = fgate</span><br><span class="line">        self.toGate = tgate</span><br><span class="line">        tgate.setNextPin(self)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getFrom</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.fromGate</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getTo</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.toGate</span><br></pre></td></tr></table></figure>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://ko.wikipedia.org/wiki/%EC%B6%94%EC%83%81_%EC%9E%90%EB%A3%8C%ED%98%95" target="_blank" rel="noopener">추상 자료형 (Abstract Data Type)</a></li>
<li><a href="https://runestone.academy/runestone/books/published/pythonds/_images/adt.png" target="_blank" rel="noopener">Abstract Data type</a></li>
<li><a href="https://docs.python.org/3.8/library/stdtypes.html?highlight=built%20data%20type" target="_blank" rel="noopener">Built-in Types</a></li>
<li><a href="https://docs.python.org/ko/3.8/library/stdtypes.html?highlight=built%20data%20type" target="_blank" rel="noopener">Built-in Types(한글 문서)</a></li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Olemiss</category>
        <category>CSCI 356</category>
      </categories>
      <tags>
        <tag>CSCI 356</tag>
      </tags>
  </entry>
  <entry>
    <title>10989 수 정렬하기 3</title>
    <url>/2020/02/15/2020-02-15-Baekjoon-10989/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<h2 id="Setting"><a href="#Setting" class="headerlink" title="Setting"></a>Setting</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> CNT_INFO[<span class="number">151</span>]; <span class="comment">// count of numbers</span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">30</span>];      <span class="comment">// store &amp; output area</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>buf[30] (10 * 4 + 4 = 44) [if all data is stored once.]</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">+-----+</span><br><span class="line">| 10  |   Size</span><br><span class="line">+-----+----------+</span><br><span class="line">| 10  |          |</span><br><span class="line">+-----+          |</span><br><span class="line">| 20  |          |</span><br><span class="line">+-----+          |</span><br><span class="line">| 30  |          |</span><br><span class="line">+-----+          |</span><br><span class="line">| 40  |          |</span><br><span class="line">+-----+          -</span><br><span class="line">| 100 |          D</span><br><span class="line">+-----+          A</span><br><span class="line">| 100 |          T</span><br><span class="line">+-----+          A</span><br><span class="line">| 100 |          -</span><br><span class="line">+-----+          |</span><br><span class="line">| 120 |          |</span><br><span class="line">+-----+          |</span><br><span class="line">| 130 |          |</span><br><span class="line">+-----+          |</span><br><span class="line">| 140 |          |</span><br><span class="line">+-----+----------+</span><br></pre></td></tr></table></figure>

<h2 id="If-statement"><a href="#If-statement" class="headerlink" title="If-statement"></a>If-statement</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (buf + sz - p - <span class="number">1</span> &lt; j)</span><br><span class="line">&#123;</span><br><span class="line">    fwrite(buf, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), p - buf, <span class="built_in">stdout</span>);</span><br><span class="line">    p = buf;</span><br><span class="line">    <span class="keyword">goto</span> check_1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>만약 현재의 저장소 <code>buf</code>보다 더 많은 입력을 했다면 이 경우 예외 처리가 필요하다.</li>
<li>따라서 현재까지 정렬된 저장소를 현재 문제가 발생된 부분을 제외하고 출력한다.</li>
<li>또한 현재 포인터 p를 다시 저장소의 처음 주소로 이동한다.</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">check_1:</span><br><span class="line">    <span class="built_in">memcpy</span>(p, STR_INFO[num], j);</span><br><span class="line">    s = p;</span><br><span class="line">    p += j;</span><br><span class="line">    CNT_INFO[num]--;</span><br><span class="line">    f = <span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>이때 현재 값<code>STR_INFO[num]</code>을 처음 주소로 옮긴다.</li>
<li>그리고 현재 포인터 p를 다음 주소로 옮긴다.</li>
</ul>
<h2 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// include user-defind memory</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"dataset.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//number: 1 ~ 150</span></span><br><span class="line"><span class="comment">//store area: 30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _BUFSIZ 30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _LENG 151</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> CNT_INFO[_LENG];</span><br><span class="line"><span class="keyword">char</span> buf[_BUFSIZ];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>* p;</span><br><span class="line">    <span class="keyword">int</span> sz, remain;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line"></span><br><span class="line">    fread(buf, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), _BUFSIZ, <span class="built_in">stdin</span>);</span><br><span class="line">    p = buf;</span><br><span class="line">    sz = <span class="keyword">sizeof</span>(buf);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Read size</span></span><br><span class="line">    <span class="keyword">for</span> (C = <span class="number">0</span>; *p++ &gt;= <span class="number">48</span>;)</span><br><span class="line">    &#123;</span><br><span class="line">        C = C * <span class="number">10</span> + (p[<span class="number">-1</span>] - <span class="number">48</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// store the values in array</span></span><br><span class="line">    <span class="keyword">while</span> (C--)</span><br><span class="line">    &#123;</span><br><span class="line">        remain = buf + sz - p;</span><br><span class="line">        <span class="keyword">if</span> (remain &lt; <span class="number">6</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(buf, p, remain);</span><br><span class="line">            fread(buf + remain, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), sz - remain, <span class="built_in">stdin</span>);</span><br><span class="line">            p = buf;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (num = <span class="number">0</span>; *p++ &gt;= <span class="number">48</span>;)</span><br><span class="line">        &#123;</span><br><span class="line">            num = num * <span class="number">10</span> + (p[<span class="number">-1</span>] - <span class="number">48</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        CNT_INFO[num]++;</span><br><span class="line">    &#125;</span><br><span class="line">    p = buf;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (num = <span class="number">1</span>; num &lt; _LENG; num++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> f, c, k, j;</span><br><span class="line">        <span class="keyword">char</span>* s;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// To get the length of number</span></span><br><span class="line">        <span class="keyword">for</span> (k = num, j = <span class="number">1</span>; k &gt; <span class="number">0</span>; k /= <span class="number">10</span>, j++);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (CNT_INFO[num])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//if current remain size is not enough to store the current number</span></span><br><span class="line">            <span class="keyword">if</span> (buf + sz - p - <span class="number">1</span> &lt; j)</span><br><span class="line">            &#123;</span><br><span class="line">                fwrite(buf, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), p - buf, <span class="built_in">stdout</span>);</span><br><span class="line">                p = buf;</span><br><span class="line">                <span class="keyword">goto</span> check_1;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        check_1:</span><br><span class="line">            <span class="built_in">memcpy</span>(p, STR_INFO[num], j);</span><br><span class="line">            s = p;</span><br><span class="line">            p += j;</span><br><span class="line">            CNT_INFO[num]--;</span><br><span class="line">            f = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// If still remain the count of number (it means, number &gt; 1).</span></span><br><span class="line">            <span class="keyword">while</span> (CNT_INFO[num] &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (CNT_INFO[num] &gt;= f)</span><br><span class="line">                &#123;</span><br><span class="line">                    c = f;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    c = CNT_INFO[num];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// if current remain size is not enough to store current sample numbers..</span></span><br><span class="line">                <span class="keyword">if</span> (buf + sz - p - <span class="number">1</span> &lt; j * c)</span><br><span class="line">                &#123;</span><br><span class="line">                    fwrite(buf, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), p - buf, <span class="built_in">stdout</span>);</span><br><span class="line">                    p = buf;</span><br><span class="line">                    <span class="keyword">goto</span> check_1;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">memcpy</span>(p, s, j * c);</span><br><span class="line">                p += j * c;</span><br><span class="line">                CNT_INFO[num] -= c;</span><br><span class="line">                f += c;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fwrite(buf, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), p - buf, <span class="built_in">stdout</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://www.acmicpc.net/source/17694817" target="_blank" rel="noopener">My source #1</a><br><a href="https://www.acmicpc.net/source/17694757" target="_blank" rel="noopener">My source #2</a></p>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Algorithm</category>
        <category>Baekjoon</category>
      </categories>
      <tags>
        <tag>Baekjoon</tag>
      </tags>
  </entry>
  <entry>
    <title>Kakao clone coding</title>
    <url>/2020/02/15/2020-02-15-Kakao-clone-coding/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<p>Preview: <a href="https://sokhyg9016.github.io/Nomad-kakao-clone-2.0/">Link</a></p>
<h2 id="Screenshots-2020-01-20"><a href="#Screenshots-2020-01-20" class="headerlink" title="Screenshots (2020. 01. 20)"></a>Screenshots (2020. 01. 20)</h2><a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/friends.JPG" target="_blank" rel="noopener">
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/friends.JPG" title="friends" class="gallery-item"><img src="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/friends.JPG" align="left" width="125" alt = "friends"></a></a>
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/chats.JPG" target="_blank" rel="noopener">
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/chats.JPG" title="chats" class="gallery-item"><img src="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/chats.JPG" align="left" width="125" alt = "chats"></a></a>
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/chat.JPG" target="_blank" rel="noopener">
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/chat.JPG" title="chat" class="gallery-item"><img src="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/chat.JPG" align="left" width="125" alt = "chat"></a></a>
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/find.JPG" target="_blank" rel="noopener">
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/find.JPG" title="find" class="gallery-item"><img src="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/find.JPG" align="left" width="125" alt = "find"></a></a>
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/more.JPG" target="_blank" rel="noopener">
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/more.JPG" title="more" class="gallery-item"><img src="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/more.JPG" align="left" width="125" alt = "more"></a></a>
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/settings.JPG" target="_blank" rel="noopener">
<a href="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/settings.JPG" title="settings" class="gallery-item"><img src="https://raw.githubusercontent.com/sokhyg9016/Nomad-kakao-clone-2.0/master/Screenshots/2.15/settings.JPG" align="left" width="125" alt = "settings"></a></a>

<p style = "clear: both;"></p>

<h2 id="Introducion-Video"><a href="#Introducion-Video" class="headerlink" title="Introducion Video"></a>Introducion Video</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/6ZQAKorChFs" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<h2 id="Project-Settings"><a href="#Project-Settings" class="headerlink" title="Project Settings"></a>Project Settings</h2><ul>
<li>Make repository using Github desktop</li>
<li>Make <code>.gitignore</code></li>
<li>Make some html files</li>
<li>Upload the Github online</li>
</ul>
<h2 id="Chrome-Web-Extension-Apps"><a href="#Chrome-Web-Extension-Apps" class="headerlink" title="Chrome Web Extension Apps"></a>Chrome Web Extension Apps</h2><ul>
<li><a href="https://chrome.google.com/webstore/detail/colorzilla/bhlhnicpbhignbdhedgjhgdocnmhomnp?hl=en" target="_blank" rel="noopener">ColorZilla</a><ul>
<li>Get a color reading from any point in your browser, quickly adjust this color and paste it into another program</li>
</ul>
</li>
<li><a href="https://chrome.google.com/webstore/detail/page-ruler-redux/giejhjebcalaheckengmchjekofhhmal?hl=en" target="_blank" rel="noopener">PageRulerRedux</a><ul>
<li>Get perfect pixel dimensions and positioning to measure elements on any web page.</li>
</ul>
</li>
</ul>
<h2 id="TIPs-for-development"><a href="#TIPs-for-development" class="headerlink" title="TIPs for development"></a>TIPs for development</h2><ol>
<li>항상 컴포넌트 단위로 시작</li>
<li>반복되는 페이지의 파트로 시작 (헤더, 스테이터스 바, 네비게이션 바)</li>
<li>word를 나누기 위해 <code>-</code>를 사용 (e.g. <code>class = &quot;list-item&quot;</code>)</li>
<li>파일들을 작게 쪼개서 하나씩 완성해나가는 게 가장 좋을 수 도 있다.</li>
<li>코드가 커지면 보기도 힘들고 기능별로 (파일을) 나누는 것도 좋다.</li>
</ol>
<h3 id="E-g-s"><a href="#E-g-s" class="headerlink" title="E.g.s"></a>E.g.s</h3><ol>
<li>부모자식을 나누기 위해 <code>__</code>를 사용</li>
<li>한 클래스의 세부 속성을 나누기 위해 <code>--</code>를 사용</li>
</ol>
<blockquote>
<p>For example,<br><code>class = &quot;parent__child&quot;</code><br><code>class = &quot;friend--lg&quot;</code> (lg =&gt; large)</p>
</blockquote>
<hr>
<h2 id="Components"><a href="#Components" class="headerlink" title="Components"></a>Components</h2><div class="tabs" id="second-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#second-unique-name-1">html</a></li><li class="tab"><a href="#second-unique-name-2">css</a></li></ul><div class="tab-content"><div class="tab-pane active" id="second-unique-name-1"><ol>
<li>index.html</li>
<li>chat.html</li>
<li>friends.html</li>
<li>more.html</li>
<li>find.html</li>
<li>settings.html</li>
</ol></div><div class="tab-pane" id="second-unique-name-2"><h3 id="공동-속성"><a href="#공동-속성" class="headerlink" title="공동 속성"></a>공동 속성</h3><ol>
<li>status-bar.css</li>
<li>nav-bar.css</li>
<li>header.css</li>
<li>reset.css</li>
<li>style.css</li>
</ol>
<h3 id="각-페이지-별-속성"><a href="#각-페이지-별-속성" class="headerlink" title="각 페이지 별 속성"></a>각 페이지 별 속성</h3><ol>
<li>chat.css</li>
<li>find.css</li>
<li>friend.css</li>
<li>friends.css</li>
<li>mobile.css</li>
<li>more.css</li>
<li>setting.css</li>
</ol></div></div></div>

<h3 id="reset-css"><a href="#reset-css" class="headerlink" title="reset.css"></a>reset.css</h3><p>모든 기본 style 값을 0으로 바꾼다. 여기서 모든 style 값이란 margin, padding, display, font-size.. 등등의 css 속성들을 말한다.</p>
<ul>
<li>Reset CSS란 설명하자면 브라우저간의 차이를 최대한 없에서, 스타일이 0인 상태에서 디자인을 만들어 나가기 위해 생겨난것입니다. *font-size도 h1, h2, .. h7, p, a, font 가릴 것 없이 초기화 됨(크기가 같음.)</li>
<li>또한 reset.css 대신 <strong><code>normalize.css</code></strong>를 사용할 수도 았다.</li>
<li>reset.css가 모든 기본 값을 초기화시키는 것이라면 normalize.css는 기본적으로 각 브라우저의 스타일을 따르고 있지만 기준을 만들어 줄 수 있다.</li>
<li>즉, 모든 브라우저에서 한 태그(e.g.s h1)에 대한 크기를 같은 크기로 만드는 등의 기준을 세울 수 있다.</li>
</ul>
<p>Refer: <a href="http://meyerweb.com/eric/tools/css/reset/" target="_blank" rel="noopener">http://meyerweb.com/eric/tools/css/reset/</a></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://academy.nomadcoders.co/p/kakaoclone_total" target="_blank" rel="noopener">[이론+실전] 코코아톡 클론 코딩</a></li>
<li><a href="https://www.youtube.com/watch?v=6ZQAKorChFs" target="_blank" rel="noopener">노마드 아카데미 카카오톡 클론코딩 소개</a></li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Project</category>
        <category>Clone Coding</category>
        <category>Web Development</category>
      </categories>
      <tags>
        <tag>Project</tag>
      </tags>
  </entry>
  <entry>
    <title>What is Go language?</title>
    <url>/2020/01/14/2020-01-14-What%20is%20Go%20language/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Go는 2009년 구글이 개발한 프로그래밍 언어로, 간단하고 신뢰성(Reliability)이 있으며 효율적인 소프트웨어를 쉽게 구축할 수 있는 오픈 소스 프로그래밍 언어다.</p>
<!-- ![GO Character](https://www.vertica.com/wp-content/uploads/2019/07/Golang.png) -->
<a href="https://www.vertica.com/wp-content/uploads/2019/07/Golang.png" title="Gopher" class="gallery-item"><img src="https://www.vertica.com/wp-content/uploads/2019/07/Golang.png" class="" width="400" title="Gopher" alt="Gopher"></a>

<p><strong><code>↑ Gopher</code></strong></p>
<ol>
<li>Go는 다른 언어의 긍정적인 특징들을 유지하면서 공통이 되는 문제들을 해결할 새로운 프로그래밍 언어를 설계하기 위해 구글의 엔지니어 Robert Griesemer, 롭 파이크, 켄 톰프슨에 의해 실험적으로 시작되었다.</li>
<li>나중의 인터뷰에서, 언어 설계자 3명 모두 자신들이 C++의 복잡성을 싫어하며 이로 인해 새로운 언어를 설계하는 계기가 되었다고 언급하였다.</li>
</ol>
<h2 id="Go의-언어-설계-및-특징"><a href="#Go의-언어-설계-및-특징" class="headerlink" title="Go의 언어 설계 및 특징"></a>Go의 언어 설계 및 특징</h2><p><strong>Go는 단순함과 실용성을 지향하는 언어다.</strong></p>
<ul>
<li>keyword가 25개밖에 되지 않고 문법 또한 간결해 입문이 쉬운 편이라고 한다.</li>
</ul>
<p><strong>Go의 문법은 대체로 C와 비슷하다.</strong></p>
<ul>
<li>코드 블록들은 중괄호로 둘러싸고 <code>for</code>, <code>switch</code>, <code>if</code>를 포함한 일반적인 제어구조를 가지고 있다.</li>
<li>C 와 다르게, 한 라인 끝의 세미콜론은 필수가 아닌 옵션이다.</li>
<li>변수 선언은 다르게 작성되고 대개 옵션이다.</li>
<li>형변환은 명시적으로 해야 한다.</li>
</ul>
<p><strong>Go는 그리 좋지 않은 하드웨어에서도 빠르게 컴파일될 수 있도록 디자인되었다.</strong></p>
<ul>
<li>Go 언어의 특징은 컴파일 언어이지만 컴파일러의 컴파일 속도가 매우 빨라 인터프리터 언어처럼 쓸 수 있다는 점에 있다.</li>
<li>C++나 Java에 있는 기능들 중 타입 상속, 제너릭, 표명(assertion), 메서드 오버로딩, 포인터 연산은 Go 에서 포함하고 있지 않다.</li>
<li>Go 를 만들고 있는 개발자들은, 제너릭 등은 급하진 않지만 어느 시점에는 기능이 도입될 것이라고 한다.</li>
</ul>
<p><strong>Go는 일차적으로 시스템 프로그래밍을 위해 개발되었다.</strong></p>
<ul>
<li>C++와 같이 Go는 컴파일러를 통해 컴파일되며, 정적 타입 (Statically Typed)의 언어이다.</li>
<li>또한 Java와 같이 Go는 Garbage Collection 기능을 제공한다.</li>
</ul>
<h2 id="단점"><a href="#단점" class="headerlink" title="단점"></a>단점</h2><p>실제로 고성능 연산에 사용하기에는 C/C++ 에 비해 느리며, 저수준 시스템 개발에서는 가비지 컬렉션과 고루틴을 지원하기 위한 무거운 런타임 등으로 인해 사용이 불가능에 가깝다.</p>
<p>그런 이유로 대체로 개발 속도와 실행 속도, 병행성 사이의 적정 지점이 필요한 서버 애플리케이션 개발에 많이 사용되는 편.</p>
<ol>
<li><p>바이트코드를 생성하는 언어가 아니므로, 바이너리만 배포할 경우 C/C++ 프로그램이 그렇듯 해당 타깃 머신에 맞춰서 각각 컴파일해야 한다. 그렇게 하지 않고서 다중 플랫폼을 지원하려면 소스 코드째로 배포해야 한다.</p>
</li>
<li><p>Go 언어의 설계 지향점은 시스템 프로그래밍 언어였지만, 가비지 컬렉션의 지원이나 제네릭의 부재로 인해 박싱/언박싱이 불필요하게 많이 일어나는 등 C/C++ 을 대체할 수 있는 언어는 아니라는 것에 합의가 이루어지고 있는 상황이다.</p>
</li>
</ol>
<h2 id="병행성"><a href="#병행성" class="headerlink" title="병행성"></a>병행성</h2><p>병행성(concurrency)이란 컴퓨터 과학에서 여러 계산을 동시에 수행하는 시스템의 특성을 말한다.</p>
<ul>
<li>예를 들어 OS가 사용하는 가상 메모리는 컴퓨터의 병행성을 높이는 기법이다.</li>
<li>가상메모리를 이용함으로써 주기억장치의 부족한 물리적 저장공간을 보조기억장치를 이용해서 가상으로 늘려줌으로써 주기억장치의 용량이 확대된 것 처럼 더 많은 프로그램을 동시에 실행 가능하게 만든다.</li>
</ul>
<p>Go를 이용해 프로그램들이 서로 소통하면서 상태를 공유하는 병행성(concurrency) 프로그램을 쉽게 만들 수 있다.</p>
<ul>
<li><strong>병행성</strong> 이란 멀티쓰레딩, 병렬 컴퓨팅 뿐 아니라, 비동기성 입출력 또한 포함한다.</li>
<li>예를 들어, 이벤트 기반 서버와 같이, 데이터베이스나 네트워크 작업과 같이 시간이 많이 걸리는 연산을 하는 동안 프로그램이 다른 일을 하는 것을 말한다.</li>
</ul>
<h2 id="목적"><a href="#목적" class="headerlink" title="목적"></a>목적</h2><p>Go는 정적 타입 컴파일 언어의 효율성과 동적 언어처럼 <strong>쉬운 프로그래밍</strong>을 할 수 있도록 하는 것을 목표로 한다. 또다른 목적은:</p>
<ol>
<li>안전성 (타입 안전성과 메모리 안전성)</li>
<li>병행성과 통신을 위한 훌륭한 지원</li>
<li>효과적인 가비지 컬렉션</li>
<li>빠른 컴파일</li>
</ol>
<h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><h3 id="Hello-world-in-Go"><a href="#Hello-world-in-Go" class="headerlink" title="Hello world in Go"></a>Hello world in Go</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	fmt.Println(<span class="string">"Hello, world!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Hello-world-example-of-Cgo"><a href="#Hello-world-example-of-Cgo" class="headerlink" title="Hello world example of Cgo"></a>Hello world example of Cgo</h3><p>Go의 C 코드를 위한 <strong>FFI</strong>(Foreign Function Interface)이다.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"C"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	C.puts(<span class="string">"Hello world!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://ko.wikipedia.org/wiki/Go_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)" target="_blank" rel="noopener">wiki</a></li>
<li><a href="http://codingnuri.com/golang-book/" target="_blank" rel="noopener">Go 프로그래밍 입문</a></li>
<li><a href="http://golang.site/go/basics" target="_blank" rel="noopener">예제로 배우는 Go 프로그래밍</a></li>
</ul>
<hr>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Programming</category>
        <category>Go</category>
      </categories>
      <tags>
        <tag>Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Position property</title>
    <url>/2020/01/14/2020-01-14-position%20property%20note/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><blockquote>
<p>Default position value</p>
</blockquote>
<p><code>Default</code>로 모든 박스는 포지션이 static이다. 이 뜻은<br>그 element를 거기 놓으면 거기 있을 것이다~라는 뜻이다.</p>
<hr>
<h2 id="fixed"><a href="#fixed" class="headerlink" title="fixed"></a>fixed</h2><blockquote>
<p>Fixed stays with me while I scroll.</p>
</blockquote>
<p>포지션이 fixed 라면 화면 상에 표시되는 위치에 고정되어 스크롤해도 사라지지 않는다.<br>즉, element가 그 위치에 overwrap해서 고정된다.</p>
<hr>
<h2 id="absolute"><a href="#absolute" class="headerlink" title="absolute"></a>absolute</h2><ul>
<li>absolute는 fixed와 비슷하다. 어디에든 붙일 수 있지만 스크롤한다고 보이지는 않는다.</li>
<li>포지션을 absolute로 설정하고 설정 값을 주면 html 상에서 부모(father)에 해당하는 박스를 찾지 못할 수도 있다.</li>
<li>따라서 <code>relative</code> 포지션이 없는 경우, absolute는 문서의 본무 body에 맞춰서 포지션을 잡게 된다.</li>
</ul>
<blockquote>
<p>즉, <code>position: absolute;</code>가 설정되면 html 상에서 해당 element와 관계가 있는 (relative - 부모박스) element를 살펴보고 이에 상응해서 포지션이 결정된다. 이 경우 부모 박스가 상응하는 관계가 없어서 그냥 우리가 설정한 값대로 움직이게 됨으로 부모에 해당하는 박스를 찾지 못한다는 뜻이다.</p>
</blockquote>
<p>그렇기 때문에 만약 부모 박스가 없으면 child box는 문서 본문 body에 맞춰서 position을 잡을 것이다. 반대로 부모 박스에 <strong>position: relative;</strong> 를 설정하면 child box는 그에 상대해서 <code>absolute</code> 포지션을 잡을 것이다.</p>
<blockquote>
<ol>
<li>Not stays with me while I scroll.</li>
<li>Positioning relative to relative.</li>
</ol>
</blockquote>
<hr>
<h3 id="NOTE"><a href="#NOTE" class="headerlink" title="NOTE"></a>NOTE</h3><ol>
<li>주의해야 할 점은 <code>absolute</code> 포지션을 부모 element에 상대적으로 사용하려면 부모 element에서 <code>relative</code> 포지션을 먼저 설정해줘야 한다.</li>
<li>그게 설정되어야 차일즈 element는 부모 element 안에 위치할 수 있다.</li>
</ol>
<hr>
<h2 id="position-html"><a href="#position-html" class="headerlink" title="position.html"></a>position.html</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Position property<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      /*</span><br><span class="line">            각 브라우저 마다 가지고 있는 Default 값을 상쇄하기 위해서</span><br><span class="line">            아래와 같은 설정을 해준다. </span><br><span class="line">        */</span><br><span class="line">      body,</span><br><span class="line">      html &#123;</span><br><span class="line">        height: 100%;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      body &#123;</span><br><span class="line">        height: 100%;</span><br><span class="line">        background-color: gray;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="selector-class">.abs-box</span> &#123;</span></span><br><span class="line">        width: 400px;</span><br><span class="line">        height: 400px;</span><br><span class="line">        background-color: yellow;</span><br><span class="line">        position: relative;</span><br><span class="line">        top: 300px;</span><br><span class="line">        left: 50%;</span><br><span class="line">        transform: translate(-50%, -50%);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="selector-class">.abs-child</span> &#123;</span></span><br><span class="line">        width: 100px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: green;</span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 10px;</span><br><span class="line">        left: 10px;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"abs-box"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"abs-child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/position_property.png" title="Image description" class="gallery-item"><img src="../../../../img/position_property.png" alt="Image description"></a></p>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>HTML5</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>CSS3</tag>
      </tags>
  </entry>
  <entry>
    <title>Advanced CSS</title>
    <url>/2020/01/14/2020-01-14-Advanced%20CSS/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="What-is-Transitions"><a href="#What-is-Transitions" class="headerlink" title="What is Transitions?"></a>What is Transitions?</h2><ol>
<li>트랜지션(Transitions)이란 element의 이동 및 변경을 멋지게 보여주는 효과들이다.</li>
<li>트랜지션은 focus, active, hover에서 효과적으로 사용된다.</li>
<li>즉 <strong>transition</strong> 이란 element가 하나의 state에서 다른 state로 넘어갈 때의 효과를 말한다.</li>
</ol>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>Text<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><figcaption><span>CSS</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">transition</span>: background-color <span class="number">5s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>여기서,</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">background-color</span> 5<span class="selector-tag">s</span> <span class="selector-tag">ease-in-out</span>;</span><br></pre></td></tr></table></figure>

<ol>
<li>위 코드의 의미는 배경색(background-color)를 <code>5s</code> 안에 <strong>ease-in-out</strong> 애니메이션 효과를 적용하여 바꾸라는 의미이다.</li>
<li>또한 이렇게 <strong>transition</strong> 앞에 바꾸고 싶은 property 값을 명시해주면 그 속성 값만 특정 효과를 적용하여 바꾸는 것이며, 만약 1개 이상의 설정값을 바꾸고 싶다면 transition 앞에 <code>all</code>이라고 적으면 된다.</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">all</span> 5<span class="selector-tag">s</span> <span class="selector-tag">ease-in-out</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://developer.mozilla.org/en/docs/Web/CSS/transition" target="_blank" rel="noopener">Official Transition Documentation</a></p>
<hr>
<h2 id="What-is-Transformation"><a href="#What-is-Transformation" class="headerlink" title="What is Transformation?"></a>What is Transformation?</h2><ol>
<li>트랜스포매이션(Transformation)은 html문서의 element들을 변경, 모습이 변하는 효과를 뜻한다.</li>
<li>즉 transform이란 element의 모양새(shape)를 바꾸는 것이다.</li>
<li><code>Transition</code>과 같이 합쳐서 사용할 수 있다. (즉 하나의 state에서 다른 state로 변할 때의 그 state에서의 모양새를 변경할 수 있다.)</li>
</ol>
<h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">0.5s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">skew</span>(<span class="number">30deg</span>, <span class="number">20deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>이렇게 되면 <code>.box</code>에 해당하는 element에 마우스를 올려놓았을 때 0.5s 초 안에 해당 element가<br>설정한 [<code>skew(...)</code>] 모습으로 변화한다.</p>
<p>또한 <code>transform</code> 설정을 복수로 결합하여 사용할 수 있다.</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">rotate</span>(1<span class="selector-tag">turn</span>) <span class="selector-tag">scale</span>(0<span class="selector-class">.5</span>, 0<span class="selector-class">.5</span>);</span><br></pre></td></tr></table></figure>

<h3 id="Reference-1"><a href="#Reference-1" class="headerlink" title="Reference"></a>Reference</h3><ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform" target="_blank" rel="noopener">CSS Transform Documentation</a></li>
</ul>
<hr>
<h2 id="What-is-Animation"><a href="#What-is-Animation" class="headerlink" title="What is Animation?"></a>What is Animation?</h2><ul>
<li><strong>Keyframe</strong> 은 CSS로 하여금 사용자가 animation을 생성했다는 것을 알려준다.</li>
</ul>
<blockquote>
<p><strong>First step</strong>: Default status<br><strong>Second step</strong>: The element that Something changes</p>
</blockquote>
<ul>
<li>Animation status가 2개만 필요할 때는 <code>from</code> ~ <code>to</code>만 작성하면 된다.</li>
<li>더 세부적인 각 단계별 status step를 작성하고 싶을 때는 <strong>0% ~ 100%</strong> 까지 작성하면 된다.</li>
</ul>
<h3 id="Example-2"><a href="#Example-2" class="headerlink" title="Example"></a>Example</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>Text<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">  <span class="attribute">animation</span>: <span class="number">1.5s</span> ScaleAndRotateSquare infinite ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> ScaleAndRotateSquare &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">1turn</span>) <span class="built_in">scale</span>(<span class="number">0.5</span>, <span class="number">0.5</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="What-is-media-query"><a href="#What-is-media-query" class="headerlink" title="What is media query?"></a>What is media query?</h2><blockquote>
<p>Media queries are conditions that let me change the CSS based on the size of the browser</p>
</blockquote>
<ol>
<li><code>media query</code>는 사용자의 디스플레이 환경에 따른 CSS 설정을 바꾸어 줄 수 있는 기능이다.</li>
<li>mobile - desktop 환경에 따른 디자인 변경을 가능하게 해준다.</li>
<li>반응형 웹 디자인에 유용</li>
</ol>
<h3 id="Example-3"><a href="#Example-3" class="headerlink" title="Example"></a>Example</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">320px</span>) <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">640px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>HTML5</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>CSS3</tag>
      </tags>
  </entry>
  <entry>
    <title>Fluid layouts with Flexbox</title>
    <url>/2020/01/12/2020-01-12-Flexbox%20Note/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<p><strong>flex</strong> 이전, <code>display</code> 설정 시에 자동으로 완성되는 grid가 없었기 때문에 일일이 조절해줘야 했다. 예를 들어 element들을 가운데로 이동하려면 간격을 조정해야 하며, 모바일 상에서 볼때 다른 모습으로 출력이 되어서 보이는 등의 문제점들이 있었다. <code>flex</code>는 이러한 문제들을 해결할 수 있다.</p>
<hr>
<blockquote>
<p><strong>On Wiki,</strong><br>CSS Flexible Box Layout, commonly known as Flexbox, is a CSS3 web layout model.<br>It is in the W3C’s candidate recommendation (CR) stage. The flex layout allows<br>responsive elements within a container to be automatically arranged<br>depending upon screen size (or device).</p>
</blockquote>
<p>일반적으로 Flexbox로 알려진 CSS Flexible Box Layout은 CSS3 웹 레이아웃 모델입니다. W3C의 후보 추천 단계에 있습니다. 플렉스 레이아웃을 사용하면 컨테이너 내의 반응 형 요소를 화면 크기에 따라 자동으로 배열 할 수 있습니다.</p>
<h2 id="NOTE"><a href="#NOTE" class="headerlink" title="NOTE"></a>NOTE</h2><ol>
<li>flex는 엘리먼트들의 크기나 위치를 쉽게 잡아주는 도구이다.</li>
<li>flexbox의 콘텐츠는 어떤 방향에든 위치할 수 있으며, 동적으로 변경가능한 순서를 지정할 수도 있고, 가용한 공간 내에서 크기와 위치를 자동으로 조정하기도 한다.</li>
<li>지금까지 레이아웃과 관련된 다양한 속성들이 있었지만 그리 효과적이지 않지만 flex를 이용하면 레이아웃을 매우 효과적으로 표현할 수 있습니다.</li>
</ol>
<blockquote>
<p>요소가 유연한 품목(flexible item)이 아닌 경우, 플렉스 속성은 아무런 효과도 없다. 과거 문법 display: box(old)와 같이 사용되다가 비공식적인 문법으로 display: flexbox(hybrid)와 같이 사용되었다. 근래에 명세에는 display: flex(modern)가 되었다.</p>
</blockquote>
<p>If the element is not a flexible item, the flex property has no effect.</p>
<hr>
<h2 id="How-to-use-the-flex"><a href="#How-to-use-the-flex" class="headerlink" title="How to use the flex"></a>How to use the flex</h2><p>flex 속성은 flex-grow, flex-shrink, flex-basis의 축약속성으로, 같은 컨테이너안쪽에 flexible item들에 대한 속성값을 지정한다. 기본값은 0 1 auto이다.</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* flex : flex-grow flex-shrink flex-basis */</span></span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-flex</span>: <span class="number">1</span>; <span class="comment">/* Safari 6.1+ */</span></span><br><span class="line">  <span class="attribute">-ms-flex</span>: <span class="number">1</span>; <span class="comment">/* IE 10 */</span></span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>먼저 부모(parent) 클래스를 만들고, 자식 box(childs) 박스들을 만든다.</li>
<li><code>flex</code> 사용시 자식(childs) 박스에 적용하지 않는다. 오직 부모 클래스에만 적용하면 된다.</li>
<li>부모 클래스에 <code>display: flex</code>라고 쓰면 바로 적용된다. 이때 자식 박스들은 <code>inline-block</code>과 같이 출력된다.</li>
</ol>
<hr>
<h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><p><a href="../../../../img/flex-base.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-base.jpg" alt="Image description"></a></p>
<h3 id="Container-Properties"><a href="#Container-Properties" class="headerlink" title="Container Properties"></a>Container Properties</h3><table>
<thead>
<tr>
<th>Name</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td><code>flex-flow</code></td>
<td align="left"><code>flex-direction</code>와 <code>flex-wrap</code>의 단축 속성</td>
</tr>
<tr>
<td><code>flex-direction</code></td>
<td align="left">Flex Items의 주 축(main-axis)을 설정</td>
</tr>
<tr>
<td><code>flex-wrap</code></td>
<td align="left">flexible item을 wrap 할것인지 아닌지를 지정한다.</td>
</tr>
<tr>
<td><code>justify-content</code></td>
<td align="left">주 축(main-axis)의 정렬 방법을 설정</td>
</tr>
<tr>
<td><code>align-content</code></td>
<td align="left">교차 축(cross-axis)의 정렬 방법을 설정(2줄 이상)</td>
</tr>
<tr>
<td><code>align-items</code></td>
<td align="left">교차 축(cross-axis)에서 Items의 정렬 방법을 설정(1줄)</td>
</tr>
</tbody></table>
<h3 id="Items-Properties"><a href="#Items-Properties" class="headerlink" title="Items Properties"></a>Items Properties</h3><table>
<thead>
<tr>
<th>Name</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td><code>order</code></td>
<td align="left">Flex Item의 순서를 설정</td>
</tr>
<tr>
<td><code>flex</code></td>
<td align="left"><code>flex-grow</code>, <code>flex-shrink</code>, <code>flex-basis</code>의 단축 속성</td>
</tr>
<tr>
<td><code>flex-grow</code></td>
<td align="left">Flex Item의 증가 너비 비율을 설정</td>
</tr>
<tr>
<td><code>flex-shrink</code></td>
<td align="left">Flex Item의 감소 너비 비율을 설정</td>
</tr>
<tr>
<td><code>flex-basis</code></td>
<td align="left">Flex Item의 (공간 배분 전) 기본 너비 설정</td>
</tr>
<tr>
<td><code>align-self</code></td>
<td align="left">교차 축(cross-axis)에서 Item의 정렬 방법을 설정</td>
</tr>
</tbody></table>
<h3 id="주-축-main-axis-과-교차-축-cross-axis"><a href="#주-축-main-axis-과-교차-축-cross-axis" class="headerlink" title="주 축(main-axis)과 교차 축(cross-axis)"></a>주 축(main-axis)과 교차 축(cross-axis)</h3><p>주 축(main-axis)과 교차 축(cross-axis)의 개념은 다음과 같습니다.</p>
<p><strong><code>row</code></strong>: Items를 수평축으로 표시하므로 이때는 주 축이 수평이며 교차 축은 수직이 됩니다.<br><strong><code>column</code></strong>: Items를 수직축으로 표시하므로 주 축은 수직이며 교차 축은 수평이 됩니다.</p>
<p>즉, 방향(수평, 수직)에 따라 주 축과 교차 축이 달라집니다.</p>
<p><a href="../../../../img/flex-axis.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-axis.jpg" alt="Image description"></a></p>
<h3 id="시작점-flex-start-과-끝점-flex-end"><a href="#시작점-flex-start-과-끝점-flex-end" class="headerlink" title="시작점(flex-start)과 끝점(flex-end)"></a>시작점(flex-start)과 끝점(flex-end)</h3><ol>
<li>시작점(flex-start)과 끝점(flex-end)이라는 개념도 있습니다.</li>
<li>이는 주 축이나 교차 축의 시작하는 지점과 끝나는 지점을 지칭합니다.</li>
<li>역시 방향에 따라 시작점과 끝점이 달라집니다.</li>
</ol>
<p><a href="../../../../img/flex-start-end.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-start-end.jpg" alt="Image description"></a></p>
<h2 id="Container-Properties-1"><a href="#Container-Properties-1" class="headerlink" title="Container Properties"></a>Container Properties</h2><h3 id="flex-flow"><a href="#flex-flow" class="headerlink" title="flex-flow"></a>flex-flow</h3><p>The flex-flow property is a shorthand property for: <code>flex-direction</code> + <code>flex-wrap</code>.</p>
<blockquote>
<p>이 속성은 단축 속성으로 Flex Items의 주 축(main-axis)을 설정하고 Items의 여러 줄 묶음(줄 바꿈)도 설정합니다.</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">flex-flow</span>: 주축 여러줄묶음;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.flex-container</span> &#123;</span><br><span class="line">  <span class="attribute">flex-flow</span>: row-reverse wrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="flex-direction"><a href="#flex-direction" class="headerlink" title="flex-direction"></a>flex-direction</h3><p>The flex-direction property specifies the direction of the flexible items.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flex-direction: row|row-reverse|column|column-reverse|initial|inherit;</span><br></pre></td></tr></table></figure>

<p>Set the direction of the flexible items inside the &lt;div&gt; element in reverse order:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* Safari */</span></span><br><span class="line">  <span class="attribute">-webkit-flex-direction</span>: row-reverse; <span class="comment">/* Safari 6.1+ */</span></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-direction.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-direction.jpg" alt="Image description"></a></p>
<h4 id="flex-wrap"><a href="#flex-wrap" class="headerlink" title="flex-wrap"></a>flex-wrap</h4><p>The flex-wrap property specifies whether the flexible items should wrap or not.</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">flex-wrap: nowrap|wrap|wrap-reverse|initial|inherit;</span><br></pre></td></tr></table></figure>

<p>Make the flexible items wrap if necessary:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* Safari */</span></span><br><span class="line">  <span class="attribute">-webkit-flex-wrap</span>: wrap; <span class="comment">/* Safari 6.1+ */</span></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-wrap.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-wrap.jpg" alt="Image description"></a></p>
<h4 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content"></a>justify-content</h4><ol>
<li><code>justify-content</code> 속성은 플렉스 컨테이너의 현재 라인의 주축을 따라 플렉스 항목을 정렬한다.</li>
<li>flex items 사이, 그리고 주위에 공간을 분배하는 방법을 정의한다.</li>
<li>정렬은 유연한 길이와 자동 여백이 해결된 후에 수행된다.</li>
</ol>
<blockquote>
<p>The <code>justify-content</code> property aligns flex items along the main axis of the current line of the flex container. It defines how space is distributed between and around flex items. The alignment is done after any flexible lengths and any auto margins have been resolved.</p>
</blockquote>
<h5 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h5><p>만약 <code>flex-direction:row</code> 라면(default value), <em>justify-content</em> 가 수평으로 적용된다. 이때의 주 축은 수평축이기 때문이다.</p>
<blockquote>
<p>따라서 align-items는 수직이 된다.</p>
</blockquote>
<p>반대로 <code>flex-direction:column</code> 이 되면, <em>justify-content</em> 는 수직이 되고, <em>align-items</em> 는 수평이 된다.</p>
<blockquote>
<p>그래서 여기서 <code>align-items:center</code>라고 쓰면, 수평적으로 적용되어 가운데에 정렬된다.</p>
</blockquote>
<p><a href="../../../../img/flex-justify-content.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-justify-content.jpg" alt="Image description"></a></p>
<h4 id="align-content"><a href="#align-content" class="headerlink" title="align-content"></a>align-content</h4><p>The <code>align-content</code> property modifies the behavior of the flex-wrap property. It is similar to align-items, but instead of aligning flex items, it aligns flex lines.</p>
<blockquote>
<p>이 속성이 유효하려면 반드시 2줄 이상을 가져야 한다.</p>
</blockquote>
<p>Pack lines toward the center of the flex container:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#c3c3c3</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">align-content</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-align-content.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-align-content.jpg" alt="Image description"></a></p>
<h4 id="align-items"><a href="#align-items" class="headerlink" title="align-items"></a>align-items</h4><p>The <code>align-items</code> property specifies the default alignment for items inside the flexible container.</p>
<ol>
<li>교차 축(cross-axis)에서 Items의 정렬 방법을 설정합니다.</li>
<li>Items가 한 줄일 경우 많이 사용합니다.</li>
</ol>
<p>주의할 점은 Items가 <code>flex-wrap</code>을 통해 여러 줄(2줄 이상)일 경우에는 <code>align-content</code> 속성이 우선합니다.<br>따라서<code>align-items</code>를 사용하려면 <code>align-content</code> 속성을 기본값(stretch)으로 설정해야 합니다.</p>
<p><a href="../../../../img/flex-align-items.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-align-items.jpg" alt="Image description"></a></p>
<h5 id="CSS-align-self-Property"><a href="#CSS-align-self-Property" class="headerlink" title="CSS align-self Property"></a>CSS align-self Property</h5><p>The align-self property specifies the alignment for the selected item inside the flexible container.</p>
<table>
<thead>
<tr>
<th>NOTE: The <code>align-self</code> property overrides the flexible container’s <code>align-items</code> property.</th>
</tr>
</thead>
</table>
<ol>
<li>즉, <code>align-self</code>는 flex 설정된 부모 클래스 안의 자식 클래스에 선언하는 속성이다.</li>
<li>특정 자식 클래스의 정렬 방식을 설정하고 싶을 때 사용하면 된다.</li>
<li>주의할 점은 이 속성은 <code>align-items</code>속성을 무시, 즉, 덮어쓰기 때문에 이 점을 기억하자.</li>
</ol>
<p>Center the alignments for one of the items inside a flexible element:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#myBlueDiv</span> &#123;</span><br><span class="line">  <span class="attribute">align-self</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Example: <a href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss3_align-self" target="_blank" rel="noopener">W3schools.com</a></p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"father"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">id</span>=<span class="string">"Blue"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.father</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-start;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: nowrap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: orange;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#Blue</span> &#123;</span><br><span class="line">  <span class="attribute">align-self</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Result</strong></p>
<p><a href="../../../../img/flex.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex.jpg" alt="Image description"></a></p>
<hr>
<h2 id="Items-Properties-1"><a href="#Items-Properties-1" class="headerlink" title="Items Properties"></a>Items Properties</h2><h3 id="order"><a href="#order" class="headerlink" title="order"></a>order</h3><p>The <code>order</code> property specifies the order of a flexible item relative to the rest of the flexible items inside the same container.</p>
<ol>
<li>Item의 순서를 설정합니다.</li>
<li>Item에 숫자를 지정하고 숫자가 클수록 순서가 밀립니다.</li>
<li>음수가 허용됩니다.</li>
</ol>
<blockquote>
<p>HTML 구조와 상관없이 순서를 변경할 수 있기 때문에 유용합니다.</p>
</blockquote>
<p>Set the order of the flexible items:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>The order Property<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:coral;"</span> <span class="attr">id</span>=<span class="string">"myRedDIV"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:lightblue;"</span> <span class="attr">id</span>=<span class="string">"myBlueDIV"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:lightgreen;"</span> <span class="attr">id</span>=<span class="string">"myGreenDIV"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:pink;"</span> <span class="attr">id</span>=<span class="string">"myPinkDIV"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#c3c3c3</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Standard syntax */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#myRedDIV</span> &#123;</span><br><span class="line">  <span class="attribute">order</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#myBlueDIV</span> &#123;</span><br><span class="line">  <span class="attribute">order</span>: <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#myGreenDIV</span> &#123;</span><br><span class="line">  <span class="attribute">order</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#myPinkDIV</span> &#123;</span><br><span class="line">  <span class="attribute">order</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-order.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-order.jpg" alt="Image description"></a></p>
<h3 id="flex"><a href="#flex" class="headerlink" title="flex"></a>flex</h3><p>The flex property is a shorthand property for:</p>
<ul>
<li><code>flex-grow</code></li>
<li><code>flex-shrink</code></li>
<li><code>flex-basis</code></li>
</ul>
<p>The <code>flex</code> property sets the flexible length on flexible items.</p>
<blockquote>
<p>Item의 너비(증가, 감소, 기본)를 설정하는 단축 속성입니다.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flex: flex-grow flex-shrink flex-basis|auto|initial|inherit;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>Name</th>
<th align="left">Description</th>
<th align="left">Default</th>
</tr>
</thead>
<tbody><tr>
<td><code>flex-grow</code></td>
<td align="left">Item의 증가 너비 비율을 설정</td>
<td align="left"><code>0</code></td>
</tr>
<tr>
<td><code>flex-shrink</code></td>
<td align="left">Item의 감소 너비 비율을 설정</td>
<td align="left"><code>1</code></td>
</tr>
<tr>
<td><code>flex-basis</code></td>
<td align="left">Item의 (공간 배분 전) 기본 너비 설정</td>
<td align="left"><code>auto</code></td>
</tr>
</tbody></table>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">flex</span>: 증가너비 감소너비 기본너비;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">1</span> <span class="number">20px</span>; <span class="comment">/* 증가너비 감소너비 기본너비 */</span></span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">1</span>; <span class="comment">/* 증가너비 감소너비 */</span></span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">20px</span>; <span class="comment">/* 증가너비 기본너비 (단위를 사용하면 flex-basis가 적용됩니다) */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li><strong>flex-grow</strong> 를 제외한 개별 속성은 생략할 수 있습니다.</li>
<li><strong>flex: 1</strong> == <strong>flex-grow: 1</strong></li>
<li>그러면 나머지 속성은 생략했으니 기본값이 적용되어 <strong>flex-shrink:1</strong>, <strong>flex-basis:auto</strong>가 된다.</li>
<li>즉 <strong>flex:1</strong> 혹은 <strong>flex:1 1</strong> 은 <strong>flex: 1 1 auto</strong>와 같다고 볼 수 있습니다만 그렇지 않습니다.</li>
<li><code>flex-basis</code>의 기본값은 <code>auto</code>입니다만 단축 속성인 <strong>flex</strong> 에서 그 값을 생략할 경우 <strong>0</strong> 이 적용됩니다.</li>
<li>다시 정리하면 <code>flex: 1;</code> 혹은<code>flex: 1 1;</code>은 <code>flex: 1 1 0;</code>이 된다는 것입니다.</li>
</ol>
<p>Let all the flexible items be the same length, regardless of its content:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>The flex Property<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:coral;"</span>&gt;</span>RED<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:lightblue;"</span>&gt;</span>BLUE<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:lightgreen;"</span>&gt;</span>Green div with more content.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-item.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-item.jpg" alt="Image description"></a></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-zero-item.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-zero-item.jpg" alt="Image description"></a></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">1</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-one-one-auto-item.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-one-one-auto-item.jpg" alt="Image description"></a></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">1</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>OR,</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">flex-grow</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">flex-shrink</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="../../../../img/flex-one-one-zero-item.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-one-one-zero-item.jpg" alt="Image description"></a></p>
<h3 id="flex-grow"><a href="#flex-grow" class="headerlink" title="flex-grow"></a>flex-grow</h3><p>The <code>flex-grow</code> property specifies how much the item will grow relative to the rest of the flexible items inside the same container.</p>
<ol>
<li>Item의 증가 너비 비율을 설정합니다.</li>
<li>숫자가 크면 더 많은 너비를 가집니다.</li>
<li>Item이 가변 너비가 아니거나, 값이 0일 경우 효과가 없습니다.</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">flex-grow</span>: 증가너비;</span><br></pre></td></tr></table></figure>

<ul>
<li>모든 Items의 총 증가 너비(flex-grow)에서 각 Item의 증가 너비의 비율 만큼 너비를 가질 수 있습니다.</li>
</ul>
<p>예를 들어 Item이 3개이고 증가 너비가 각각 <code>1, 2, 1</code>이라면,</p>
<ol>
<li>첫 번째 Item은 총 너비의 <code>25%</code>(1/4)을,</li>
<li>두 번째 Item은 총 너비의 <code>50%</code>(2/4)를,</li>
<li>세 번째 Item은 총 너비의 <code>25%</code>(1/4)을 가지게 됩니다.</li>
</ol>
<p><a href="../../../../img/flex-grow.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-grow.jpg" alt="Image description"></a></p>
<h3 id="flex-shrink"><a href="#flex-shrink" class="headerlink" title="flex-shrink"></a>flex-shrink</h3><ol>
<li>Item이 감소하는 너비의 비율을 설정합니다.</li>
<li>숫자가 크면 더 많은 너비가 감소합니다.</li>
<li>Item이 가변 너비가 아니거나, 값이 0일 경우 효과가 없습니다.</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">flex-shrink</span>: 감소너비;</span><br></pre></td></tr></table></figure>

<ul>
<li>감소 너비(<code>flex-shrink</code>)는 요소의 너비에 영향을 받기 때문에 계산하기 까다롭습니다.</li>
<li>영향을 받는다는 요소의 너비는 <code>width</code>, <code>height</code>, <code>flex-basis</code> 등으로 너비가 지정된 경우를 의미합니다.</li>
<li>Container의 너비가 줄어 Items의 너비에 영향을 미칠 경우, 영향을 미치기 시작한 지점부터 줄어든 거리 만큼 감소 너비 비율에 맞게 Item의 너비가 줄어듭니다.</li>
<li>예를 들어 Container의 너비가 줄어 Item의 너비에 영향을 미치기 시작한 지점부터 실제 줄어든 거리가 <code>90px</code>일 때, 요소 너비가 같은 Item이 2개이고 지정된 감소 너비가 각각 <code>2</code>와 <code>1</code>이라면, 감소 너비는 <code>2:1</code> 비율이며,</li>
</ul>
<h4 id="E-g"><a href="#E-g" class="headerlink" title="E.g"></a>E.g</h4><ol>
<li>첫 번째 Item은 90px의 <code>2/3</code>인 60px 만큼 너비가 감소하고,</li>
<li>두 번째 Item은 90px의 <code>1/3</code>인 30px 만큼 너비가 감소합니다.</li>
</ol>
<p><a href="../../../../img/flex-shrink.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-shrink.jpg" alt="Image description"></a></p>
<h3 id="flex-basis"><a href="#flex-basis" class="headerlink" title="flex-basis"></a>flex-basis</h3><p>The <code>flex-basis</code> property specifies the initial length of a flexible item.</p>
<ol>
<li>Item의 (공간 배분 전) 기본 너비(width)를 설정합니다.</li>
<li>값이 auto일 경우 width, height 등의 속성으로 Item의 너비를 설정할 수 있습니다.</li>
<li>하지만 단위 값이 주어질 경우 설정할 수 없습니다.</li>
</ol>
<table>
<thead>
<tr>
<th>Value</th>
<th align="left">Meaning</th>
<th align="left">Default</th>
</tr>
</thead>
<tbody><tr>
<td><code>auto</code></td>
<td align="left">가변 Item과 같은 너비</td>
<td align="left"><code>auto</code></td>
</tr>
<tr>
<td>단위</td>
<td align="left">px, em, cm 등 단위로 지정</td>
<td align="left"></td>
</tr>
</tbody></table>
<p><a href="../../../../img/flex-basis.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-basis.jpg" alt="Image description"></a></p>
<h3 id="align-self"><a href="#align-self" class="headerlink" title="align-self"></a>align-self</h3><p>교차 축(cross-axis)에서 개별 Item의 정렬 방법을 설정합니다.</p>
<ol>
<li><code>align-items</code>는 Container 내 모든 Items의 정렬 방법을 설정합니다.</li>
<li>필요에 의해 일부 Item만 정렬 방법을 변경하려고 할 경우 <code>align-self</code>를 사용할 수 있습니다.</li>
<li>이 속성은 <code>align-items</code> 속성보다 우선합니다.</li>
</ol>
<table>
<thead>
<tr>
<th>Value</th>
<th align="left">Description</th>
<th align="left">Default</th>
</tr>
</thead>
<tbody><tr>
<td><code>auto</code></td>
<td align="left">Container의 <code>align-items</code> 속성을 상속받음</td>
<td align="left"><code>auto</code></td>
</tr>
<tr>
<td><code>stretch</code></td>
<td align="left">Container의 교차 축을 채우기 위해 Item을 늘림</td>
<td align="left"></td>
</tr>
<tr>
<td><code>flex-start</code></td>
<td align="left">Item을 각 줄의 시작점(flex-start)으로 정렬</td>
<td align="left"></td>
</tr>
<tr>
<td><code>flex-end</code></td>
<td align="left">Item을 각 줄의 끝점(flex-end)으로 정렬</td>
<td align="left"></td>
</tr>
<tr>
<td><code>center</code></td>
<td align="left">Item을 가운데 정렬</td>
<td align="left"></td>
</tr>
<tr>
<td><code>baseline</code></td>
<td align="left">Item을 문자 기준선에 정렬</td>
<td align="left"></td>
</tr>
</tbody></table>
<p><a href="../../../../img/flex-align-self.jpg" title="Image description" class="gallery-item"><img src="../../../../img/flex-align-self.jpg" alt="Image description"></a></p>
<hr>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ol>
<li>부모 컨테이너(parent)를 <code>flex</code>로 선언하면, 그 안에 종속된 자식 박스(child)들을 움직일 수 있다.<blockquote>
<p>그렇기 때문에 각각 박스에게 일일이 명령할 필요가 없다.</p>
</blockquote>
</li>
<li>또한 flexbox는 그 안의 element도 움직일 수 있다.</li>
</ol>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://webdir.tistory.com/349" target="_blank" rel="noopener">WEBDIR</a></li>
<li><a href="https://www.w3schools.com/css/css3_flexbox.asp" target="_blank" rel="noopener">W3schools.com</a></li>
<li><a href="https://heropy.blog/2018/11/24/css-flexible-box/" target="_blank" rel="noopener">CSS Flex(Flexible Box) 완벽 가이드</a></li>
<li><a href="http://flexboxfroggy.com/#ko" target="_blank" rel="noopener">Practice Flexbox</a></li>
<li><a href="https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Flexible_Box_Layout/Flexbox%EC%9D%98_%EA%B8%B0%EB%B3%B8_%EA%B0%9C%EB%85%90" target="_blank" rel="noopener">flexbox의 기본 개념</a></li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>HTML5</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>CSS3</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ Primer Plus [1/2]</title>
    <url>/2019/12/20/2019-12-26-cplusplus-note1/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="C와-C-언어의-역사와-철학"><a href="#C와-C-언어의-역사와-철학" class="headerlink" title="C와 C++언어의 역사와 철학"></a>C와 C++언어의 역사와 철학</h2><p>일반적으로 컴퓨터 언어는 데이터와 알고리즘이라는 두가지 개념을 다룬다.</p>
<ol>
<li>데이터(data): 프로그램이 사용하고 처리하는 정보</li>
<li>알고리즘(algorithm): 프로그램이 데이터를 처리하는 방법</li>
</ol>
<h3 id="C의-프로그래밍-철학"><a href="#C의-프로그래밍-철학" class="headerlink" title="C의 프로그래밍 철학"></a>C의 프로그래밍 철학</h3><p>C언어는 <code>절차적(procedural)</code>언어이다.</p>
<blockquote>
<p>절차적이라는 말은 프로그래밍에서 데이터보다 알고리즘을 더 치중한다는 뜻이다.</p>
</blockquote>
<p>절차적 프로그래밍은 컴퓨터가 수행해야 할 동작들을 명확히 구분하고, 그 구분된 동작들을 프로그래밍 언어로 구현하는 것이다.</p>
<p>원하는 결과를 얻기 위해 컴퓨터가 따라야 할 절차들을 규정해 놓은 것이 <code>절차적 프로그램</code>이다.</p>
<h4 id="하향식-top-down-설계"><a href="#하향식-top-down-설계" class="headerlink" title="하향식(top-down)설계"></a>하향식(top-down)설계</h4><ol>
<li>구조적 프로그래밍이 고수하는 또 하나의 철학</li>
<li>규모가 큰 프로그램을 작고 쉽게 다룰 수 있는 최소한의 단위로 더욱 잘게 쪼개는 것</li>
<li>전체 프로그램이 프로그래밍하기 쉬운 작은 모듈들의 집합이 될 때까지 계속해서 쪼개 나간다.</li>
</ol>
<hr>
<h3 id="Cpp의-프로그래밍-철학"><a href="#Cpp의-프로그래밍-철학" class="headerlink" title="Cpp의 프로그래밍 철학"></a>Cpp의 프로그래밍 철학</h3><p>구조적 프로그래밍 철학이 프로그램의 간결성과 신뢰성, 유지 보수의 용이성에 많은 향상을 가져온 것은 사실이나, 규모가 큰 프로그래밍은 여전히 어려운 문제로 남아 있었다.</p>
<p>이 문제의 해결책으로 객체 지향 프로그래밍 철학이 등장함.</p>
<table>
<thead>
<tr>
<th>절차적 프로그래밍</th>
<th>객체 지향 프로그래밍</th>
</tr>
</thead>
<tbody><tr>
<td>알고리즘 강조</td>
<td>데이터 강조</td>
</tr>
</tbody></table>
<p>객체 지향 프로그래밍은 해결해야 할 문제를 언어의 절차적 접근 방식에 억지로 끼워 맞추지 않고, 언어 자체를 해결해야 할 문제에 맞춘다.</p>
<blockquote>
<p>해결해야 할 문제의 특성에 맞게 데이터형 자체를 설계한다.</p>
</blockquote>
<h4 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h4><ol>
<li>C++에서는 클래스(Class) 가 그와 같은 목적으로 설계되는 새로운 데이터형이다.</li>
<li>객체(object) 는 그러한 클래스에 의해 만들어지는 특정한 데이터 구조이다.</li>
</ol>
<table>
<thead>
<tr>
<th>NOTE: OOP 환경에서는 모든 것을 <code>객체</code>로 표현하고, 이 객체의 형식을 갖는 변수를 <code>인스턴스(instance)</code>라고 한다.</th>
</tr>
</thead>
</table>
<h4 id="상향식-bottom-up-설계"><a href="#상향식-bottom-up-설계" class="headerlink" title="상향식(bottom-up)설계"></a>상향식(bottom-up)설계</h4><ol>
<li>저수준의 클래스를 먼저 설계한 후에 고수준의 프로그램 설계로 진행하는 것</li>
<li>객체 지향적으로 프로그램을 설계하라면 프로그램이 다루는 객체를 정확하게 서술하는 클래스를 먼저 설계해야 한다.</li>
<li>각 클래스에 해당하는 객체를 만들면서 프로그램 설계를 진행하는 것을 상향식(bottom-up)프로그래밍이라 한다.</li>
</ol>
<table>
<thead>
<tr>
<th>NOTE: <code>설계</code> 와 <code>구현</code> 을 분리하는 것은 OOP의 중요한 특징 중 하나이다.</th>
</tr>
</thead>
</table>
<hr>
<h3 id="이-외의-OOP의-장점"><a href="#이-외의-OOP의-장점" class="headerlink" title="이 외의 OOP의 장점"></a>이 외의 OOP의 장점</h3><p>OOP는 재활용이 가능한 소스 코드를 쉽게 작성할 수 있다.</p>
<h4 id="정보-은닉"><a href="#정보-은닉" class="headerlink" title="정보 은닉"></a>정보 은닉</h4><p>정보를 은닉할 수 있기 때문에 비인가된 접근으로부터 데이터를 안전하게 보호할 수 있음.</p>
<h4 id="다형성-polymorphism"><a href="#다형성-polymorphism" class="headerlink" title="다형성(polymorphism)"></a>다형성(polymorphism)</h4><p>다형성(polymorphism)을 이용하여 이름이 같은 연산자와 함수를 여러 벌 정의할 수 있기 때문에 상황에 따라 적당한 연산자나 함수를 프로그램이 스스로 선택하게 할 수 있다.</p>
<h4 id="상속-inheritance"><a href="#상속-inheritance" class="headerlink" title="상속(inheritance)"></a>상속(inheritance)</h4><p>상속을 이용하여 하나의 클래스로부터 새로운 클래스를 유도하는 등 절차적 프로그래밍과는 완전히 다른 접근 방식을 취할 수 있음.</p>
<hr>
<h2 id="Cpp와-일반화-프로그래밍"><a href="#Cpp와-일반화-프로그래밍" class="headerlink" title="Cpp와 일반화 프로그래밍"></a>Cpp와 일반화 프로그래밍</h2><ol>
<li>일반화 프로그래밍은 C++가 내걸고 있는 또 하나의 프로그래밍 철학이다.</li>
<li>일반화 프로그래밍과 OOP는 소스 코드의 재활용이라는 목표와, 포괄 개념의 추상화 기술을 서로 공유한다.</li>
<li>OOP는 데이터 를 강조하는 반면, 일반화 프로그래밍은 알고리즘 측면을 강조한다.</li>
</ol>
<table>
<thead>
<tr>
<th>객체 지향 프로그래밍</th>
<th>일반화 프로그래밍</th>
</tr>
</thead>
<tbody><tr>
<td><strong><code>데이터</code></strong> 를 강조</td>
<td><strong><code>알고리즘</code></strong> 를 강조</td>
</tr>
<tr>
<td>큰 프로젝트 진행시 좋음</td>
<td>데이터를 정렬(sort)하거나, 리스트를 병합(marge)하는 등의 일반적인 작업을 할 때 편리하다.</td>
</tr>
</tbody></table>
<blockquote>
<p>여기서 일반화(generic)이라는 말은 데이터형과 무관한 코드를 작성한다는 것을 의미한다.</p>
</blockquote>
<hr>
<h2 id="C-전처리기와-iostream-파일"><a href="#C-전처리기와-iostream-파일" class="headerlink" title="C++ 전처리기와 iostream 파일"></a>C++ 전처리기와 <code>iostream</code> 파일</h2><p>C와 마찬가지로 C++도 전처리기(preprocessor)를 사용한다.</p>
<blockquote>
<p>전처리기는 컴파일을 하기 전에 소스 파일에 대해 어떤 처리를 수행하는 프로그램이다.</p>
</blockquote>
<p>전처리기는 소스 파일을 컴파일할 때 자동으로 생성된다.<br>전처리 지시자(directive)는 이름이 <code>#</code>으로 시작하는 지시자이다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt; //전처리 지시자</span></span></span><br></pre></td></tr></table></figure>

<p><code>iostream</code>파일에는 C++의 몇 가지 입출력 기능이 정의되어 있다.<br>이 지시자는 전처리기에게 <code>iostream</code>파일의 내용을 프로그램에 추가하라고 지시한다.<br>컴파일되기 전에 소스 코드에 텍스트를 추가하거나 텍스트를 대체하는 것이 전처리기가 수행하는 기본적인 역할이다.</p>
<hr>
<h2 id="이름-공간-namespace"><a href="#이름-공간-namespace" class="headerlink" title="이름 공간(namespace)"></a>이름 공간(namespace)</h2><p><strong>이름 공간</strong>은 C++의 새로운 기능이다.<br>이름 공간은 프로그램을 작성할 때 여러 소프트웨어 개발업체들이 제공하는 코드를 사용할 수 있도록 도와준다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Microflop::wanda(<span class="string">"go dancing?"</span>); <span class="comment">//Microflop 이름 공간의 버전</span></span><br><span class="line">Piscine::wanda(<span class="string">"a fish named Desire"</span>); <span class="comment">//Piscine 이름 공간의 버전</span></span><br></pre></td></tr></table></figure>

<p>이러한 방식에 의해, C++ 컴파일러의 표준 구성 요소인 클래스, 함수, 변수는 <code>std</code>라는 이름 공간안에 담겨진다.<br>이와 같은 일은 <code>.h</code> 확장자가 없는 헤더 파일들 안에서 일어난다.</p>
<h3 id="using-지시자"><a href="#using-지시자" class="headerlink" title="using 지시자"></a>using 지시자</h3><p>다음과 같은 행을 소스 코드에 넣으면 <code>std::</code>접두어를 붙이지 않고도 std 이름 공간에 정의되어 있는 이름들을 사용할 수 있다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br></pre></td></tr></table></figure>

<p><code>using</code> 지시자는 std 이름 공간에 들어있는 모든 이름을 사용할 수 있게 해 준다.</p>
<hr>
<h2 id="C-소스-코드-스타일"><a href="#C-소스-코드-스타일" class="headerlink" title="C++ 소스 코드 스타일"></a>C++ 소스 코드 스타일</h2><ol>
<li>C++ 프로그램은 함수들의 집합이다.</li>
<li>이름 공간(namespace)은 프로그램을 작성할 때 여러 소프트웨어 개발업체들이 제공하는 코드를 사용할 수 있도록 도와준다.</li>
</ol>
<h2 id="cin과-cout클래스-맛보기"><a href="#cin과-cout클래스-맛보기" class="headerlink" title="cin과 cout클래스 맛보기"></a>cin과 cout클래스 맛보기</h2><p><code>클래스</code>는 사용자가 정의하는 자료형이다. 클래스를 정의하려면, 클래스로 표현 할 수 있는 정보의 종류가 무엇이고, 그것으로 수행할 수 있는 동작은 무엇인지 서술해야 한다.</p>
<p>클래스와 객체의 관계는 데이터형과 변수의 관계와 같다.</p>
<table>
<thead>
<tr>
<th></th>
<th>클래스</th>
<th>객체</th>
</tr>
</thead>
<tbody><tr>
<td>정의</td>
<td>데이터 형식과 그것이 사용되는 방법을 서술하는 것</td>
<td>클래스에 서술된 형식에 따라 실제로 생성되는 구체물</td>
</tr>
<tr>
<td>예시</td>
<td>유명 배우 (추상화적 개념)</td>
<td>제임스 딘 (클래스가 구체화된 객체)</td>
</tr>
</tbody></table>
<p>이러한 비유를 더 확장시킨다면, <code>배우</code>라는 클래스에는 그 배우의 활동까지도 포함시킬 수 있다.<br>예를 들어, 대사 외우기, 반항아 이미지 표현하기 등등이 <code>배우</code>클래스의 동작이 될 수 있다.</p>
<table>
<thead>
<tr>
<th>NOTE: <strong>클래스</strong>는 데이터 형식의 모든 속성을 서술한 것이고, <strong>객체</strong>는 그 서술에 따라 실제로 생성된 구체물이다.</th>
</tr>
</thead>
</table>
<hr>
<p>이제 <code>cout</code>을 살펴보자면,</p>
<blockquote>
<p><strong>iostream</strong></p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">__PURE_APPDOMAIN_GLOBAL <span class="keyword">extern</span> _CRTDATA2_IMPORT istream <span class="built_in">cin</span>, *_Ptr_cin;</span><br><span class="line">__PURE_APPDOMAIN_GLOBAL <span class="keyword">extern</span> _CRTDATA2_IMPORT ostream <span class="built_in">cout</span>, *_Ptr_cout;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p><strong>cout</strong>은 ostream 클래스의 속성을 가지고 생성된 객체이다.<br>ostream클래스는 iostream 파일에 정의되어 있다.</p>
<ul>
<li><p><strong>ostream</strong> 클래스 정의에는 ostream 객체가 표현할 수 있는 데이터 형식이나, 그 데이터 형식을 가지고 수행할 수 있는 동작, 예를 들어 문자열을 출력 스트림에 삽입하는 동작 등을 정의하고 있다.</p>
</li>
<li><p>마찬가지로 <strong>cin</strong>은 istream 클래스의 속성을 가지고 생성된 객체이며, 이것 역시 iostream 파일에 정의되어 있다.</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>NOTE: 주의해야 할 점은 <strong>cin</strong>은 C언어의 <code>scanf(&quot;%s&quot;, str);</code>와 같이 문자열을 공백문자로 구분하기 때문에 문자열 추출 시 항상 구문(phrase)나 전체 문장(sentence)가 아닌 하나의 단어(word)를 추출한다.</th>
</tr>
</thead>
</table>
<p>따라서 cin 으로부터 전체 문장을 받기 위해서는 <code>getline</code>함수를 사용한다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//C++ 11</span></span><br><span class="line"><span class="function">istream&amp; <span class="title">getline</span> <span class="params">(istream&amp; is, <span class="built_in">string</span>&amp; str, <span class="keyword">char</span> delim)</span></span>;</span><br><span class="line"><span class="function">istream&amp; <span class="title">getline</span> <span class="params">(istream&amp;&amp; is, <span class="built_in">string</span>&amp; str, <span class="keyword">char</span> delim)</span></span>;</span><br><span class="line"><span class="function">istream&amp; <span class="title">getline</span> <span class="params">(istream&amp; is, <span class="built_in">string</span>&amp; str)</span></span>;</span><br><span class="line"><span class="function">istream&amp; <span class="title">getline</span> <span class="params">(istream&amp;&amp; is, <span class="built_in">string</span>&amp; str)</span></span>;</span><br><span class="line"></span><br><span class="line">/_</span><br><span class="line">is: istream object from which characters are extracted.</span><br><span class="line">str: <span class="built_in">string</span> object where the extracted line is stored.</span><br><span class="line">The contents in the string before the call (if any) are discarded and replaced by the extracted line.</span><br><span class="line"></span><br><span class="line">Return value: The same as parameter is.</span><br><span class="line">_/</span><br><span class="line"></span><br><span class="line"><span class="comment">//Example</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// extract to string</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> name;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Please, enter your full name: "</span>;</span><br><span class="line"><span class="built_in">std</span>::getline (<span class="built_in">std</span>::<span class="built_in">cin</span>, name);</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello, "</span> &lt;&lt; name &lt;&lt; <span class="string">"!\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>Get line from stream into string.</li>
<li>Extract characters from <code>is</code> and stores them into <code>str</code> until the delimitation character <code>delim</code> is found. (or the new line, <code>\n</code>).</li>
</ol>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://isocpp.org/" target="_blank" rel="noopener">https://isocpp.org/</a></li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Programming</category>
        <category>Cpp</category>
      </categories>
      <tags>
        <tag>Cpp</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ Primer Plus [2/2]</title>
    <url>/2019/12/20/2019-12-26-cplusplus-note2/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<hr>
<h2 id="데이터형"><a href="#데이터형" class="headerlink" title="데이터형"></a>데이터형</h2><p>데이터형(Data Type)은 일정 크기의 메모리에 저장된 정보를 해석하는 방법이다.</p>
<h3 id="C-에-내장된-데이터형"><a href="#C-에-내장된-데이터형" class="headerlink" title="C++에 내장된 데이터형"></a>C++에 내장된 데이터형</h3><p>C++에 내장된 데이터형에는 기본형과 복합형이 있으며, C와 비교해봤을 때 복합형을 제외한 기본형은 크게 다르지 않다.</p>
<ul>
<li><strong>기본형</strong>: 정수형, 부동 소수점 형</li>
<li><strong>복합형</strong>: 배열, 문자열, 포인터, 구조체, 클래스<br>&nbsp;</li>
</ul>
<p>C++11 표준에서는 몇몇 자료형이 새롭게 추가되었다.</p>
<ol>
<li><code>char16_t</code> 와 <code>char32_t</code>는 유니코드 처리를 위한 자료형이다.</li>
<li><strong>auto</strong>의 경우 기존에 있던 자료형으로, 의미가 새롭게 바뀐 자료형이다.</li>
<li>초기값의 형식에 맞춰 선언하는 인스턴스의 형식이 자동으로 결정된다.<br>&nbsp;</li>
</ol>
<table>
<thead>
<tr>
<th>자료형</th>
<th>설명</th>
</tr>
</thead>
<tbody><tr>
<td>long</td>
<td>64비트 정수(컴파일러에 따라 약간 다를 수 있음</td>
</tr>
<tr>
<td>char16_t</td>
<td>16비트 문자(ex. char16_t a = u’A’;)</td>
</tr>
<tr>
<td>char32_t</td>
<td>32비트 문자(ex. char32_t a = u’A’;)</td>
</tr>
<tr>
<td>auto</td>
<td>컴파일러가 자동으로 형식을 규정하는 자료형(ex. auto a = 10;)</td>
</tr>
<tr>
<td>decltype(expr)</td>
<td>expr과 동일한 자료형(ex.int a(10); decltype(a)y = 20;)</td>
</tr>
</tbody></table>
<h2 id="정수형"><a href="#정수형" class="headerlink" title="정수형"></a><strong>정수형</strong></h2><ol>
<li>정수형은 2, 98 등과 같이 소수부가 없는 수를 말한다.</li>
<li>컴퓨터의 메모리용량에는 한계가 있으므로 컴퓨터 언어는 정수들의 부분 집합만을 나타낼 수 있다.</li>
</ol>
<h3 id="정수형의-종류"><a href="#정수형의-종류" class="headerlink" title="정수형의 종류"></a>정수형의 종류</h3><ol>
<li>C++에서는 프로그램에서 요구하는 특정 상황에 알맞은 정수형을 골라 사용할 수 있도록 여러 가지 정수형을 제공한다.</li>
<li>폭(width, 정수 저장 시 사용되는 <strong>메모리 크기</strong>)에 따라 크기 순서대로 나열하자면 다음과 같다.</li>
</ol>
<div class="note no-icon">
            <p><strong>data type</strong></p><ul><li>char</li><li>short</li><li>int</li><li>long</li><li>long long (C++11)</li></ul>
          </div>

<h3 id="정수크기-계산-방법"><a href="#정수크기-계산-방법" class="headerlink" title="정수크기 계산 방법"></a>정수크기 계산 방법</h3><p>C++ 시스템의 정수 크기가 얼마인지 알고 싶으면, 데이터형의 크기를 알아내는 C++의 도구를 사용할 수 있다.</p>
<h4 id="1-sizeof-연산자"><a href="#1-sizeof-연산자" class="headerlink" title="1.sizeof 연산자"></a>1.sizeof 연산자</h4><p>sizeof 연산자를 사용하면 변수나 데이터형의 크기를 바이트 단위로 리턴받아 데이터형의 크기를 알 수 있다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n_int = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="keyword">int</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span> n_int &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure>

<p>sizeof 연산자는 int 와 같은 데이터형 이름에 사용할 때는 괄호를 사용해야 하며, n_int 와 같은 변수이름에는 괄호가 없어도 상관없다.</p>
<h4 id="2-climits-헤더파일"><a href="#2-climits-헤더파일" class="headerlink" title="2. climits 헤더파일"></a>2. climits 헤더파일</h4><p>2번째 방법은 여러 가지 정수형들의 범위에 대한 정보가 들어 있는 climits 헤더 파일을 열어 보는 것이다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n_int = INT_MAX;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; n_int &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"char의 비트수 = "</span> &lt;&lt; CHAR_BIT &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;   <span class="comment">//CHAR_BIT: char형의 비트수를 정의</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//INT_MIN, SHRT_MAX, LONG_MAX, LLONG_MAX..등 각 데이터형의 최대, 최소값 등이 들어 있음</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="초기화-방식"><a href="#초기화-방식" class="headerlink" title="초기화 방식"></a>초기화 방식</h3><p>C++에서 지역 변수등의 초기화는 기존 C에서 쓰던 방법부터 C++만의 초기화 문법이 존재한다.</p>
<p><strong>기존의 방식</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> owls = <span class="number">10</span>;</span><br></pre></td></tr></table></figure>

<p><strong>C++의 초기화 문법</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wrens</span><span class="params">(<span class="number">432</span>)</span></span>; <span class="comment">// C++의 새로운 초기화 문법, wrens를 432로 초기화</span></span><br></pre></td></tr></table></figure>

<p><strong>C++11에서의 초기화</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> hamburger = &#123;<span class="number">24</span>&#125;; <span class="comment">// hamburger를 24로 초기화</span></span><br><span class="line"><span class="keyword">int</span> emus&#123; <span class="number">7</span> &#125;;        <span class="comment">// =를 사용할 수도, 사용하지 않을 수도 있다.</span></span><br><span class="line"><span class="keyword">int</span> rheas = &#123; <span class="number">12</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> psychics&#123; &#125;; <span class="comment">// psychics를 0으로 초기화</span></span><br></pre></td></tr></table></figure>

<h3 id="Overflow-Underflow-In-C"><a href="#Overflow-Underflow-In-C" class="headerlink" title="Overflow/Underflow In C++"></a>Overflow/Underflow In C++</h3><ul>
<li>C++에서 자료형이 표현할 수 있는 한계를 벗어나면 그 표현 버위의 반대편에서부터 다시 시작한다.</li>
<li>Overflow/Underflow 발생 시 unsinged 의 경우 0 또는 최대값으로, signed 의 경우 최소값 또는 최대값으로 바뀐다.</li>
</ul>
<h3 id="상수"><a href="#상수" class="headerlink" title="상수"></a>상수</h3><ul>
<li>정수형 상수는 212, 116과 같이 프로그램에 직접 써 넣는 정수를 말한다.</li>
<li>C++에서 프로그램에 쓸 수 있는 상수는 크게 <strong>8진수</strong>, <strong>10진수</strong>, <strong>16진수</strong>가 있다.</li>
</ul>
<h4 id="정수값을-16진수나-8진수로-출력하려면"><a href="#정수값을-16진수나-8진수로-출력하려면" class="headerlink" title="정수값을 16진수나 8진수로 출력하려면?"></a>정수값을 16진수나 8진수로 출력하려면?</h4><ol>
<li>정수값을 16진수나 8진수로 출력하려면 <code>cout</code>의 특별한 기능을 사용해야 한다.</li>
<li><em>iostream</em> 헤더 파일은 정수를 8진수, 10진수, 16진수로 각각 출력하라는 메세지를 <code>cout</code>에 전달하는 dec, hex, oct 조정자를 제공한다. (10진수가 default이다.)</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//10진수</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="number">15</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8진수</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::oct;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="number">15</span> &lt;&lt; <span class="string">'\n'</span>;    <span class="comment">//17</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//16진수</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::hex;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="number">15</span> &lt;&lt; <span class="string">'\n'</span>;    <span class="comment">//f</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>std::cout &lt;&lt; std::oct</strong> 와 같은 코드는 화면에 아무것도 출력하지 않는다.</li>
<li>즉, 이 코드는 cout가 정수를 디스플레이하는 방식을 변경한다.</li>
</ul>
<h4 id="2진수-출력하는-방법"><a href="#2진수-출력하는-방법" class="headerlink" title="2진수 출력하는 방법"></a>2진수 출력하는 방법</h4><h5 id="lt-bitset-gt-헤더파일-이용"><a href="#lt-bitset-gt-헤더파일-이용" class="headerlink" title="&lt;bitset&gt; 헤더파일 이용"></a><code>&lt;bitset&gt;</code> 헤더파일 이용</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//변수 선언 후 출력</span></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">bitset</span>&lt;8&gt; ch_bits = <span class="number">15</span>;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ch_bits &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//형 변환 후 출력</span></span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; (class <span class="built_in">std</span>::<span class="built_in">bitset</span>&lt;CHAR_BIT&gt;)<span class="number">15</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="직접-함수-만들기"><a href="#직접-함수-만들기" class="headerlink" title="직접 함수 만들기"></a>직접 함수 만들기</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dec_To_Bin</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">size_t</span> size)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = size - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">		<span class="keyword">int</span> k = n &gt;&gt; i;</span><br><span class="line">		<span class="keyword">if</span> (k &amp; <span class="number">1</span>)</span><br><span class="line">			<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"1"</span>;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"0"</span>;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//space per 'x4'</span></span><br><span class="line">		<span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; !(i % <span class="number">4</span>)) &#123;</span><br><span class="line">			<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="C-가-상수의-데이터형을-결정하는-방법"><a href="#C-가-상수의-데이터형을-결정하는-방법" class="headerlink" title="C++가 상수의 데이터형을 결정하는 방법"></a>C++가 상수의 데이터형을 결정하는 방법</h4><p>C++은 특별한 이유가 없다면 정수형 상수를 모두 <strong>int</strong>형으로 저장한다.<br>&nbsp;</p>
<p><strong>예외의 경우</strong></p>
<ol>
<li>특정 데이터형을 의미하는 접미어를 상수에 붙였을 때</li>
<li>값이 너무 커서 <code>int</code>형으로 저장할 수 없을 때<br>&nbsp;</li>
</ol>
<p><strong>접미어</strong><br>접미어가 없는 10진 정수는 <code>int</code>, <code>long</code>, <code>long long</code>형 중에서 크기가 가장 작은 것으로 나타낸다.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">l, L    --&gt; long</span><br><span class="line">u, U    --&gt; unsigned int</span><br><span class="line">ul      --&gt; unsigned long</span><br><span class="line">ll, LL  --&gt; unsinged long long</span><br></pre></td></tr></table></figure>

<h2 id="Char-형"><a href="#Char-형" class="headerlink" title="Char 형"></a>Char 형</h2><p>Char 형은 문자와 숫자를 저장하기 위한 것이다.</p>
<h3 id="ASCII와-UNICODE"><a href="#ASCII와-UNICODE" class="headerlink" title="ASCII와 UNICODE"></a>ASCII와 UNICODE</h3><p>프로그래밍 언어는 문자를 수치 코드로 나타냄으로써 컴퓨터가 문자를 저장할 수 있게 한다. 보통 이러한 수치 코드은 특정한 문자 세트(문자집합, 각 문자에 번호를 부여한 것 e.g.s, ASCII, EBCDIC, etc.)에 있는 각 문자에 대응된다.</p>
<p>미국에서 가장 많이 사용하는 문자세트는 <strong>ASCII</strong> 이다. 예를 들어 ASCII 문자 세트의 A 라는 문자는 수치 코드 65로 나타낼 수 있다. ASCII 같은 경우 국제적인 요구를 수용하지 못한다. 그래서 C++은 보다 넓은 범위의 값을 수용하는 Unicode 국제 문자 세트를 사용할 수 있는 확장 문자형을 지원한다.</p>
<h4 id="문자집합과-인코딩-1-2"><a href="#문자집합과-인코딩-1-2" class="headerlink" title="문자집합과 인코딩 [1/2]"></a>문자집합과 인코딩 [1/2]</h4><p>컴퓨터는 수치 연산을 위해 설계되었다. 컴퓨터 발명 초기에는 문자를 표현해야 하는 요구가 없었다. 영어 단어 compute는 단순히 ‘계산하다’라는 뜻이고, 초창기의 컴퓨터와 ‘전자 계산기’는 동의어이기도 했다. </p>
<p>그러나 (너무나 당연하지만) 문자를 표현해야 하는 요구가 발생했다. 컴퓨터 간에 문자 데이터를 교환해야 할 일이 생기기도 했다.</p>
<p>이기종 컴퓨터끼리 문자 데이터를 교환하기 위해서는 표준이 필요하다. 이런 이유로 ASCII(American Standard Code for Information Interchange)와 같은 표준 문자 인코딩이 만들어졌다.</p>
<p>문자를 표현하기 위해서는 가장 먼저 <strong>문자 집합</strong> 을 정의해야 한다. 문자 집합은 표현해야 할 문자를 정하고 순서를 지정한 것이다. </p>
<p>영어라면 ‘A’, ‘B’, ‘C’에서 ‘Z’까지(소문자 a에서 z), 한글이라면 ‘가’, ‘각’, ‘간’에서 ‘힣’까지다. 물론 숫자나 특수 문자뿐만 아니라 인쇄와 통신을 제어하기 위한 제어 문자도 문자 집합에 포함되어야 한다.</p>
<p>이러한 문자 집합을 코드 형태(일반적으로 행렬)로 표기한 것을 <strong>코드화된 문자 집합</strong>(CCS, coded character set)이라고 한다.</p>
<p>예를 들어 ‘가’에는 10001, ‘각’에는 10002와 같이 코드를 할당하는 방식 말이다. 그리고 문자 집합을 컴퓨터에 저장하기 위해서 옥텟(octet, 8비트 단위) 형태로 표현한 것을 <strong>인코딩 방식</strong>(CES, character encoding scheme)이라고 한다.</p>
<p>출처: <a href="https://d2.naver.com/helloworld/19187" target="_blank" rel="noopener">한글 인코딩의 이해 1편: 한글 인코딩의 역사와 유니코드</a></p>
<hr>
<h4 id="문자집합과-인코딩-2-2"><a href="#문자집합과-인코딩-2-2" class="headerlink" title="문자집합과 인코딩 [2/2]"></a>문자집합과 인코딩 [2/2]</h4><p>유니코드를 설명하려면 <code>문자세트</code>와 <code>문자인코딩</code>이라는 용어를 구분해야 한다. 흔히 헷갈려 하는 용어다. 문자세트를 특별한 변화 없이 그대로 1:1로 나타내는 문자인코딩도 있고, 별도의 규칙에 의해 변경해서 표기하는 문자인코딩도 있다.</p>
<blockquote>
<ol>
<li>문자세트는 그야말로 문자들의 집합이다. 문자들의 집합에 각 문자에 번호를 부여한 것이다.</li>
<li>문자인코딩 은 그런 문자들을 어떻게 코드를 할당하느냐를 나타낸 것이다.</li>
</ol>
</blockquote>
<p>출처: <a href="http://www.allofsoftware.net/2015/06/6.html" target="_blank" rel="noopener">유니코드는 어떻게 탄생했을까? (6) - All of Software</a></p>
<hr>
<h4 id="유니코드는-어떻게-탄생했을까"><a href="#유니코드는-어떻게-탄생했을까" class="headerlink" title="유니코드는 어떻게 탄생했을까?"></a>유니코드는 어떻게 탄생했을까?</h4><p>1950년대 최초로 컴퓨터가 탄생하고 초창기 컴퓨터에는 표준 문자세트이라는 것이 없었다. 즉, 컴퓨터마다 다른 문자세트를 사용하고 있었다. </p>
<p>그래서 1967년 미국에서 표준 문자세트를 제정한 것이 <code>ASCII</code>다. 미국에서 만들었기 때문에 알파벳과 숫자 등의 글자로 이루어졌다.</p>
<p>ASCII는 7비트 128글자를 사용하며 거의 모든 문자세트의 기본이 된다. 하지만 ASCII는 유럽글자를 표현 할 수 없었다. </p>
<p>그래서 유럽 사람들은 1980년대 중반 ASCII를 확장하여 <strong><code>ISO-8859</code></strong> 를 만들게 된다.</p>
<p>ISO-8859의 특징은 기존 ASCII 영역을 건들지 않고 8비트 128글자 영역을 사용하여 미국에서 작성한 문서도 그대로 볼 수 있게 하였다.</p>
<ul>
<li><code>ISO-8859-1</code>은 네델란드어, 노르웨이어, 독일어 등 주로 서유럽의 언어를 지원한다.</li>
<li><code>ISO-8859-2</code>은 체코어, 폴란드어, 헝가리어 등 주로 중앙유럽의 언어를 지원한다.</li>
<li><code>ISO-8859-3</code>은 터키어 등 주로 남유럽의 언어를 지원한다. 이런 식으로 ISO-8859-16까지 추가되었는데 암기할 필요는 없다. ISO-8859를 사용해도 여러 유럽어를 동시에 표현할 수는 없었다.</li>
</ul>
<p>그 무렵 아시아에서는 문자세트 혼란의 시기가 도래하였다.</p>
<p>한국에서는 1980년대 초부터 여러 가지 한글 조합형 인코딩을 사용했다.</p>
<p>1987년 <code>KSC5601</code>(KSX1001)이라는 한글(한국어) 완성형 문자세트가 제정된 후 조합형과 완성형은 공존을 하다 조합형은 사라지게 된다.</p>
<p>조합형과 완성형의 팽팽한 균형이 무너진 시점은 윈도우95가 나오면서부터다. 그럼에도 불구하고 그 당시 똠방박하의 “똠”자를 윈도우에서 쓸 수 없다는 것은 많은 이슈가 되었다.</p>
<p>중국과 일본도 제 각각의 문자세트와 인코딩을 정의해서 전세계, 특히 아시아는 문자세트 춘추 전국시대가 되었다. </p>
<p>한나라 안에서도 수많은 문자세트와 인코딩이 넘쳐나고 있었다. 이는 <strong>전세계 컴퓨터, 소프트웨어가 서로 호환되지 않는다는 의미</strong> 를 얘기한다. 알파벳과 숫자를 제외하고는 깨져버리기 일쑤였다.</p>
<p>하나의 인코딩으로 영어와 한국어는 표시할 수 있고, 영어와 일본어도 표현을 할 수 있다. 하지만 영어, 한국어, 일본어, 중국어 이렇게 다양한 언어를 한꺼번에 표현할 수는 없었다.</p>
<p>그래서 탄생한 것이 <code>ISO2022</code>다. 중간에 특수한 문자를 만나면 문자세트가 바뀌는 것이다. 그러나 ISO2022 인코딩의 문자열은 중간부터 읽을 경우 무슨 문자인지 알 수 없는 약점이 있었다.</p>
<p>80, 90년대 이런 춘추전국 시대에 개발을 해본 개발자라면 이런 혼란을 잘 알고 있을 것이다. 근래에 개발을 시작한 개발자들에게는 먼 옛날 얘기일 것이다.</p>
<p>그 당시에는 대부분의 소프트웨어가 나라별 버전을 따로 만들곤 했다.</p>
<blockquote>
<p>이러한 혼동 속에서 하나의 문자세트로 전세계 문자를 모두 표현하려는 움직임이 있었고, 썬마이크로시스템즈, 애플, MS, IBM, 볼랜드 등의 회사들이 유니코드컨소시엄을 만들어서 전세계 문자를 통합한 <strong>유니코드(Unicode)</strong> 를 만들기 시작했다.</p>
</blockquote>
<p>참여한 회사들을 보면 거의 미국 회사인 것을 알 수 있다. </p>
<p>미국 회사들이 전세계에 소프트웨어를 팔다보니 본인들이 힘들어서 통합의 필요성을 느낀 것이다. 그렇게 미국이 주도하여 1991년 유니코드 1.0이 탄생한다.</p>
<p>출처: <a href="http://www.allofsoftware.net/2015/06/6.html" target="_blank" rel="noopener">유니코드는 어떻게 탄생했을까? (6) - All of Software</a></p>
<hr>
<h4 id="클래스와-맴버함수"><a href="#클래스와-맴버함수" class="headerlink" title="클래스와 맴버함수"></a>클래스와 맴버함수</h4><p>클래스(class)는 데이터 형식과 그 데이터를 다루는 방법을 정의해 놓은 것이다. </p>
<p>맴버 함수는 클래스에 속하고, 클래스의 데이터를 다루는 방법을 정의한다. 예를 들어 ostream 클래스는 문자를 출력하도록 설계된 <code>put()</code> 이라는 맴버 함수를 가지고 있다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">ostream&amp; os = <span class="built_in">std</span>::<span class="built_in">cout</span>; <span class="comment">//os --&gt; ostream의 객체 cout의 참조자</span></span><br><span class="line">os.put(<span class="string">'!'</span>); <span class="comment">// cout.put()을 사용하여 문자 상수를 출력한다.</span></span><br></pre></td></tr></table></figure>

<ul>
<li>os.put()이 나타내는 의미는 클래스 객체인 os 를 통해 클래스 맴버 함수인 put()을 사용하겠다는 뜻이다.</li>
<li>put() 함수는 &lt;&lt; 연산자를 사용하여 문자를 출력하는 것에 대한 대안이다.</li>
</ul>
<hr>
<h4 id="유니버설-네임-코드"><a href="#유니버설-네임-코드" class="headerlink" title="유니버설 네임 코드"></a>유니버설 네임 코드</h4><p>C++ 표준은 기본적인 소스 문자 세트를 지원하면서 추가로 C++ 시스템이 확장 소스 문자 세트와 확장 실행 문자 세트를 제공하는 것을 허용한다. </p>
<p>즉, C++은 특정 키보드와는 무관한 국제 문자들을 표현하는 매커니즘을 가지고 있다, 이것이 <strong>유니버설 네임 코드</strong>(universal characters names)이다.</p>
<ol>
<li>유니버설 네임 코드는 이스케이프 시퀀스를 사용하는 것과 비슷하다.</li>
<li>만국 문자의 이름은 ＼u 또는 ＼U 중 어느 하나로 시작하게 된다. (뒤에는 16진수 숫자가 온다.)</li>
<li>이 숫자들은 ISO 10646 코드를 나타낸다.</li>
<li>지금도 개발 중인 ISO 10646 국제 표준 문자 세트는 전 세계의 다양한 문자들을 일관되게 나타낼 수 있는 수치 코드를 제공한다.</li>
<li>C++ 시스템이 확장 문자를 지원한다면, 유니버설 네임 코드를 문자 상수로 식별자 또는 문자열에 사용할 수 있다.</li>
</ol>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">//유니버설 네임 코드 (Universal character name) --&gt; 'wchar_t'의 부호와 길이는 가변이다.</span></span><br><span class="line"><span class="comment">////'가'의 유니버설 네임 코드</span></span><br><span class="line"><span class="keyword">wchar_t</span> wch&#123; <span class="string">L'가'</span> &#125;;</span><br><span class="line"><span class="keyword">wchar_t</span> wch_16&#123; <span class="string">L'\uAC00'</span> &#125;;  <span class="comment">// UTF-16, '\uAC00' --&gt; Unicode Character “가” (U+AC00)</span></span><br><span class="line">wchar_t wch_32&#123; L'\U0000AC00' &#125;; //UTF-32</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="유니코드와-ISO-10646-사이의-차이점은-무엇인가"><a href="#유니코드와-ISO-10646-사이의-차이점은-무엇인가" class="headerlink" title="유니코드와 ISO 10646 사이의 차이점은 무엇인가"></a>유니코드와 ISO 10646 사이의 차이점은 무엇인가</h4><p>유니코드 컨소시움이 공표한 유니코드 표준은 실제로 구현 레벨 3에서 기본 다중언어용 영역(BMP)을 포함한다. <strong>두 표준 공히 모든 문자들은 같은 위치를 가지며 같은 명칭을 사용한다.</strong></p>
<p>유니코드 표준은 부가적으로 몇몇 문자와 관련된 훨씬 많은 언어 체계를 정의하고 있으며 일반적으로 양질의 인쇄 출판 시스템 구현을 위한 더 나은 참고 자료가 된다.</p>
<p>유니코드는 예를 들어 라틴어와 유태어를 혼합하는 양 방향 텍스트를 취급하므로써, 몇몇 언어의 프리젠테이션 양식을 렌더링하기 위한 알고리즘과 문자열 비교를 위한 알 고리즘 및 그 외 많은 것을 명시하고 있다.</p>
<p>다른 한편 ISO 10646 표준은 잘 알려진 ISO 8859 표준과 비교했을 때 간단한 문자셋 테이블 그 이상은 아니다. </p>
<p>이것은 표준과 관련된 몇몇 기술들을 명시하고, 몇몇 인 코딩 대안들을 정의하며, ISO 6429와 ISO 2022와 같은 다른 ISO 표준과 관련된 UCS를 사용하는 방법에 관한 세부 사항을 포함한다.</p>
<p>ISO 표준과 밀접하게 관련된 다른 것들 도 있다. 예를 들면, UCS 문자열의 정렬에 관한 ISO 14651이 있다. ISO 10646-1 표준의 훌륭한 특징으로는 그것이 다섯가지 다른 스타일로 변형시켜 한중일 국가의 glyph 예를 제공한다는 것이다.</p>
<p>반면 유니코드 표준은 한중일 국가의 한자를 단지 중국 식으 로만 보여준다.</p>
<p>출처: <a href="http://doc.kldp.org/Translations/html/UTF8-Unicode-KLDP/UTF8-Unicode-KLDP-6.html" target="_blank" rel="noopener">유니코드와 ISO 10646 사이의 차이점은 무엇인가?</a></p>
<hr>
<h4 id="확장-char형-wchar-t"><a href="#확장-char형-wchar-t" class="headerlink" title="확장 char형: wchar_t"></a>확장 char형: wchar_t</h4><p>때로는 프로그램이 1바이트로 표현할 수 없는 문자 세트(일본어, 중국어, 한국어 등..)를 처리해야 하는 경우가 있다.</p>
<p>C++은 이것을 두 가지 방법으로 처리한다.</p>
<ol>
<li>확장 문자 세트가 시스템의 기본 문자 세트면, 컴파일 개발 업체가 <strong>char</strong> 형을 처음부터 2바이트 또는 그 이상으로 만드는 방법</li>
<li>기본 문자 세트와 확장 문자 세트를 동시에 지원하는 방법</li>
</ol>
<p>즉, 2번째 방법의 의미는 <strong>char</strong> 형으로 기본 문자 세트를 나타내고, 확장 문자 세트는 <strong>wchar_t</strong> 형으로 나타내는 것이다. (Wide character type)</p>
<p>wchar_t형은 <strong>기초 데이터형(underlying type)</strong>이라고 부르는 정수형과 동일한 크기와 부호 속성을 가진다.</p>
<p>기초 데이터형은 시스템에 따라 다른데, 어떤 시스템에서는 unsinged short형일 수 있고, 다른 시스템에서는 int형이 될 수도 있다.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// In sourceannotations.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _WCHAR_T_DEFINED</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> short <span class="keyword">wchar_t</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _WCHAR_T_DEFINED</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span>  <span class="comment">/* _WCHAR_T_DEFINED */</span></span></span><br></pre></td></tr></table></figure>

<ol>
<li>위의 코드에 따르면 내 개발 환경은 2바이트 wchar_t형을 사용하는 시스템이므로, 만약 <code>wchar_t bob[] = L&quot;tall&quot;</code>와 같이 쓴다면, 각 문자에 2바이트 씩 대입하여 메모리에 저장할 것이다.</li>
<li>즉, 시스템에 따라 wchar_t의 부호와 길이는 변할 수 있다. (가변적)</li>
<li>cin과 cout은 입력과 출력을 <code>char</code>형 문자의 스트림으로 간주하기 때문에 <code>wchar_t</code>형을 처리하지 못한다.</li>
<li>최신 버전의 iostream헤더 파일은 wchar_t형 문자의 스트림을 처리하기 위해 <code>wcin</code>과 <code>wcout</code> 객체를 제공한다.</li>
<li>그리고 확장 문자 상수나 확장 문자 문자열은 그 앞에 <strong><code>L</code></strong> 을 붙여서 나타낸다.</li>
</ol>
<h4 id="새로운-C-11형-char16-t와-char32-t"><a href="#새로운-C-11형-char16-t와-char32-t" class="headerlink" title="새로운 C++11형: char16_t와 char32_t"></a>새로운 C++11형: char16_t와 char32_t</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//C++11 에서 추가된 데이터 형</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char16_t</span> ch1 = <span class="string">u'q'</span>; <span class="comment">//기본 16비트 문자</span></span><br><span class="line">char32_t ch2 = U'\U00022B'; //32비트 유니버설 문자 이름</span><br><span class="line"></span><br><span class="line"><span class="keyword">char16_t</span> ch_16 = <span class="string">u'\uAC00'</span>; <span class="comment">//char16_t 는 접두사 'u'를 사용</span></span><br><span class="line">char32_t ch_32 = U'\U0000AC00'; //char32_t는 접두사 'U'를 사용</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::hex;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ch_16 &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;	<span class="comment">//ac00</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ch_32 &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;	<span class="comment">//ac00</span></span><br></pre></td></tr></table></figure>

<p><code>wchar_t</code>, <code>char16_t</code>, <code>char32_t</code> 과 같이 <code>_</code>를 가지고 있는 형들은 정수형의 일종이지만, 시스템에 따라 다를 수 있다.</p>
<hr>
<h4 id="로케일-locale-이란"><a href="#로케일-locale-이란" class="headerlink" title="로케일(locale)이란?"></a>로케일(locale)이란?</h4><p><code>로케일</code>(locale [loukǽl] 로캘 / [loukάːl] 로칼)은 사용자의 언어, 국가뿐 아니라 사용자 인터페이스에서 사용자가 선호하는 사항을 지정한 매개 변수의 모임이다.</p>
<p><strong>일반 로케일 설정</strong></p>
<ul>
<li>표시 언어 설정</li>
<li>숫자 형식 설정</li>
<li>날짜/시간 형식 설정</li>
<li>시간대 설정</li>
<li>일광 절약 시간 (DST) 설정</li>
<li>통화 형식 설정</li>
</ul>
<hr>
<ol>
<li>세계 여러 나라들은 각자 다른 문화(언어, 날짜, 시간 등)을 갖고 있다. 프로그램의 국제화(Internationalization, 줄여서 i18n)는 사용자로 하여금 프로그램 수행시 로케일이란 것에 의해 입맛에 맞는 환경을 선택할 수 있도록 만든 것을 말한다.</li>
<li>예를 들어 어떤 프로그램의 메시지가 여러가지 언어로 주어져 있는 경우 이중에 어떤 언어의 것을 출력할 것인가를 사용자가 결정할 수 있는 것이다.</li>
<li>그것을 가능하게 해 주는 수단이 바로 <strong>로케일</strong>이다. 이것은 단순히 메시지 뿐만이 아니고 숫자표현법, 날짜 또는 시간표현법 등 여러가지에 사용될 수 있다.</li>
<li>그것 각각을 우리는 <strong>카테고리(category)</strong>라고 부른다.</li>
</ol>
<hr>
<h4 id="Set-Locale"><a href="#Set-Locale" class="headerlink" title="Set Locale"></a>Set Locale</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">setlocale</span><span class="params">(<span class="keyword">int</span> _Category, <span class="keyword">const</span> <span class="keyword">char</span>* _Locale)</span></span></span><br></pre></td></tr></table></figure>

<p><strong>_Category</strong></p>
<ul>
<li>프로그램의 로케일 정보의 어떤 부분을 변경할지 여부를 정수로 지정</li>
<li>언어 설정 카테고리</li>
</ul>
<p><strong>_Locale</strong></p>
<ul>
<li>로케일을 지정</li>
<li>변경하려는 언어설정 명칭<br>&nbsp;</li>
</ul>
<p><strong>Return value</strong><br>함수는 유효한 로케일 및 카테고리를 지정하면, 로케일에 대한 문자열에 대한 포인터를 반환한다. 잘못된 경우 NULL 포인터를 반환하고 설정을 변경하지 않는다.<br>&nbsp;</p>
<p><strong>언어 설정 카테고리</strong></p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>LC_ALL</td>
<td>모든 카테고리</td>
</tr>
<tr>
<td>LC_COLLATE</td>
<td>strcoll(), _ stricoll(), wcscoll(), wcsicoll(), strxfrm()의 각 함수</td>
</tr>
<tr>
<td>LC_CTYPE</td>
<td>문자 처리 함수 (&lt;cctype&gt;의 함수들, isdigit, isxdigit 등 포함 x인 경우도 있음)</td>
</tr>
<tr>
<td>LC_MONETARY</td>
<td>localeconv() 함수가 반환하는 통화 형식 정보</td>
</tr>
<tr>
<td>LC_NUMERIC</td>
<td>형식이 지정된 출력 루틴 및 데이터 변환 루틴의 소수점 문자, localeconv() 함수가 반환하는 비화폐 형식 정보의 소수점 문자</td>
</tr>
<tr>
<td>LC_TIME</td>
<td>strftime() 함수와 wcsftime () 함수</td>
</tr>
</tbody></table>
<p>&nbsp;</p>
<p><strong>Example</strong></p>
<ol>
<li><em>setlocale(LC_ALL, nullptr);</em> 과 같이 작성한다면 아무런 언어 설정도 안했으므로 기본적인 언어 설정인 “C”로 리턴됨</li>
<li><em>setlocale(LC_ALL, “”);</em> 와 같이 작성한다면 OS를 기반으로 한 지역언어 설정을 적용하게 된다.</li>
</ol>
<blockquote>
<p>즉, 작성하고 있는 컴퓨터의 국가 설정 텍스트 모드로 변경됨.</p>
</blockquote>
<ul>
<li>한글 설정 방법</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">setlocale(LC_ALL, <span class="string">""</span>);</span><br><span class="line">setlocale(LC_ALL, <span class="string">"kor"</span>); <span class="comment">//"Korean" 또는 "korean" 등도 됌.</span></span><br></pre></td></tr></table></figure>

<p><strong>NOTE</strong></p>
<ol>
<li>언어 설정을 원래대로 되돌리고 싶다면 이전 언어설정에 대한 문자열을 다시 setlocale을 통해서 설정해줘야 한다.</li>
<li>로케일 설정이 실제로 값 얻기 영향은 실행 환경에 따라 달라진다. 로케일 문자는 예를 들어 “korean”등 구현에 정의되어 있는 값 을 지정하여 언어를 한글로 설정할 수 있다. locale에 NULL 문자열을 지정하면 그 로케일은 처리계 정의의 네이티브 환경이다.</li>
<li>확실한 프로그램을 만들려면, <code>setlocale()</code> 함수의 반환 값을 확인하고, 로케일 설정이 실패했을 경우의 처리도 작성해야 한다.(실행하는 시스템이 한글를 지원하지 않으면 setlocale() 함수는 실패한다.)</li>
</ol>
<hr>
<h4 id="Source-Code-locale-개념-setlocale-등"><a href="#Source-Code-locale-개념-setlocale-등" class="headerlink" title="Source Code(locale 개념, setlocale 등)"></a>Source Code(locale 개념, <code>setlocale</code> 등)</h4><div class="tabs" id="second-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#second-unique-name-1">Details</a></li><li class="tab"><a href="#second-unique-name-2">Source Code</a></li></ul><div class="tab-content"><div class="tab-pane active" id="second-unique-name-1"><ol>
<li>10진수, 16진수, 8진수, 2진수 출력 방법</li>
<li>wchar_t, char16_t, char32_t 사용법</li>
<li><code>setlocale()</code> 함수 및 <code>std::locale()</code> 활용</li>
</ol></div><div class="tab-pane" id="second-unique-name-2"><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//C Standard Library</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Standard Library</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;locale.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//User-defined Library</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"TypeName.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//유니버설 네임 코드 (Universal character name) </span></span><br><span class="line">    <span class="comment">//--&gt; 'wchar_t'의 부호와 길이는 가변이다.</span></span><br><span class="line">    <span class="comment">//'가'의 유니버설 네임 코드</span></span><br><span class="line">    <span class="keyword">wchar_t</span> wch&#123; <span class="string">L'가'</span> &#125;;</span><br><span class="line">    <span class="keyword">wchar_t</span> wch_16&#123; <span class="string">L'\uAC00'</span> &#125;;  <span class="comment">// UTF-16, '\uAC00' --&gt; Unicode Character “가” (U+AC00)</span></span><br><span class="line">    wchar_t wch_32&#123; L'\U0000AC00' &#125;; //UTF-32</span><br><span class="line"></span><br><span class="line">    <span class="comment">//C++11 에서 추가된 데이터 형</span></span><br><span class="line">    <span class="keyword">char16_t</span> ch_16 = <span class="string">u'\uAC00'</span>; <span class="comment">//char16_t 는 접두사 'u'를 사용</span></span><br><span class="line">    char32_t ch_32 = U'\U0000AC00'; //char32_t는 접두사 'U'를 사용</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::hex;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ch_16 &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>; <span class="comment">//ac00</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ch_32 &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>; <span class="comment">//ac00</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">wchar_t</span> kor_wch[]&#123; <span class="string">L"안녕하세요"</span> &#125;;</span><br><span class="line">    <span class="keyword">wchar_t</span> chi_wch[]&#123; <span class="string">L"为什么"</span> &#125;;</span><br><span class="line">    <span class="keyword">wchar_t</span> ja_wch[]&#123; <span class="string">L"こんにちは"</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> *_korean, *_chinese, * _japen;</span><br><span class="line"></span><br><span class="line">    _korean = strdup(setlocale(LC_ALL, <span class="string">"ko-KR"</span>));</span><br><span class="line">    _chinese = strdup(setlocale(LC_ALL, <span class="string">"zh-CN"</span>));</span><br><span class="line">    _japen = strdup(setlocale(LC_ALL, <span class="string">"ja-JP"</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Set new locale</span></span><br><span class="line">    <span class="comment">//1. use setlocale (select the locale environment &amp; change or reset)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//set locale to korean</span></span><br><span class="line">    setlocale(LC_ALL, _korean);</span><br><span class="line">    <span class="built_in">std</span>::wcout &lt;&lt; <span class="string">"result[_korean]: "</span> &lt;&lt; kor_wch &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//set locale to chinese</span></span><br><span class="line">    setlocale(LC_ALL, _chinese);</span><br><span class="line">    <span class="built_in">std</span>::wcout &lt;&lt; <span class="string">"result[_chinese]: "</span> &lt;&lt; chi_wch &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//set locale to japen</span></span><br><span class="line">    setlocale(LC_ALL, _japen);</span><br><span class="line">    <span class="built_in">std</span>::wcout &lt;&lt; <span class="string">"result[_japen]: "</span> &lt;&lt; ja_wch &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(_korean);</span><br><span class="line">    <span class="built_in">free</span>(_chinese);</span><br><span class="line">    <span class="built_in">free</span>(_japen);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1. use std locale (select the locale environment &amp; change or reset)</span></span><br><span class="line">    <span class="comment">//std::cout &lt;&lt; "Current local name: " &lt;&lt; std::locale().name() &lt;&lt; "\n\n";</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//std::locale::global(std::locale("ko-KR.UTF-8"));</span></span><br><span class="line">    <span class="comment">//std::wcout &lt;&lt; "Result[_korean]: " &lt;&lt; kor_wch &lt;&lt; '\n';</span></span><br><span class="line">    <span class="comment">//std::cout &lt;&lt; '\n';</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//std::locale::global(std::locale("zh-CN.UTF-8"));</span></span><br><span class="line">    <span class="comment">//std::wcout &lt;&lt; "Result[_chinese]: " &lt;&lt; chi_wch &lt;&lt; '\n';</span></span><br><span class="line">    <span class="comment">//std::cout &lt;&lt; '\n';</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//std::locale::global(std::locale("ja-JP.UTF-8"));</span></span><br><span class="line">    <span class="comment">//std::wcout &lt;&lt; "Result[_japen]: " &lt;&lt; ja_wch &lt;&lt; '\n';</span></span><br><span class="line">    <span class="comment">//std::cout &lt;&lt; '\n';</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//참조자를 이용하여 출력</span></span><br><span class="line">    <span class="comment">//std::ostream&amp; os = std::cout;</span></span><br><span class="line">    <span class="comment">//std::istream&amp; is = std::cin;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//os.put('!');</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://isocpp.org/" target="_blank" rel="noopener">https://isocpp.org/</a></li>
<li><a href="http://www.cplusplus.com/doc/tutorial/variables/" target="_blank" rel="noopener">cplusplus.com</a></li>
<li><a href="https://d2.naver.com/helloworld/19187" target="_blank" rel="noopener">한글 인코딩의 이해 1편: 한글 인코딩의 역사와 유니코드</a></li>
<li><a href="http://www.allofsoftware.net/2015/06/6.html" target="_blank" rel="noopener">유니코드는 어떻게 탄생했을까? (6) - All of Software</a></li>
<li><a href="http://doc.kldp.org/Translations/html/UTF8-Unicode-KLDP/UTF8-Unicode-KLDP-6.html" target="_blank" rel="noopener">유니코드와 ISO 10646 사이의 차이점은 무엇인가?</a></li>
<li><a href="https://ko.wikipedia.org/wiki/%EB%A1%9C%EC%BC%80%EC%9D%BC" target="_blank" rel="noopener">wikipedia</a></li>
<li><a href="http://coffeenix.net/doc/misc/locale.html" target="_blank" rel="noopener">로케일(Locale)에 관하여…</a></li>
<li><a href="https://ko.wikipedia.org/wiki/%EB%A1%9C%EC%BC%80%EC%9D%BC" target="_blank" rel="noopener">wikipedia</a></li>
<li><a href="https://araikuma.tistory.com/599" target="_blank" rel="noopener">프로그램 개발 지식 공유</a></a></li>
<li><a href=""https://m.blog.naver.com/PostView.nhn?blogId=assortrockp&logNo=220764067554&proxyReferer=https%3A%2F%2Fwww.google.com%2F"">c++ 및 api 언어설정에 대하여 알아보자.</a></li>
<li><a href="https://m.blog.naver.com/PostView.nhn?blogId=tipsware&logNo=221235708158&proxyReferer=https%3A%2F%2Fwww.google.com%2F" target="_blank" rel="noopener">멀티 바이트 문자와 지역(국가)코드</a></li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <categories>
        <category>Programming</category>
        <category>Cpp</category>
      </categories>
      <tags>
        <tag>Cpp</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/12/19/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css" /><div class=".article-gallery"<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <tags>
        <tag>TAG-PLUGINS</tag>
      </tags>
  </entry>
</search>
